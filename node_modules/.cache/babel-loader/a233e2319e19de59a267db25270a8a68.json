{"remainingRequest":"C:\\Users\\Yang\\Desktop\\新增資料夾\\竞猜可换色板\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Yang\\Desktop\\新增資料夾\\竞猜可换色板\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Yang\\Desktop\\新增資料夾\\竞猜可换色板\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Yang\\Desktop\\新增資料夾\\竞猜可换色板\\src\\views\\personalCenter\\Questionnaire.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Yang\\Desktop\\新增資料夾\\竞猜可换色板\\src\\views\\personalCenter\\Questionnaire.vue","mtime":1606980099421},{"path":"C:\\Users\\Yang\\Desktop\\新增資料夾\\竞猜可换色板\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Yang\\Desktop\\新增資料夾\\竞猜可换色板\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Yang\\Desktop\\新增資料夾\\竞猜可换色板\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Yang\\Desktop\\新增資料夾\\竞猜可换色板\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.split\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\Yang\\\\Desktop\\\\\\u65B0\\u589E\\u8CC7\\u6599\\u593E\\\\\\u7ADE\\u731C\\u53EF\\u6362\\u8272\\u677F\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { apiGetQuestionnaireAndQAList, apiAddQuestionnaireFeedback } from \"@/api/Questionnaire.js\";\nimport back from \"@/components/Botton/back.vue\";\nexport default {\n  components: {\n    back: back\n  },\n  data: function data() {\n    return {\n      questionListData: {\n        id: 0,\n        index: 1,\n        count: 10\n      },\n      questionList: [],\n      newQuestionList: [],\n      textContent: \"\",\n      textLen: 0,\n      questionIndex: 0,\n      uid: \"\",\n      submitData: [],\n      answerIdList: [],\n      contentStrList: []\n    };\n  },\n  created: function () {\n    var _created = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee() {\n      var _this = this;\n\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              this.uid = localStorage.getItem(\"UId\");\n              _context.next = 3;\n              return apiGetQuestionnaireAndQAList(this.questionListData, true).then(function (res) {\n                _this.questionList = res;\n\n                _this.newQuestionListAry();\n              });\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    function created() {\n      return _created.apply(this, arguments);\n    }\n\n    return created;\n  }(),\n  methods: {\n    // 判斷API資料有幾道題目，生成幾個空陣列\n    newQuestionListAry: function newQuestionListAry() {\n      for (var i = 0; i < this.questionList.questionnaires.length; i++) {\n        this.newQuestionList.push([]);\n        this.questionList.questionnaires[i].IsChooseMore == 1 ? this.contentStrList.push([]) : this.contentStrList.push(\"\");\n        this.questionList.questionnaires[i].IsChooseMore == 1 ? this.answerIdList.push([]) : this.answerIdList.push(\"\");\n      }\n    },\n    // 判斷多選或單選\n    bindCheckBox: function bindCheckBox(i, index, e) {\n      this.questionIndex = i;\n\n      if (this.questionList.questionnaires[i].IsChooseMore === 0) {\n        if (e === true) {\n          this.submitData[i] = {\n            Id: 0,\n            Uid: this.uid,\n            QuestionnaireId: this.questionList.Id,\n            QuestionId: this.questionList.questionnaires[i].Id,\n            AnswerId: this.questionList.questionnaires[i].questionnaireAnswers[index].Id,\n            ContentStr: this.questionList.questionnaires[i].questionnaireAnswers[index].AnswerTxt\n          };\n\n          if (this.newQuestionList[i].length > 1) {\n            this.newQuestionList[i].splice(0, 1);\n          }\n        } else {\n          this.submitData[i] = \"\";\n        }\n      }\n\n      if (this.questionList.questionnaires[i].IsChooseMore === 1) {\n        var answerId = \"\";\n        var contentStr = \"\";\n        answerId = String(this.questionList.questionnaires[i].questionnaireAnswers[index].Id);\n        contentStr = this.questionList.questionnaires[i].questionnaireAnswers[index].AnswerTxt;\n\n        if (e === true) {\n          if (typeof this.contentStrList[i] === \"string\") {\n            this.contentStrList[i] = this.contentStrList[i].split(\",\");\n            this.contentStrList[i].push(contentStr);\n            this.contentStrList[i] = this.contentStrList[i].join(\",\");\n          } else {\n            this.contentStrList[i].push(contentStr);\n            this.contentStrList[i] = this.contentStrList[i].join(\",\");\n          }\n\n          if (typeof this.answerIdList[i] === \"string\") {\n            this.answerIdList[i] = this.answerIdList[i].split(\",\");\n            this.answerIdList[i].push(answerId);\n            this.answerIdList[i] = this.answerIdList[i].join(\",\");\n          } else {\n            this.answerIdList[i].push(answerId);\n            this.answerIdList[i] = this.answerIdList[i].join(\",\");\n          }\n        } else {\n          if (typeof this.contentStrList[i] === \"string\") {\n            this.contentStrList[i] = this.contentStrList[i].split(\",\");\n\n            if (this.contentStrList[i].indexOf(contentStr) >= 0) {\n              this.contentStrList[i].splice(this.contentStrList[i].indexOf(contentStr), 1);\n              if (this.contentStrList[i].length > 0) this.contentStrList[i] = this.contentStrList[i].join(\",\");\n            }\n          }\n\n          if (typeof this.answerIdList[i] === \"string\") {\n            this.answerIdList[i] = this.answerIdList[i].split(\",\");\n\n            if (this.answerIdList[i].indexOf(answerId) >= 0) {\n              this.answerIdList[i].splice(this.answerIdList[i].indexOf(answerId), 1);\n              if (this.answerIdList[i].length > 0) this.answerIdList[i] = this.answerIdList[i].join(\",\");\n            }\n          }\n        }\n\n        this.submitData[i] = {\n          Id: 0,\n          Uid: this.uid,\n          QuestionnaireId: this.questionList.Id,\n          QuestionId: this.questionList.questionnaires[i].Id,\n          AnswerId: this.answerIdList[i],\n          ContentStr: this.contentStrList[i]\n        };\n\n        if (this.submitData[i].AnswerId == \"\") {\n          this.submitData[i] = \"\";\n        }\n      }\n    },\n    // 字數限制\n    textcontrol: function textcontrol(i) {\n      var len = this.textContent.length;\n      this.textLen = len;\n      this.submitData[i] = {\n        Id: 0,\n        Uid: this.uid,\n        QuestionnaireId: this.questionList.Id,\n        QuestionId: this.questionList.questionnaires[i].Id,\n        AnswerId: \"\",\n        ContentStr: this.textContent\n      };\n    },\n    // 送出\n    submit: function submit() {\n      var _this2 = this;\n\n      // this.questionList.questionnaires.length\n      var submitDataJSON;\n      var promise = new Promise(function (resolve, reject) {\n        //         for (let i = 0; i < this.newQuestionList.length - 1; i++) {\n        //           if (this.newQuestionList[i].length < 1) {\n        //             // alert(\"請填選答案\");\n        //             this.$message({\n        //               message: this.$t(\"FillAnswer\"),\n        //               type: \"error\",\n        //               center: true,\n        //               duration: 1200\n        //             });\n        // console.log(this.submitData)\n        //             return;\n        //           }\n        //         }\n        // if (this.textContent != \"\") {\n        //   this.submitData[this.submitData.length] = {\n        //     Id: 0,\n        //     Uid: this.uid,\n        //     QuestionnaireId: this.questionList.Id,\n        //     QuestionId: this.questionList.questionnaires[\n        //       this.questionList.questionnaires.length - 1\n        //     ].Id,\n        //     AnswerId: \"\",\n        //     ContentStr: this.textContent\n        //   };\n        // }\n        for (var i = 0; i < _this2.newQuestionList.length; i++) {\n          if (_this2.submitData[i] == undefined || _this2.submitData[i] == \"\") {\n            // alert(\"請填選答案\");\n            _this2.$message({\n              message: _this2.$t(\"FillAnswer\"),\n              type: \"error\",\n              center: true,\n              duration: 1200\n            });\n\n            return;\n          }\n        }\n\n        resolve();\n      });\n      promise.then(function () {\n        submitDataJSON = _this2.submitData;\n        apiAddQuestionnaireFeedback(submitDataJSON, true).then(function (res) {\n          var messagePromise = new Promise(function (resolve, reject) {\n            if (Math.abs(res.Code) >= 600) {\n              _this2.$message({\n                message: res.Message,\n                type: \"warning\",\n                center: true,\n                duration: 1800\n              });\n            } else {\n              _this2.$message({\n                message: _this2.$t(\"SubmittedSuccessfully\"),\n                type: \"success\",\n                center: true,\n                duration: 1800\n              });\n            }\n\n            resolve();\n          });\n          messagePromise.then(function () {\n            history.back();\n          });\n        });\n      });\n    }\n  }\n};",{"version":3,"sources":["Questionnaire.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <main class=\"questionnaire\" ref=\"cont\" style=\"-webkit-overflow-scrolling: touch;\">\r\n    <div class=\"questionnaire-header\">\r\n      <back class=\"back-icon img-he\"></back>\r\n      <h3>{{ $t(\"Questionnaire\") }}</h3>\r\n    </div>\r\n    <div class=\"title\">\r\n      <p class=\"title-big\" style=\"text-align: center;\">{{questionList.Questionnaire}}</p>\r\n    </div>\r\n    <div class=\"questionnaire-content\">\r\n      <div class=\"questionnaire-wrap\" v-for=\"(node, i) in questionList.questionnaires\">\r\n        <div v-if=\"node.IsChooseMore === 0 && node.Type === 0\">\r\n          <div class=\"questionnaire-topic\">\r\n            {{ (i+1) + \".\" + node.Title}} (\r\n            <span class=\"questionnaire-style\">{{ $t(\"Radio\") }}</span> )\r\n          </div>\r\n          <el-checkbox-group v-model=\"newQuestionList[i]\">\r\n            <el-checkbox\r\n              :label=\"answer.Id\"\r\n              @change=\"bindCheckBox(i,index,$event)\"\r\n              v-for=\"(answer, index) in node.questionnaireAnswers\"\r\n            >{{ answer.AnswerTxt}}</el-checkbox>\r\n          </el-checkbox-group>\r\n        </div>\r\n\r\n        <div v-if=\"node.IsChooseMore === 1 && node.Type === 0\">\r\n          <div class=\"questionnaire-topic\">\r\n            {{ (i+1) + \".\" + node.Title}}(\r\n            <span class=\"questionnaire-style\">{{ $t(\"MultipleChoice\") }}</span> )\r\n          </div>\r\n          <el-checkbox-group v-model=\"newQuestionList[i]\">\r\n            <el-checkbox\r\n              :label=\"answer.Id\"\r\n              @change=\"bindCheckBox(i,index,$event)\"\r\n              v-for=\"(answer, index) in node.questionnaireAnswers\"\r\n            >{{ answer.AnswerTxt }}</el-checkbox>\r\n          </el-checkbox-group>\r\n        </div>\r\n\r\n        <!-- 您的建議 -->\r\n        <div class=\"suggestion-wrap\" v-if=\"node.Type === 1\">\r\n          <div class=\"questionnaire-topic\">{{ (i + 1) + \".\" +$t(\"YourSuggestion\")}}</div>\r\n          <textarea\r\n            class=\"textarea\"\r\n            cols=\"50\"\r\n            rows=\"5\"\r\n            v-model=\"textContent\"\r\n            maxlength=\"50\"\r\n            @input=\"textcontrol(i)\"\r\n            :placeholder=\"$t('PleaseEnter')\"\r\n          ></textarea>\r\n          <span class=\"text-len\">{{ textLen + \"/50\"}}</span>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- 提交按鈕 -->\r\n      <div type=\"submit\" class=\"submit\" @click=\"submit()\">{{ $t(\"Submit\") }}</div>\r\n    </div>\r\n  </main>\r\n</template>\r\n\r\n<script>\r\nimport {\r\n  apiGetQuestionnaireAndQAList,\r\n  apiAddQuestionnaireFeedback\r\n} from \"@/api/Questionnaire.js\";\r\nimport back from \"@/components/Botton/back.vue\";\r\nexport default {\r\n  components: {\r\n    back\r\n  },\r\n  data() {\r\n    return {\r\n      questionListData: {\r\n        id: 0,\r\n        index: 1,\r\n        count: 10\r\n      },\r\n      questionList: [],\r\n      newQuestionList: [],\r\n      textContent: \"\",\r\n      textLen: 0,\r\n      questionIndex: 0,\r\n      uid: \"\",\r\n      submitData: [],\r\n      answerIdList: [],\r\n      contentStrList: []\r\n    };\r\n  },\r\n  async created() {\r\n    this.uid = localStorage.getItem(\"UId\");\r\n    await apiGetQuestionnaireAndQAList(this.questionListData, true).then(\r\n      res => {\r\n        this.questionList = res;\r\n        this.newQuestionListAry();\r\n      }\r\n    );\r\n  },\r\n  methods: {\r\n    // 判斷API資料有幾道題目，生成幾個空陣列\r\n    newQuestionListAry() {\r\n      for (let i = 0; i < this.questionList.questionnaires.length; i++) {\r\n        this.newQuestionList.push([]);\r\n        this.questionList.questionnaires[i].IsChooseMore == 1 ? this.contentStrList.push([]) : this.contentStrList.push(\"\")\r\n        this.questionList.questionnaires[i].IsChooseMore == 1 ? this.answerIdList.push([]) : this.answerIdList.push(\"\")\r\n      }\r\n    },\r\n\r\n    // 判斷多選或單選\r\n    bindCheckBox(i, index, e) {\r\n      this.questionIndex = i;\r\n      if (this.questionList.questionnaires[i].IsChooseMore === 0) {\r\n        if (e === true) {\r\n          this.submitData[i] = {\r\n            Id: 0,\r\n            Uid: this.uid,\r\n            QuestionnaireId: this.questionList.Id,\r\n            QuestionId: this.questionList.questionnaires[i].Id,\r\n            AnswerId: this.questionList.questionnaires[i].questionnaireAnswers[\r\n              index\r\n            ].Id,\r\n            ContentStr: this.questionList.questionnaires[i]\r\n              .questionnaireAnswers[index].AnswerTxt\r\n          };\r\n          if (this.newQuestionList[i].length > 1) {\r\n            this.newQuestionList[i].splice(0, 1);\r\n          }\r\n        } else {\r\n          this.submitData[i] = \"\";\r\n        }\r\n      }\r\n      if (this.questionList.questionnaires[i].IsChooseMore === 1) {\r\n        let answerId = \"\";\r\n        let contentStr = \"\";\r\n        answerId = String(\r\n          this.questionList.questionnaires[i].questionnaireAnswers[index].Id\r\n        );\r\n        contentStr = this.questionList.questionnaires[i].questionnaireAnswers[\r\n          index\r\n        ].AnswerTxt;\r\n        if (e === true) {\r\n          if (typeof this.contentStrList[i] === \"string\") {\r\n            this.contentStrList[i] = this.contentStrList[i].split(\",\");\r\n            this.contentStrList[i].push(contentStr);\r\n            this.contentStrList[i] = this.contentStrList[i].join(\",\");\r\n          } else {\r\n            this.contentStrList[i].push(contentStr);\r\n            this.contentStrList[i] = this.contentStrList[i].join(\",\");\r\n          }\r\n\r\n          if (typeof this.answerIdList[i] === \"string\") {\r\n            this.answerIdList[i] = this.answerIdList[i].split(\",\");\r\n            this.answerIdList[i].push(answerId);\r\n            this.answerIdList[i] = this.answerIdList[i].join(\",\");\r\n          } else {\r\n            this.answerIdList[i].push(answerId);\r\n            this.answerIdList[i] = this.answerIdList[i].join(\",\");\r\n          }\r\n        } else {\r\n          if (typeof this.contentStrList[i] === \"string\") {\r\n            this.contentStrList[i] = this.contentStrList[i].split(\",\");\r\n\r\n            if (this.contentStrList[i].indexOf(contentStr) >= 0) {\r\n              this.contentStrList[i].splice(\r\n                this.contentStrList[i].indexOf(contentStr),\r\n                1\r\n              );\r\n              if (this.contentStrList[i].length > 0)\r\n                this.contentStrList[i] = this.contentStrList[i].join(\",\");\r\n            }\r\n          }\r\n          if (typeof this.answerIdList[i] === \"string\") {\r\n            this.answerIdList[i] = this.answerIdList[i].split(\",\");\r\n\r\n            if (this.answerIdList[i].indexOf(answerId) >= 0) {\r\n              this.answerIdList[i].splice(this.answerIdList[i].indexOf(answerId), 1);\r\n              if (this.answerIdList[i].length > 0)\r\n                this.answerIdList[i] = this.answerIdList[i].join(\",\");\r\n            }\r\n          }\r\n        }\r\n        this.submitData[i] = {\r\n          Id: 0,\r\n          Uid: this.uid,\r\n          QuestionnaireId: this.questionList.Id,\r\n          QuestionId: this.questionList.questionnaires[i].Id,\r\n          AnswerId: this.answerIdList[i],\r\n          ContentStr: this.contentStrList[i]\r\n        };\r\n\r\n        if (this.submitData[i].AnswerId == \"\") {\r\n          this.submitData[i] = \"\";\r\n        }\r\n      }\r\n    },\r\n\r\n    // 字數限制\r\n    textcontrol(i) {\r\n      let len = this.textContent.length;\r\n      this.textLen = len;\r\n      this.submitData[i] = {\r\n        Id: 0,\r\n        Uid: this.uid,\r\n        QuestionnaireId: this.questionList.Id,\r\n        QuestionId: this.questionList.questionnaires[i].Id,\r\n        AnswerId: \"\",\r\n        ContentStr: this.textContent\r\n      };\r\n    },\r\n\r\n    // 送出\r\n    submit() {\r\n      // this.questionList.questionnaires.length\r\n      let submitDataJSON;\r\n      var promise = new Promise((resolve, reject) => {\r\n//         for (let i = 0; i < this.newQuestionList.length - 1; i++) {\r\n//           if (this.newQuestionList[i].length < 1) {\r\n//             // alert(\"請填選答案\");\r\n//             this.$message({\r\n//               message: this.$t(\"FillAnswer\"),\r\n//               type: \"error\",\r\n//               center: true,\r\n//               duration: 1200\r\n//             });\r\n// console.log(this.submitData)\r\n//             return;\r\n//           }\r\n//         }\r\n\r\n          // if (this.textContent != \"\") {\r\n          //   this.submitData[this.submitData.length] = {\r\n          //     Id: 0,\r\n          //     Uid: this.uid,\r\n          //     QuestionnaireId: this.questionList.Id,\r\n          //     QuestionId: this.questionList.questionnaires[\r\n          //       this.questionList.questionnaires.length - 1\r\n          //     ].Id,\r\n          //     AnswerId: \"\",\r\n          //     ContentStr: this.textContent\r\n          //   };\r\n          // }\r\n        for (let i = 0; i < this.newQuestionList.length; i++) {\r\n          if (this.submitData[i] == undefined || this.submitData[i] == \"\") {\r\n            // alert(\"請填選答案\");\r\n            this.$message({\r\n              message: this.$t(\"FillAnswer\"),\r\n              type: \"error\",\r\n              center: true,\r\n              duration: 1200\r\n            });\r\n            return;\r\n          }\r\n        }\r\n        resolve();\r\n      });\r\n\r\n      promise.then(() => {\r\n        submitDataJSON = this.submitData;\r\n        apiAddQuestionnaireFeedback(submitDataJSON, true).then(res => {\r\n          var messagePromise = new Promise((resolve, reject) => {\r\n            if (Math.abs(res.Code) >= 600) {\r\n              this.$message({\r\n                message: res.Message,\r\n                type: \"warning\",\r\n                center: true,\r\n                duration: 1800\r\n              });\r\n            } else {\r\n              this.$message({\r\n                message: this.$t(\"SubmittedSuccessfully\"),\r\n                type: \"success\",\r\n                center: true,\r\n                duration: 1800\r\n              });\r\n            }\r\n            resolve();\r\n          });\r\n          messagePromise.then(() => {\r\n            history.back();\r\n          });\r\n        });\r\n      });\r\n    }\r\n  }\r\n};\r\n</script>"],"sourceRoot":"src/views/personalCenter"}]}