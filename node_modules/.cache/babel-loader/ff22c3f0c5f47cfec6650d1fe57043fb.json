{"remainingRequest":"C:\\work\\竞猜可换色板\\node_modules\\thread-loader\\dist\\cjs.js!C:\\work\\竞猜可换色板\\node_modules\\babel-loader\\lib\\index.js!C:\\work\\竞猜可换色板\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\work\\竞猜可换色板\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\work\\竞猜可换色板\\src\\views\\personalCenter\\Questionnaire.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\work\\竞猜可换色板\\src\\views\\personalCenter\\Questionnaire.vue","mtime":1604904546431},{"path":"C:\\work\\竞猜可换色板\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\work\\竞猜可换色板\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\work\\竞猜可换色板\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\work\\竞猜可换色板\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\work\\竞猜可换色板\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.split\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:\\\\work\\\\\\u7ADE\\u731C\\u53EF\\u6362\\u8272\\u677F\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { apiGetQuestionnaireAndQAList, apiAddQuestionnaireFeedback } from \"@/api/Questionnaire.js\";\nimport back from \"@/components/Botton/back.vue\";\nexport default {\n  components: {\n    back: back\n  },\n  data: function data() {\n    return {\n      questionListData: {\n        id: 0,\n        index: 1,\n        count: 10\n      },\n      questionList: [],\n      newQuestionList: [],\n      textContent: \"\",\n      textLen: 0,\n      questionIndex: 0,\n      uid: \"\",\n      submitData: [],\n      answerIdList: [],\n      contentStrList: []\n    };\n  },\n  created: function () {\n    var _created = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee() {\n      var _this = this;\n\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              this.uid = localStorage.getItem(\"UId\");\n              _context.next = 3;\n              return apiGetQuestionnaireAndQAList(this.questionListData, true).then(function (res) {\n                _this.questionList = res;\n\n                _this.newQuestionListAry();\n              });\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    function created() {\n      return _created.apply(this, arguments);\n    }\n\n    return created;\n  }(),\n  methods: {\n    // 判斷API資料有幾道題目，生成幾個空陣列\n    newQuestionListAry: function newQuestionListAry() {\n      for (var i = 0; i < this.questionList.questionnaires.length; i++) {\n        this.newQuestionList.push([]);\n        this.questionList.questionnaires[i].IsChooseMore == 1 ? this.contentStrList.push([]) : this.contentStrList.push(\"\");\n        this.questionList.questionnaires[i].IsChooseMore == 1 ? this.answerIdList.push([]) : this.answerIdList.push(\"\");\n      }\n    },\n    // 判斷多選或單選\n    bindCheckBox: function bindCheckBox(i, index, e) {\n      this.questionIndex = i;\n\n      if (this.questionList.questionnaires[i].IsChooseMore === 0) {\n        if (e === true) {\n          this.submitData[i] = {\n            Id: 0,\n            Uid: this.uid,\n            QuestionnaireId: this.questionList.Id,\n            QuestionId: this.questionList.questionnaires[i].Id,\n            AnswerId: this.questionList.questionnaires[i].questionnaireAnswers[index].Id,\n            ContentStr: this.questionList.questionnaires[i].questionnaireAnswers[index].AnswerTxt\n          };\n\n          if (this.newQuestionList[i].length > 1) {\n            this.newQuestionList[i].splice(0, 1);\n          }\n        } else {\n          this.submitData[i] = \"\";\n        }\n      }\n\n      if (this.questionList.questionnaires[i].IsChooseMore === 1) {\n        var answerId = \"\";\n        var contentStr = \"\";\n        answerId = String(this.questionList.questionnaires[i].questionnaireAnswers[index].Id);\n        contentStr = this.questionList.questionnaires[i].questionnaireAnswers[index].AnswerTxt;\n\n        if (e === true) {\n          if (typeof this.contentStrList[i] === \"string\") {\n            this.contentStrList[i] = this.contentStrList[i].split(\",\");\n            this.contentStrList[i].push(contentStr);\n            this.contentStrList[i] = this.contentStrList[i].join(\",\");\n          } else {\n            this.contentStrList[i].push(contentStr);\n            this.contentStrList[i] = this.contentStrList[i].join(\",\");\n          }\n\n          if (typeof this.answerIdList[i] === \"string\") {\n            this.answerIdList[i] = this.answerIdList[i].split(\",\");\n            this.answerIdList[i].push(answerId);\n            this.answerIdList[i] = this.answerIdList[i].join(\",\");\n          } else {\n            this.answerIdList[i].push(answerId);\n            this.answerIdList[i] = this.answerIdList[i].join(\",\");\n          }\n        } else {\n          if (typeof this.contentStrList[i] === \"string\") {\n            this.contentStrList[i] = this.contentStrList[i].split(\",\");\n\n            if (this.contentStrList[i].indexOf(contentStr) >= 0) {\n              this.contentStrList[i].splice(this.contentStrList[i].indexOf(contentStr), 1);\n              if (this.contentStrList[i].length > 0) this.contentStrList[i] = this.contentStrList[i].join(\",\");\n            }\n          }\n\n          if (typeof this.answerIdList[i] === \"string\") {\n            this.answerIdList[i] = this.answerIdList[i].split(\",\");\n\n            if (this.answerIdList[i].indexOf(answerId) >= 0) {\n              this.answerIdList[i].splice(this.answerIdList[i].indexOf(answerId), 1);\n              if (this.answerIdList[i].length > 0) this.answerIdList[i] = this.answerIdList[i].join(\",\");\n            }\n          }\n        }\n\n        this.submitData[i] = {\n          Id: 0,\n          Uid: this.uid,\n          QuestionnaireId: this.questionList.Id,\n          QuestionId: this.questionList.questionnaires[i].Id,\n          AnswerId: this.answerIdList[i],\n          ContentStr: this.contentStrList[i]\n        };\n\n        if (this.submitData[i].AnswerId == \"\") {\n          this.submitData[i] = \"\";\n        }\n      }\n    },\n    // 字數限制\n    textcontrol: function textcontrol(i) {\n      var len = this.textContent.length;\n      this.textLen = len;\n      this.submitData[i] = {\n        Id: 0,\n        Uid: this.uid,\n        QuestionnaireId: this.questionList.Id,\n        QuestionId: this.questionList.questionnaires[i].Id,\n        AnswerId: \"\",\n        ContentStr: this.textContent\n      };\n    },\n    // 送出\n    submit: function submit() {\n      var _this2 = this;\n\n      // this.questionList.questionnaires.length\n      var submitDataJSON;\n      var promise = new Promise(function (resolve, reject) {\n        //         for (let i = 0; i < this.newQuestionList.length - 1; i++) {\n        //           if (this.newQuestionList[i].length < 1) {\n        //             // alert(\"請填選答案\");\n        //             this.$message({\n        //               message: this.$t(\"FillAnswer\"),\n        //               type: \"error\",\n        //               center: true,\n        //               duration: 1200\n        //             });\n        // console.log(this.submitData)\n        //             return;\n        //           }\n        //         }\n        // if (this.textContent != \"\") {\n        //   this.submitData[this.submitData.length] = {\n        //     Id: 0,\n        //     Uid: this.uid,\n        //     QuestionnaireId: this.questionList.Id,\n        //     QuestionId: this.questionList.questionnaires[\n        //       this.questionList.questionnaires.length - 1\n        //     ].Id,\n        //     AnswerId: \"\",\n        //     ContentStr: this.textContent\n        //   };\n        // }\n        for (var i = 0; i < _this2.newQuestionList.length; i++) {\n          if (_this2.submitData[i] == undefined || _this2.submitData[i] == \"\") {\n            // alert(\"請填選答案\");\n            _this2.$message({\n              message: _this2.$t(\"FillAnswer\"),\n              type: \"error\",\n              center: true,\n              duration: 1200\n            });\n\n            return;\n          }\n        }\n\n        resolve();\n      });\n      promise.then(function () {\n        submitDataJSON = _this2.submitData;\n        apiAddQuestionnaireFeedback(submitDataJSON, true).then(function (res) {\n          var messagePromise = new Promise(function (resolve, reject) {\n            if (res.Code == \"600\") {\n              _this2.$message({\n                message: res.Message,\n                type: \"warning\",\n                center: true,\n                duration: 1800\n              });\n            } else {\n              _this2.$message({\n                message: _this2.$t(\"SubmittedSuccessfully\"),\n                type: \"success\",\n                center: true,\n                duration: 1800\n              });\n            }\n\n            resolve();\n          });\n          messagePromise.then(function () {\n            history.back();\n          });\n        });\n      });\n    }\n  }\n};",null]}