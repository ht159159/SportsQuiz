{"remainingRequest":"C:\\Users\\Yang\\Desktop\\新增資料夾\\竞猜可换色板\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\Yang\\Desktop\\新增資料夾\\竞猜可换色板\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Yang\\Desktop\\新增資料夾\\竞猜可换色板\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Yang\\Desktop\\新增資料夾\\竞猜可换色板\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Yang\\Desktop\\新增資料夾\\竞猜可换色板\\src\\components\\FlowAd.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Yang\\Desktop\\新增資料夾\\竞猜可换色板\\src\\components\\FlowAd.vue","mtime":1608885922143},{"path":"C:\\Users\\Yang\\Desktop\\新增資料夾\\竞猜可换色板\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Yang\\Desktop\\新增資料夾\\竞猜可换色板\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Yang\\Desktop\\新增資料夾\\竞猜可换色板\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Yang\\Desktop\\新增資料夾\\竞猜可换色板\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Yang\\Desktop\\新增資料夾\\竞猜可换色板\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\Yang\\\\Desktop\\\\\\u65B0\\u589E\\u8CC7\\u6599\\u593E\\\\\\u7ADE\\u731C\\u53EF\\u6362\\u8272\\u677F\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport model from \"@/components/model\";\nimport { apiGetFlowAdByType, apiWatchedFlowAd } from \"@/api/FlowAd.js\";\nexport default {\n  props: {\n    isOpenAd: Boolean,\n    adTypeId: Number,\n    AdObj: Object // isFinished: Boolean\n\n  },\n  components: {\n    model: model\n  },\n  watch: {\n    isOpenAd: function isOpenAd(bool) {\n      if (bool) {\n        this.getAdByType();\n      }\n    }\n  },\n  data: function data() {\n    return {\n      isOpen: this.isOpenAd,\n      adType: 0,\n      flowAdId: undefined,\n      isDataLoaded: true,\n      watchTime: 0,\n      FlowAdUrl: \"\",\n      openAdIframe: false,\n      restTime: 0,\n      isTimeUp: false,\n      timer: \"\",\n      dataLen: undefined,\n      isFasilAd: false,\n      isSucessAd: false,\n      reward: \"\",\n      isFinish: false,\n      lang: \"\"\n    };\n  },\n  created: function created() {\n    this.lang = JSON.parse(localStorage.getItem(\"lang\")).tag;\n  },\n  methods: {\n    // 獲取廣告\n    getAdByType: function () {\n      var _getAdByType = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        var len;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                len = this.AdObj.Id;\n                this.dataLen = len;\n                this.flowAdId = this.AdObj.Id;\n                this.watchTime = this.AdObj.WatchTime;\n                this.FlowAdUrl = this.AdObj.FlowAdUrl;\n                this.reward = this.AdObj.Amount; // 取到廣告ID值之前按鈕先鎖住，等取到之後再解鎖\n\n                this.isDataLoaded = false;\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function getAdByType() {\n        return _getAdByType.apply(this, arguments);\n      }\n\n      return getAdByType;\n    }(),\n    // 取消觀看廣告按鈕\n    cancelBtn: function cancelBtn() {\n      this.isOpen = false;\n      this.$emit(\"update:isOpenAd\", this.isOpen);\n    },\n    // 確認觀看廣告按鈕\n    confirmBtnEvent: function () {\n      var _confirmBtnEvent = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2() {\n        var vm, m;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                this.isOpen = false;\n                this.$emit(\"update:isOpenAd\", this.isOpen);\n\n                if (this.dataLen > 0) {\n                  this.openAdIframe = true;\n                  this.countDownTimer();\n                } else {\n                  vm = this;\n                  m = vm.$message({\n                    message: \"目前無廣告\",\n                    duration: 3000,\n                    type: \"error\",\n                    center: true\n                  });\n                  setTimeout(function () {\n                    return m.close();\n                  }, 2000);\n                }\n\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function confirmBtnEvent() {\n        return _confirmBtnEvent.apply(this, arguments);\n      }\n\n      return confirmBtnEvent;\n    }(),\n    // 計時器\n    countDownTimer: function countDownTimer() {\n      var _this = this;\n\n      this.isTimeUp = false;\n      this.timer = \"\";\n      clearInterval(this.timer);\n      this.restTime = this.watchTime;\n      this.timer = setInterval(function () {\n        if (_this.restTime == 0) {\n          _this.isTimeUp = true;\n          return;\n        }\n\n        _this.restTime = _this.restTime - 1;\n      }, 1000);\n    },\n    // 點擊關閉廣告\n    closeAd: function closeAd() {\n      var _this2 = this;\n\n      var data = {\n        Id: this.flowAdId\n      };\n      apiWatchedFlowAd(data, true).then(function (res) {\n        // 清除計時器\n        if (_this2.isFasilAd == false) {\n          clearInterval(_this2.timer);\n          _this2.timer = \"\";\n        } // 觀看完成成功 & 失敗情況\n\n\n        if (Math.abs(res.Code) >= 600) {\n          _this2.isFasilAd = true;\n        } else {\n          _this2.isFasilAd = false;\n          _this2.openAdIframe = false;\n          _this2.isSucessAd = true;\n        }\n      });\n    },\n    // 觀看廣告失敗取消按鈕\n    failCancelBtn: function failCancelBtn() {\n      this.isFasilAd = false;\n      this.openAdIframe = false;\n      clearInterval(this.timer);\n    },\n    // 觀看廣告失敗確認按鈕\n    failConfirmBtn: function failConfirmBtn() {\n      var _this3 = this;\n\n      this.isFasilAd = false;\n      this.openAdIframe = false;\n      this.getAdByType().then(function () {\n        _this3.confirmBtnEvent();\n      });\n    }\n  },\n  // 離開本頁時清除計時器\n  destroyed: function destroyed() {\n    this.timer = \"\";\n    clearInterval(this.timer);\n  }\n};",null]}