{"remainingRequest":"C:\\work\\竞猜可换色板\\node_modules\\babel-loader\\lib\\index.js!C:\\work\\竞猜可换色板\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\work\\竞猜可换色板\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\work\\竞猜可换色板\\src\\views\\Home.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\work\\竞猜可换色板\\src\\views\\Home.vue","mtime":1606980098046},{"path":"C:\\work\\竞猜可换色板\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\work\\竞猜可换色板\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\work\\竞猜可换色板\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\work\\竞猜可换色板\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport CardComp from \"@/components/MainGame.vue\";\nimport CardFoot from \"@/components/MoreGame.vue\";\nimport \"../style/addtohomescreen.css\";\nimport ModalSignIn from \"@/components/Modal/SignIn.vue\";\nexport default {\n  name: \"mainHome\",\n  components: {\n    ModalSignIn: ModalSignIn,\n    CardComp: CardComp,\n    CardFoot: CardFoot\n  },\n  created: function created() {\n    if (window.plus) {\n      this.checkUpdate();\n    } else {\n      document.addEventListener(\"plusready\", this.checkUpdate, false);\n    }\n  },\n  data: function data() {\n    return {\n      isSignIn: false,\n      isLogin: false\n    };\n  },\n  methods: {\n    checkUpdate: function checkUpdate() {\n      var vm = this; // 检查当前版本，与从后台获取的版本作比较，以此判断是否更新\n\n      plus.runtime.getProperty(plus.runtime.appid, function (inf) {\n        // 当前版本\n        var wgtVersion = inf.version;\n        var xhr = new plus.net.XMLHttpRequest();\n\n        xhr.onreadystatechange = function () {\n          switch (xhr.readyState) {\n            case 0:\n              //alert( \"xhr请求已初始化\" );\n              break;\n\n            case 1:\n              //alert( \"xhr请求已打开\" );\n              break;\n\n            case 2:\n              //alert( \"xhr请求已发送\" );\n              break;\n\n            case 3:\n              //alert( \"xhr请求已响应\");\n              break;\n\n            case 4:\n              if (xhr.status == 200) {\n                //alert( \"xhr请求成功：\"+xhr.responseText );\n                //alert(\"服务器端版本：\" + JSON.parse(xhr.responseText).version);\n                var data = JSON.parse(xhr.responseText); // 如果有新版本，则提示需要更新\n\n                if (data.version > wgtVersion) {\n                  //alert(\"本地版本：\" + wgtVersion);\n                  document.getElementById(\"dMask\").style.display = \"block\";\n                  plus.nativeUI.alert(\"发现新版本，点击确定开始更新！\\r\\n更新说明：\" + data.comment, function () {\n                    document.getElementById(\"d1\").style.display = \"block\";\n                    vm.downloadWgt(data.url, data.version); // 下载wgt方法\n                  });\n                } else {\n                  return;\n                }\n              } else {\n                alert(\"xhr请求失败：\" + xhr.readyState);\n              }\n\n              break;\n\n            default:\n              break;\n          }\n        };\n\n        xhr.open(\"GET\", \"https://cg-client.linsio.cn/app/check.json?t=\" + new Date().getTime());\n        xhr.send();\n      });\n    },\n    closeMask: function closeMask() {\n      document.getElementById(\"d1\").style.display = \"none\";\n      document.getElementById(\"dMask\").style.display = \"none\";\n    },\n    // 下载wgt方法\n    downloadWgt: function downloadWgt(url, version) {\n      var vm = this; // 更新文件 wgt 文件地址\n\n      var wgtUrl = url + \"?v=\" + version; //plus.nativeUI.showWaiting(\"正在更新...\");\n\n      var downTask = plus.downloader.createDownload(wgtUrl, {\n        filename: \"_doc/update/\"\n      }, function (d, status) {\n        if (status == 200) {\n          //console.log(\"下载更新包成功：\" + d.filename);\n          vm.installWgt(d.filename); // 安装wgt方法\n        } else {\n          //console.log(\"下载更新包失败！\");\n          plus.nativeUI.alert(\"下载更新包失败！\", function () {\n            vm.closeMask();\n          });\n        } //plus.nativeUI.closeWaiting();\n\n      });\n      downTask.start(); // 开启下载的任务\n\n      var prg = 0; //var showLoading = plus.nativeUI.showWaiting(\"正在下载\");  //创建一个showWaiting对象\n\n      downTask.addEventListener(\"statechanged\", function (task, status) {\n        //给下载任务设置一个监听 并根据状态  做操作\n        switch (task.state) {\n          case 1:\n            //showLoading.setTitle(\"正在连接到服务器\");\n            break;\n\n          case 2:\n            //showLoading.setTitle(\"已连接到服务器\");\n            break;\n\n          case 3:\n            prg = parseInt(parseFloat(task.downloadedSize) / parseFloat(task.totalSize) * 100); //if(prg % 10 == 0) {  // 让百分比 10% 增长，如果这里不这么处理  出现 堆栈内存溢出的问题，有知道原因的大神指导一下哈\n            //\tshowLoading.setTitle(\"更新文件已下载\" + prg + \"%\");\n            //}\n\n            var pg = document.getElementById(\"pg\");\n            var pgv = document.getElementById(\"pgv\");\n            var timer = setInterval(function () {\n              if (prg !== 100) {\n                pg.value = prg;\n                pgv.innerHTML = \"进度：\" + prg + \"%\";\n              } else {\n                pgv.innerHTML = \"APP更新包下载完成\";\n                clearInterval(timer);\n              }\n            }, 100);\n            break;\n\n          case 4:\n            //plus.nativeUI.closeWaiting();\n            break;\n        }\n      });\n    },\n    // 安装wgt方法\n    installWgt: function installWgt(path) {\n      var vm = this; //plus.nativeUI.showWaiting(\"安装更新包文件...\");\n\n      plus.runtime.install(path, {\n        force: true\n      }, function () {\n        //plus.nativeUI.closeWaiting();\n        //console.log(\"安装更新包文件成功！\");\n        plus.nativeUI.alert(\"APP资源更新完成！\", function () {\n          vm.removeUpdateFile();\n        });\n      }, function (e) {\n        //plus.nativeUI.closeWaiting();\n        //console.log(\"安装更新包文件失败[\" + e.code + \"]：\" + e.message);\n        plus.nativeUI.alert(\"安装更新包文件失败[\" + e.code + \"]：\" + e.message, function () {\n          plus.runtime.restart();\n        });\n      });\n    },\n    removeUpdateFile: function removeUpdateFile() {\n      plus.io.requestFileSystem(plus.io.PRIVATE_DOC, function (fs) {\n        // remove the directory and all it's contents\n        fs.root.removeRecursively(function (removeentry) {\n          plus.runtime.restart();\n          console.log(\"Remove update pack Succeeded\");\n        }, function (e) {\n          plus.nativeUI.alert(e.message, function () {\n            plus.runtime.restart();\n          });\n        });\n      });\n    },\n    clearcaches: function clearcaches() {\n      plus.cache.calculate(function (size) {\n        //console.log(\"您目前的系统缓存为\" + parseFloat(size / (1024 * 1024)).toFixed(2) + \"M？\")\n        var sizeCache = size;\n        plus.nativeUI.confirm(\"您目前的系统缓存为\" + parseFloat(sizeCache / (1024 * 1024)).toFixed(2) + \"M？\", function (e) {\n          if (e.index == 1) {} else {\n            plus.cache.clear(function () {\n              alert(\"缓存清除完毕\");\n              plus.runtime.restart();\n            });\n          }\n        }, \"清除缓存\", [\"确认\", \"取消\"]);\n      });\n    }\n  }\n};",{"version":3,"sources":["Home.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;AAgBA,OAAA,QAAA,MAAA,2BAAA;AACA,OAAA,QAAA,MAAA,2BAAA;AACA;AAEA,OAAA,WAAA,MAAA,+BAAA;AACA,eAAA;AACA,EAAA,IAAA,EAAA,UADA;AAEA,EAAA,UAAA,EAAA;AACA,IAAA,WAAA,EAAA,WADA;AAEA,IAAA,QAAA,EAAA,QAFA;AAGA,IAAA,QAAA,EAAA;AAHA,GAFA;AAOA,EAAA,OAPA,qBAOA;AACA,QAAA,MAAA,CAAA,IAAA,EAAA;AACA,WAAA,WAAA;AACA,KAFA,MAEA;AACA,MAAA,QAAA,CAAA,gBAAA,CAAA,WAAA,EAAA,KAAA,WAAA,EAAA,KAAA;AACA;AACA,GAbA;AAcA,EAAA,IAdA,kBAcA;AACA,WAAA;AACA,MAAA,QAAA,EAAA,KADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAAA;AAIA,GAnBA;AAoBA,EAAA,OAAA,EAAA;AACA,IAAA,WADA,yBACA;AACA,UAAA,EAAA,GAAA,IAAA,CADA,CAEA;;AACA,MAAA,IAAA,CAAA,OAAA,CAAA,WAAA,CAAA,IAAA,CAAA,OAAA,CAAA,KAAA,EAAA,UAAA,GAAA,EAAA;AACA;AACA,YAAA,UAAA,GAAA,GAAA,CAAA,OAAA;AACA,YAAA,GAAA,GAAA,IAAA,IAAA,CAAA,GAAA,CAAA,cAAA,EAAA;;AACA,QAAA,GAAA,CAAA,kBAAA,GAAA,YAAA;AACA,kBAAA,GAAA,CAAA,UAAA;AACA,iBAAA,CAAA;AACA;AACA;;AACA,iBAAA,CAAA;AACA;AACA;;AACA,iBAAA,CAAA;AACA;AACA;;AACA,iBAAA,CAAA;AACA;AACA;;AACA,iBAAA,CAAA;AACA,kBAAA,GAAA,CAAA,MAAA,IAAA,GAAA,EAAA;AACA;AACA;AACA,oBAAA,IAAA,GAAA,IAAA,CAAA,KAAA,CAAA,GAAA,CAAA,YAAA,CAAA,CAHA,CAIA;;AACA,oBAAA,IAAA,CAAA,OAAA,GAAA,UAAA,EAAA;AACA;AACA,kBAAA,QAAA,CAAA,cAAA,CAAA,OAAA,EAAA,KAAA,CAAA,OAAA,GAAA,OAAA;AACA,kBAAA,IAAA,CAAA,QAAA,CAAA,KAAA,CACA,6BAAA,IAAA,CAAA,OADA,EAEA,YAAA;AACA,oBAAA,QAAA,CAAA,cAAA,CAAA,IAAA,EAAA,KAAA,CAAA,OAAA,GAAA,OAAA;AACA,oBAAA,EAAA,CAAA,WAAA,CAAA,IAAA,CAAA,GAAA,EAAA,IAAA,CAAA,OAAA,EAFA,CAEA;AACA,mBALA;AAQA,iBAXA,MAWA;AACA;AACA;AACA,eAnBA,MAmBA;AACA,gBAAA,KAAA,CAAA,aAAA,GAAA,CAAA,UAAA,CAAA;AACA;;AACA;;AACA;AACA;AAtCA;AAwCA,SAzCA;;AA0CA,QAAA,GAAA,CAAA,IAAA,CACA,KADA,EAEA,kDACA,IAAA,IAAA,GAAA,OAAA,EAHA;AAKA,QAAA,GAAA,CAAA,IAAA;AACA,OApDA;AAqDA,KAzDA;AA0DA,IAAA,SA1DA,uBA0DA;AACA,MAAA,QAAA,CAAA,cAAA,CAAA,IAAA,EAAA,KAAA,CAAA,OAAA,GAAA,MAAA;AACA,MAAA,QAAA,CAAA,cAAA,CAAA,OAAA,EAAA,KAAA,CAAA,OAAA,GAAA,MAAA;AACA,KA7DA;AA+DA;AACA,IAAA,WAhEA,uBAgEA,GAhEA,EAgEA,OAhEA,EAgEA;AACA,UAAA,EAAA,GAAA,IAAA,CADA,CAEA;;AACA,UAAA,MAAA,GAAA,GAAA,GAAA,KAAA,GAAA,OAAA,CAHA,CAIA;;AACA,UAAA,QAAA,GAAA,IAAA,CAAA,UAAA,CAAA,cAAA,CACA,MADA,EAEA;AAAA,QAAA,QAAA,EAAA;AAAA,OAFA,EAGA,UAAA,CAAA,EAAA,MAAA,EAAA;AACA,YAAA,MAAA,IAAA,GAAA,EAAA;AACA;AACA,UAAA,EAAA,CAAA,UAAA,CAAA,CAAA,CAAA,QAAA,EAFA,CAEA;AACA,SAHA,MAGA;AACA;AACA,UAAA,IAAA,CAAA,QAAA,CAAA,KAAA,CAAA,UAAA,EAAA,YAAA;AACA,YAAA,EAAA,CAAA,SAAA;AACA,WAFA;AAGA,SATA,CAUA;;AACA,OAdA,CAAA;AAiBA,MAAA,QAAA,CAAA,KAAA,GAtBA,CAsBA;;AAEA,UAAA,GAAA,GAAA,CAAA,CAxBA,CAyBA;;AACA,MAAA,QAAA,CAAA,gBAAA,CAAA,cAAA,EAAA,UAAA,IAAA,EAAA,MAAA,EAAA;AACA;AACA,gBAAA,IAAA,CAAA,KAAA;AACA,eAAA,CAAA;AACA;AACA;;AACA,eAAA,CAAA;AACA;AACA;;AACA,eAAA,CAAA;AACA,YAAA,GAAA,GAAA,QAAA,CACA,UAAA,CAAA,IAAA,CAAA,cAAA,CAAA,GAAA,UAAA,CAAA,IAAA,CAAA,SAAA,CAAA,GAAA,GADA,CAAA,CADA,CAIA;AACA;AACA;;AACA,gBAAA,EAAA,GAAA,QAAA,CAAA,cAAA,CAAA,IAAA,CAAA;AACA,gBAAA,GAAA,GAAA,QAAA,CAAA,cAAA,CAAA,KAAA,CAAA;AACA,gBAAA,KAAA,GAAA,WAAA,CAAA,YAAA;AACA,kBAAA,GAAA,KAAA,GAAA,EAAA;AACA,gBAAA,EAAA,CAAA,KAAA,GAAA,GAAA;AACA,gBAAA,GAAA,CAAA,SAAA,GAAA,QAAA,GAAA,GAAA,GAAA;AACA,eAHA,MAGA;AACA,gBAAA,GAAA,CAAA,SAAA,GAAA,YAAA;AACA,gBAAA,aAAA,CAAA,KAAA,CAAA;AACA;AACA,aARA,EAQA,GARA,CAAA;AASA;;AACA,eAAA,CAAA;AACA;AACA;AA5BA;AA8BA,OAhCA;AAiCA,KA3HA;AA6HA;AACA,IAAA,UA9HA,sBA8HA,IA9HA,EA8HA;AACA,UAAA,EAAA,GAAA,IAAA,CADA,CAEA;;AACA,MAAA,IAAA,CAAA,OAAA,CAAA,OAAA,CACA,IADA,EAEA;AAAA,QAAA,KAAA,EAAA;AAAA,OAFA,EAGA,YAAA;AACA;AACA;AACA,QAAA,IAAA,CAAA,QAAA,CAAA,KAAA,CAAA,YAAA,EAAA,YAAA;AACA,UAAA,EAAA,CAAA,gBAAA;AACA,SAFA;AAGA,OATA,EAUA,UAAA,CAAA,EAAA;AACA;AACA;AACA,QAAA,IAAA,CAAA,QAAA,CAAA,KAAA,CACA,eAAA,CAAA,CAAA,IAAA,GAAA,IAAA,GAAA,CAAA,CAAA,OADA,EAEA,YAAA;AACA,UAAA,IAAA,CAAA,OAAA,CAAA,OAAA;AACA,SAJA;AAMA,OAnBA;AAqBA,KAtJA;AAwJA,IAAA,gBAxJA,8BAwJA;AACA,MAAA,IAAA,CAAA,EAAA,CAAA,iBAAA,CAAA,IAAA,CAAA,EAAA,CAAA,WAAA,EAAA,UAAA,EAAA,EAAA;AACA;AACA,QAAA,EAAA,CAAA,IAAA,CAAA,iBAAA,CACA,UAAA,WAAA,EAAA;AACA,UAAA,IAAA,CAAA,OAAA,CAAA,OAAA;AACA,UAAA,OAAA,CAAA,GAAA,CAAA,8BAAA;AACA,SAJA,EAKA,UAAA,CAAA,EAAA;AACA,UAAA,IAAA,CAAA,QAAA,CAAA,KAAA,CAAA,CAAA,CAAA,OAAA,EAAA,YAAA;AACA,YAAA,IAAA,CAAA,OAAA,CAAA,OAAA;AACA,WAFA;AAGA,SATA;AAWA,OAbA;AAcA,KAvKA;AAyKA,IAAA,WAzKA,yBAyKA;AACA,MAAA,IAAA,CAAA,KAAA,CAAA,SAAA,CAAA,UAAA,IAAA,EAAA;AACA;AACA,YAAA,SAAA,GAAA,IAAA;AACA,QAAA,IAAA,CAAA,QAAA,CAAA,OAAA,CACA,cACA,UAAA,CAAA,SAAA,IAAA,OAAA,IAAA,CAAA,CAAA,CAAA,OAAA,CAAA,CAAA,CADA,GAEA,IAHA,EAIA,UAAA,CAAA,EAAA;AACA,cAAA,CAAA,CAAA,KAAA,IAAA,CAAA,EAAA,CACA,CADA,MACA;AACA,YAAA,IAAA,CAAA,KAAA,CAAA,KAAA,CAAA,YAAA;AACA,cAAA,KAAA,CAAA,QAAA,CAAA;AACA,cAAA,IAAA,CAAA,OAAA,CAAA,OAAA;AACA,aAHA;AAIA;AACA,SAZA,EAaA,MAbA,EAcA,CAAA,IAAA,EAAA,IAAA,CAdA;AAgBA,OAnBA;AAoBA;AA9LA;AApBA,CAAA","sourcesContent":["<template>\n  <main class=\"main mainHome\">\n    <card-comp></card-comp>\n    <modal-sign-in :showModal.sync=\"isSignIn\"></modal-sign-in>\n    <!-- <card-foot></card-foot> -->\n    <!-- 下面的组件 -->\n    <div class=\"mask\" id=\"dMask\" style=\"display: none;\"></div>\n    <div id=\"d1\" class=\"d1\" style=\"display: none;\">\n      <div class=\"d2\">APP更新中</div>\n      <p id=\"pgv\">进度：0%</p>\n      <progress id=\"pg\" max=\"100\" value=\"0\"></progress>\n    </div>\n  </main>\n</template>\n\n<script>\nimport CardComp from \"@/components/MainGame.vue\";\nimport CardFoot from \"@/components/MoreGame.vue\";\nimport \"../style/addtohomescreen.css\";\n\nimport ModalSignIn from \"@/components/Modal/SignIn.vue\";\nexport default {\n  name: \"mainHome\",\n  components: {\n    ModalSignIn,\n    CardComp,\n    CardFoot\n  },\n  created() {\n    if (window.plus) {\n      this.checkUpdate();\n    } else {\n      document.addEventListener(\"plusready\", this.checkUpdate, false);\n    }\n  },\n  data() {\n    return {\n      isSignIn: false,\n      isLogin: false\n    };\n  },\n  methods: {\n    checkUpdate() {\n      var vm = this;\n      // 检查当前版本，与从后台获取的版本作比较，以此判断是否更新\n      plus.runtime.getProperty(plus.runtime.appid, function(inf) {\n        // 当前版本\n        var wgtVersion = inf.version;\n        var xhr = new plus.net.XMLHttpRequest();\n        xhr.onreadystatechange = function() {\n          switch (xhr.readyState) {\n            case 0:\n              //alert( \"xhr请求已初始化\" );\n              break;\n            case 1:\n              //alert( \"xhr请求已打开\" );\n              break;\n            case 2:\n              //alert( \"xhr请求已发送\" );\n              break;\n            case 3:\n              //alert( \"xhr请求已响应\");\n              break;\n            case 4:\n              if (xhr.status == 200) {\n                //alert( \"xhr请求成功：\"+xhr.responseText );\n                //alert(\"服务器端版本：\" + JSON.parse(xhr.responseText).version);\n                var data = JSON.parse(xhr.responseText);\n                // 如果有新版本，则提示需要更新\n                if (data.version > wgtVersion) {\n                  //alert(\"本地版本：\" + wgtVersion);\n                  document.getElementById(\"dMask\").style.display = \"block\";\n                  plus.nativeUI.alert(\n                    \"发现新版本，点击确定开始更新！\\r\\n更新说明：\" + data.comment,\n                    function() {\n                      document.getElementById(\"d1\").style.display = \"block\";\n                      vm.downloadWgt(data.url, data.version); // 下载wgt方法\n                    }\n                  );\n                  \n                } else {\n                  return;\n                }\n              } else {\n                alert(\"xhr请求失败：\" + xhr.readyState);\n              }\n              break;\n            default:\n              break;\n          }\n        };\n        xhr.open(\n          \"GET\",\n          \"https://cg-client.linsio.cn/app/check.json?t=\" +\n            new Date().getTime()\n        );\n        xhr.send();\n      });\n    },\n    closeMask() {\n      document.getElementById(\"d1\").style.display = \"none\";\n      document.getElementById(\"dMask\").style.display = \"none\";\n    },\n\n    // 下载wgt方法\n    downloadWgt(url, version) {\n      var vm = this;\n      // 更新文件 wgt 文件地址\n      var wgtUrl = url + \"?v=\" + version;\n      //plus.nativeUI.showWaiting(\"正在更新...\");\n      var downTask = plus.downloader.createDownload(\n        wgtUrl,\n        { filename: \"_doc/update/\" },\n        function(d, status) {\n          if (status == 200) {\n            //console.log(\"下载更新包成功：\" + d.filename);\n            vm.installWgt(d.filename); // 安装wgt方法\n          } else {\n            //console.log(\"下载更新包失败！\");\n            plus.nativeUI.alert(\"下载更新包失败！\", function() {\n              vm.closeMask();\n            });\n          }\n          //plus.nativeUI.closeWaiting();\n        }\n      );\n\n      downTask.start(); // 开启下载的任务\n\n      var prg = 0;\n      //var showLoading = plus.nativeUI.showWaiting(\"正在下载\");  //创建一个showWaiting对象\n      downTask.addEventListener(\"statechanged\", function(task, status) {\n        //给下载任务设置一个监听 并根据状态  做操作\n        switch (task.state) {\n          case 1:\n            //showLoading.setTitle(\"正在连接到服务器\");\n            break;\n          case 2:\n            //showLoading.setTitle(\"已连接到服务器\");\n            break;\n          case 3:\n            prg = parseInt(\n              (parseFloat(task.downloadedSize) / parseFloat(task.totalSize)) * 100\n            );\n            //if(prg % 10 == 0) {  // 让百分比 10% 增长，如果这里不这么处理  出现 堆栈内存溢出的问题，有知道原因的大神指导一下哈\n            //\tshowLoading.setTitle(\"更新文件已下载\" + prg + \"%\");\n            //}\n            var pg = document.getElementById(\"pg\");\n            var pgv = document.getElementById(\"pgv\");\n            var timer = setInterval(function() {\n              if (prg !== 100) {\n                pg.value = prg;\n                pgv.innerHTML = \"进度：\" + prg + \"%\";\n              } else {\n                pgv.innerHTML = \"APP更新包下载完成\";\n                clearInterval(timer);\n              }\n            }, 100);\n            break;\n          case 4:\n            //plus.nativeUI.closeWaiting();\n            break;\n        }\n      });\n    },\n\n    // 安装wgt方法\n    installWgt(path) {\n      var vm = this;\n      //plus.nativeUI.showWaiting(\"安装更新包文件...\");\n      plus.runtime.install(\n        path,\n        { force: true },\n        function() {\n          //plus.nativeUI.closeWaiting();\n          //console.log(\"安装更新包文件成功！\");\n          plus.nativeUI.alert(\"APP资源更新完成！\", function() {\n            vm.removeUpdateFile();\n          });\n        },\n        function(e) {\n          //plus.nativeUI.closeWaiting();\n          //console.log(\"安装更新包文件失败[\" + e.code + \"]：\" + e.message);\n          plus.nativeUI.alert(\n            \"安装更新包文件失败[\" + e.code + \"]：\" + e.message,\n            function() {\n              plus.runtime.restart();\n            }\n          );\n        }\n      );\n    },\n\n    removeUpdateFile() {\n      plus.io.requestFileSystem(plus.io.PRIVATE_DOC, function(fs) {\n        // remove the directory and all it's contents\n        fs.root.removeRecursively(\n          function(removeentry) {\n            plus.runtime.restart();\n            console.log(\"Remove update pack Succeeded\");\n          },\n          function(e) {\n            plus.nativeUI.alert(e.message, function() {\n              plus.runtime.restart();\n            });\n          }\n        );\n      });\n    },\n\n    clearcaches() {\n      plus.cache.calculate(function(size) {\n        //console.log(\"您目前的系统缓存为\" + parseFloat(size / (1024 * 1024)).toFixed(2) + \"M？\")\n        var sizeCache = size;\n        plus.nativeUI.confirm(\n          \"您目前的系统缓存为\" +\n            parseFloat(sizeCache / (1024 * 1024)).toFixed(2) +\n            \"M？\",\n          function(e) {\n            if (e.index == 1) {\n            } else {\n              plus.cache.clear(function() {\n                alert(\"缓存清除完毕\");\n                plus.runtime.restart();\n              });\n            }\n          },\n          \"清除缓存\",\n          [\"确认\", \"取消\"]\n        );\n      });\n    }\n  }\n};\n</script>\n\n<style scoped>\n.mask {\n  position: fixed;\n  width: 100%;\n  height: 100%;\n  top: 0;\n  background: #080808;\n  opacity:0.7;\n  z-index: 9998;\n}\n.d1 {\n  text-align: center;\n  position: absolute;\n  top: 40%;\n  left: 50%;\n  -webkit-transform: translate(-50%, -50%);\n  transform: translate(-50%, -50%);\n  z-index: 99999;\n  width: 80%;\n  height: 110px;\n  color: #3f4b50;\n  background: #ffffff;\n  padding: 55px;\n  border-radius: 15px;\n}\n.d2 {\n  text-align: center;\n  position: absolute;\n  top: 20%;\n  left: 50%;\n  font-size: 0.3rem;\n  color: #3f4b50;\n  -webkit-transform: translate(-50%, -50%);\n  transform: translate(-50%, -50%);\n  z-index: 99999;\n}\nprogress {\n  height: 8px;\n  border-radius: 0.25rem;\n  width: 100%;\n}\nprogress::-webkit-progress-bar {\n  background-color: #f2f2f2;\n  border-radius: 0.25rem;\n}\nprogress::-webkit-progress-value {\n  height: 8px;\n  border-radius: 0.25rem;\n  background: linear-gradient(to right, #632891, #00ffcb);\n}\n</style>"],"sourceRoot":"src/views"}]}