{"remainingRequest":"C:\\work\\竞猜可换色板\\node_modules\\thread-loader\\dist\\cjs.js!C:\\work\\竞猜可换色板\\node_modules\\babel-loader\\lib\\index.js!C:\\work\\竞猜可换色板\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\work\\竞猜可换色板\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\work\\竞猜可换色板\\src\\views\\personalCenter\\Myself.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\work\\竞猜可换色板\\src\\views\\personalCenter\\Myself.vue","mtime":1605491181323},{"path":"C:\\work\\竞猜可换色板\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\work\\竞猜可换色板\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\work\\竞猜可换色板\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\work\\竞猜可换色板\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\work\\竞猜可换色板\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Vue from \"vue\";\nimport { Toast } from \"vant\";\nimport backB from \"@/components/Botton/back.vue\";\nVue.use(Toast);\nimport axios from \"axios\";\nimport { apiGetUserInfo, apiUploadImg, apiChangePwd, apiGetVipGrade } from \"@/api/User.js\";\nimport { apiUpload } from \"@/api/Upload.js\";\nimport { apiGetUnreadMessageCount, apiSetMessageRead } from \"@/api/Message.js\";\nimport { apiGetMissionUnGet } from \"@/api/mission.js\";\nimport back from \"@/components/Botton/back.vue\";\nimport colorChoice from \"@/components/ColorChoice.vue\";\nimport model from \"../../components/model\";\nimport { apiGetMemClubs } from \"@/api/Club.js\";\nexport default {\n  name: \"Myself\",\n  components: {\n    back: back,\n    colorChoice: colorChoice,\n    model: model\n  },\n  filters: {\n    Uname: function Uname(val) {\n      if (val == \"\") {\n        return 100;\n      }\n    },\n    F: function F(val) {\n      if (val == \"\") {\n        return \"no name\";\n      }\n    },\n    noName: function noName(name) {\n      if (name == null) {\n        return \"去设置昵称\";\n      } else {\n        return name;\n      }\n    }\n  },\n  data: function data() {\n    return {\n      infoList: [[{\n        topic: this.$t(\"MyRank\"),\n        routerName: \"rank\"\n      }, //【 我的排位 】\n      {\n        topic: this.$t(\"MyChallenge\"),\n        routerName: \"challengehome\"\n      }, //【 我的挑战 】\n      {\n        topic: this.$t(\"MyTask\"),\n        routerName: \"task\"\n      }, //【 我的任务 】\n      {\n        topic: this.$t(\"MyMedal\"),\n        routerName: \"medal\"\n      }, //【 我的勋章 】\n      {\n        topic: this.$t(\"Club\"),\n        routerName: \"CreateClub\"\n      } //【 俱樂部 】\n      ], [{\n        topic: this.$t(\"PersonalMessage\"),\n        routerName: \"selfMsg\"\n      }, //【 个人讯息 】\n      {\n        topic: this.$t(\"SystemInformation\"),\n        routerName: \"myMessage\"\n      }, //【 系统消息 】\n      {\n        topic: this.$t(\"GuessHistory\"),\n        routerName: \"history\"\n      }, //【 竞猜历史 】\n      {\n        topic: this.$t(\"MatchResults\"),\n        routerName: \"gameResult\"\n      }, //【 比赛结果 】\n      {\n        topic: this.$t(\"AddressManagement\"),\n        routerName: \"address\"\n      }, //【 地址管理 】\n      {\n        topic: this.$t(\"Guide\"),\n        routerName: \"guize\"\n      }, //【 竞猜指南 】\n      {\n        topic: this.$t(\"Questionnaire\"),\n        routerName: \"questionnaire\"\n      }, //【 问卷调查 】\n      {\n        topic: this.$t(\"ChangeLanguage\"),\n        routerName: \"lang\"\n      } //【 语种切换 】\n      ], [{\n        topic: this.$t(\"ChangePassword\"),\n        routerName: \"changePass\"\n      } //【 色系选择 】\n      ]],\n      isAddress: false,\n      myMoney: 1000,\n      //金币\n      myTicket: 20,\n      //门票\n      myLottery: 5,\n      //奖券\n      UImg: \"\",\n      msgList: {\n        UImg: \"\",\n        UDiamond: 0,\n        UTicket: 0,\n        //门票\n        Lotteries: 0 //奖券\n\n      },\n      msgCount: 0,\n      unclaimedTaskReward: 0,\n      countNum: false,\n      testList: {},\n      msgMsg: \"\",\n      imgUrl: \"\",\n      showLan: false,\n      language: \"\",\n      langIndex: undefined,\n      langList: ['简体中文', '繁體中文', 'English'],\n      showGuide: false\n    };\n  },\n  methods: {\n    goToPage: function goToPage(routerName) {\n      var _this2 = this;\n\n      // 語系切換\n      if (routerName == \"lang\") {\n        this.showLan = true;\n\n        if (this.language == \"简体中文\") {\n          this.langIndex = 0;\n        } else if (this.language == \"繁體中文\") {\n          this.langIndex = 1;\n        } else if (this.language == \"English\") {\n          this.langIndex = 2;\n        }\n\n        return;\n      } // 俱樂部\n\n\n      if (routerName === \"CreateClub\") {\n        // 獲取俱樂部會員資格與否   1 = 有資格;  2 = 無資格\n        // let userName = localStorage.getItem('uname')\n        // let data = {}\n        apiGetMemClubs(\"\", true).then(function (res) {\n          if (res.Data == null) {\n            // 無會員\n            localStorage.setItem(\"isMember\", 2);\n\n            _this2.$router.push(\"/CreateClub\");\n          } else {\n            // 有會員\n            localStorage.setItem(\"isMember\", 1);\n            localStorage.setItem(\"ClubId\", res.Data.ClubId); // 判斷是否為管理階級\n\n            if (res.Data.Name == \"会长\") {\n              localStorage.setItem(\"isManagement\", 1);\n            } else if (res.Data.Name == \"副会长\") {\n              localStorage.setItem(\"isManagement\", 2);\n            } else if (res.Data.Name == \"会员\") {\n              localStorage.setItem(\"isManagement\", 3);\n            }\n\n            _this2.$router.push(\"/myClub\");\n          }\n        });\n        return;\n      }\n\n      this.$router.push(\"/\" + routerName);\n\n      switch (routerName) {\n        //系统信息\n        case \"myMessage\":\n          this.$router.push(\"/myMessage\");\n          var data = {};\n          apiSetMessageRead(data, true).then(function (res) {\n            _this2.countNum = false;\n          });\n          break;\n\n        default:\n          break;\n      }\n    },\n    goMyself: function goMyself() {\n      this.$router.push(\"/selfMsg\");\n    },\n    noVip: function noVip() {\n      // let config = {\n      //   headers: { \"Content-Type\": \"application/json\" }\n      // };\n      // let urlL = 'https://api-sf.linsio.cn/api/Payment/OTCLogin';\n      // let param = {\n      //   '': '123456'\n      // }\n      // //  添加请求头\n      // axios.post(urlL, param, config).then(response => {\n      // })\n      this.$router.push(\"/vip\");\n    },\n    goRecharge: function goRecharge() {\n      this.$router.push(\"/recharge\");\n    },\n    //路由跳转\n    goShop: function goShop() {\n      this.$router.push(\"/shop\");\n    },\n    goBackRes: function goBackRes() {\n      this.$router.push(\"/yijian\");\n    },\n    goYao: function goYao() {\n      this.$router.push(\"/invitationcode\");\n    },\n    goExchange: function goExchange() {\n      this.$router.push(\"/exchange\");\n    },\n    addressIn: function addressIn() {\n      this.isAddress = true;\n    },\n    layout: function layout() {\n      localStorage.removeItem(\"token\");\n      localStorage.setItem(\"shops\", \"[]\");\n      this.$router.push(\"/\");\n    },\n    goBack: function goBack() {\n      this.$router.go(-1); // let data = {}\n      // this.$store.dispatch(\"getMsgList\", data);\n    },\n    getMsg: function getMsg() {\n      var _this3 = this;\n\n      var data = {};\n      apiGetUserInfo(data, true).then(function (res) {\n        //有token要加ture\n        _this3.msgList = res;\n        _this3.msgList.UImg = res.UImg;\n        localStorage.setItem(\"RankId\", res.RankId);\n        localStorage.setItem(\"nickName\", res.NickName);\n        localStorage.setItem(\"UImg\", res.UImg);\n      });\n    },\n    getMsgNum: function getMsgNum() {\n      var _this4 = this;\n\n      var data = {};\n      apiGetUnreadMessageCount(data, true).then(function (res) {\n        _this4.msgCount = res.UnreadMessageCount;\n\n        if (_this4.msgCount > 0) {\n          _this4.countNum = true;\n        }\n      });\n    },\n    getUnclaimedTaskReward: function getUnclaimedTaskReward() {\n      var _this5 = this;\n\n      var data = {};\n      apiGetMissionUnGet(data, true).then(function (res) {\n        _this5.unclaimedTaskReward = res.Count;\n      });\n    },\n    // 上传图片\n    updataImg: function updataImg(e) {\n      var _this6 = this;\n\n      var file = e.target.files[0]; // 获取图片的大小，做大小限制有用\n\n      var imgSize = file.size; //图片压缩就是处理file\n\n      this.imgPreview(file);\n\n      var _this = this; // this指向问题，所以在外面先定义\n\n\n      if (imgSize <= 1024 * 1024) {\n        var imgName = JSON.stringify(file.name);\n        var param = new FormData(); // 创建form对象\n\n        param.append(\"file\", file, file.name); // 通过append向form对象添加数据\n\n        var config = {\n          headers: {\n            \"Content-Type\": \"multipart/form-data\"\n          }\n        };\n        var urlL = process.env.VUE_APP_API_BASE_URL + \"/Uploader/UploadImg\"; //  添加请求头\n\n        axios.post(urlL, param, config).then(function (response) {\n          if (response.status == 200) {\n            // 成功上传后处理逻辑\n            _this6.msgMsg = response.data.Msg;\n            _this6.msgList.UImg = response.data.Data.Url;\n\n            _this6.$Alert.showSuccess.call(_this6, _this6.msgMsg);\n\n            var data = {\n              UImg: _this6.msgList.UImg\n            };\n            apiUploadImg(data, true).then(function (res) {\n              if (res.Status == 1) {// localStorage.setItem('imgs', this.imgUrl)\n              }\n            });\n          }\n        });\n      } else {\n        this.$Alert.showWarning.call(this, \"图片太大啦！\");\n      }\n    },\n    imgPreview: function imgPreview(file) {\n      var self = this;\n      var Orientation; // 创建一个reader\n\n      var reader = new FileReader(); // 将图片2将转成 base64 格式\n\n      reader.readAsDataURL(file);\n\n      reader.onloadend = function () {\n        var result = this.result;\n        var img = new Image();\n        img.src = result; //判断图片是否大于100K,是就直接上传，反之压缩图片\n\n        if (this.result.length <= 1024 * 1024) {\n          self.headerImage = this.result;\n        } else {\n          img.onload = function () {\n            var data = self.compress(img, Orientation);\n            self.headerImage = data;\n          };\n        }\n      };\n    },\n    compress: function compress(img, Orientation) {\n      var canvas = document.createElement(\"canvas\");\n      var ctx = canvas.getContext(\"2d\"); //瓦片canvas\n\n      var tCanvas = document.createElement(\"canvas\");\n      var tctx = tCanvas.getContext(\"2d\");\n      var initSize = img.src.length;\n      var width = img.width;\n      var height = img.height; //如果图片大于四百万像素，计算压缩比并将大小压至400万以下\n\n      var ratio;\n\n      if ((ratio = width * height / 4000000) > 1) {\n        ratio = Math.sqrt(ratio);\n        width /= ratio;\n        height /= ratio;\n      } else {\n        ratio = 1;\n      }\n\n      canvas.width = width;\n      canvas.height = height; //        铺底色\n\n      ctx.fillStyle = \"#fff\";\n      ctx.fillRect(0, 0, canvas.width, canvas.height); //如果图片像素大于100万则使用瓦片绘制\n\n      var count;\n\n      if ((count = width * height / 1000000) > 1) {\n        count = ~~(Math.sqrt(count) + 1); //计算要分成多少块瓦片\n        //            计算每块瓦片的宽和高\n\n        var nw = ~~(width / count);\n        var nh = ~~(height / count);\n        tCanvas.width = nw;\n        tCanvas.height = nh;\n\n        for (var i = 0; i < count; i++) {\n          for (var j = 0; j < count; j++) {\n            tctx.drawImage(img, i * nw * ratio, j * nh * ratio, nw * ratio, nh * ratio, 0, 0, nw, nh);\n            ctx.drawImage(tCanvas, i * nw, j * nh, nw, nh);\n          }\n        }\n      } else {\n        ctx.drawImage(img, 0, 0, width, height);\n      } //修复ios上传图片的时候 被旋转的问题\n\n\n      if (Orientation != \"\" && Orientation != 1) {\n        switch (Orientation) {\n          case 6:\n            //需要顺时针（向左）90度旋转\n            this.rotateImg(img, \"left\", canvas);\n            break;\n\n          case 8:\n            //需要逆时针（向右）90度旋转\n            this.rotateImg(img, \"right\", canvas);\n            break;\n\n          case 3:\n            //需要180度旋转\n            this.rotateImg(img, \"right\", canvas); //转两次\n\n            this.rotateImg(img, \"right\", canvas);\n            break;\n        }\n      } //进行最小压缩\n\n\n      var ndata = canvas.toDataURL(\"image/jpeg\", 0.1); //\"压缩前：\" + initSize\n      //\"压缩后：\" + ndata.length\n      //\"压缩率：\" + ~~((100 * (initSize - ndata.length)) / initSize) + \"%\"\n\n      tCanvas.width = tCanvas.height = canvas.width = canvas.height = 0;\n      return ndata;\n    },\n    // 語系初始化\n    langInit: function langInit() {\n      this.language = JSON.parse(localStorage.getItem(\"lang\")).name;\n    },\n    // 語系彈窗選擇\n    langChoice: function langChoice(index) {\n      this.langIndex = index;\n    },\n    // 關閉語系選擇彈窗\n    cancel: function cancel() {\n      this.showLan = false;\n    },\n    // 確定選擇語言\n    confirm: function confirm() {\n      if (this.langIndex == 0) {\n        localStorage.setItem(\"lang\", JSON.stringify({\n          name: \"简体中文\",\n          tag: \"zh-CN\"\n        }));\n      } else if (this.langIndex == 1) {\n        localStorage.setItem(\"lang\", JSON.stringify({\n          name: \"繁體中文\",\n          tag: \"zh-TW\"\n        }));\n      } else if (this.langIndex == 2) {\n        localStorage.setItem(\"lang\", JSON.stringify({\n          name: \"English\",\n          tag: \"en-US\"\n        }));\n      }\n\n      location.reload();\n    },\n    // 競猜指南暫時用確認按鈕\n    ComingSoon: function ComingSoon() {\n      this.showGuide = false;\n    }\n  },\n  mounted: function mounted() {\n    this.getMsg();\n    this.getMsgNum();\n    this.langInit();\n    this.getUnclaimedTaskReward();\n  }\n};",null]}