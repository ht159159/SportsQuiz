{"remainingRequest":"C:\\Users\\Yang\\Desktop\\新增資料夾\\竞猜可换色板\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Yang\\Desktop\\新增資料夾\\竞猜可换色板\\src\\store\\modules\\user.js","dependencies":[{"path":"C:\\Users\\Yang\\Desktop\\新增資料夾\\竞猜可换色板\\src\\store\\modules\\user.js","mtime":1591337939180},{"path":"C:\\Users\\Yang\\Desktop\\新增資料夾\\竞猜可换色板\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Yang\\Desktop\\新增資料夾\\竞猜可换色板\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//user请求\nimport { apiLogin, apiGetUserInfo } from \"@/api/User\";\nvar user = {\n  //库\n  state: {\n    userinfo: [],\n    listMsg: [],\n    code: \"\",\n    navnum: 0,\n    upBack: false // isSafari: localStorage.getItem(key: 'isSafari') === '1' ? 1 : 0,\n\n  },\n  mutations: {\n    upBack: function upBack(state, payload) {\n      state.upBack = true;\n    },\n    //底部栏\n    upNavnum: function upNavnum(state, payload) {\n      state.navnum = payload.id;\n    },\n    //方法\n    upMatchId: function upMatchId(state, payload) {\n      state.MatchId = payload.id;\n    },\n    upinfo: function upinfo(state, payload) {\n      state.userinfo = payload;\n    },\n    //使用注册方法赋值\n    listMsg: function listMsg(state, payload) {\n      state.listMsg = payload;\n    },\n    upCode: function upCode(state, payload) {\n      state.code = payload;\n    }\n  },\n  actions: {\n    getMsgList: function getMsgList(context, payload) {\n      // 需要加token的在请求后加true\n      apiGetUserInfo(payload, true).then(function (res) {\n        //注册方法 $store.commit(‘方法名’,传递参数)\n        context.commit(\"listMsg\", res);\n      });\n    }\n  }\n};\nexport default user;",{"version":3,"sources":["C:\\Users\\Yang\\Desktop\\新增資料夾\\竞猜可换色板\\src\\store\\modules\\user.js"],"names":["apiLogin","apiGetUserInfo","user","state","userinfo","listMsg","code","navnum","upBack","mutations","payload","upNavnum","id","upMatchId","MatchId","upinfo","upCode","actions","getMsgList","context","then","res","commit"],"mappings":"AAAA;AACA,SAASA,QAAT,EAAmBC,cAAnB,QAAyC,YAAzC;AAEA,IAAMC,IAAI,GAAG;AACX;AACAC,EAAAA,KAAK,EAAE;AACLC,IAAAA,QAAQ,EAAE,EADL;AAELC,IAAAA,OAAO,EAAE,EAFJ;AAGLC,IAAAA,IAAI,EAAE,EAHD;AAILC,IAAAA,MAAM,EAAE,CAJH;AAKLC,IAAAA,MAAM,EAAE,KALH,CAML;;AANK,GAFI;AAUXC,EAAAA,SAAS,EAAE;AACTD,IAAAA,MADS,kBACFL,KADE,EACKO,OADL,EACc;AACrBP,MAAAA,KAAK,CAACK,MAAN,GAAe,IAAf;AACD,KAHQ;AAIT;AACAG,IAAAA,QALS,oBAKAR,KALA,EAKOO,OALP,EAKgB;AACvBP,MAAAA,KAAK,CAACI,MAAN,GAAeG,OAAO,CAACE,EAAvB;AACD,KAPQ;AAQT;AACAC,IAAAA,SATS,qBASCV,KATD,EASQO,OATR,EASiB;AACxBP,MAAAA,KAAK,CAACW,OAAN,GAAgBJ,OAAO,CAACE,EAAxB;AACD,KAXQ;AAYTG,IAAAA,MAZS,kBAYFZ,KAZE,EAYKO,OAZL,EAYc;AACrBP,MAAAA,KAAK,CAACC,QAAN,GAAiBM,OAAjB;AACD,KAdQ;AAeT;AACAL,IAAAA,OAhBS,mBAgBDF,KAhBC,EAgBMO,OAhBN,EAgBe;AACtBP,MAAAA,KAAK,CAACE,OAAN,GAAgBK,OAAhB;AACD,KAlBQ;AAmBTM,IAAAA,MAnBS,kBAmBFb,KAnBE,EAmBKO,OAnBL,EAmBc;AACrBP,MAAAA,KAAK,CAACG,IAAN,GAAaI,OAAb;AACD;AArBQ,GAVA;AAiCXO,EAAAA,OAAO,EAAE;AACPC,IAAAA,UADO,sBACIC,OADJ,EACaT,OADb,EACsB;AAC3B;AACAT,MAAAA,cAAc,CAACS,OAAD,EAAU,IAAV,CAAd,CAA8BU,IAA9B,CAAmC,UAAAC,GAAG,EAAI;AACxC;AACAF,QAAAA,OAAO,CAACG,MAAR,CAAe,SAAf,EAA0BD,GAA1B;AACD,OAHD;AAID;AAPM;AAjCE,CAAb;AA4CA,eAAenB,IAAf","sourcesContent":["//user请求\r\nimport { apiLogin, apiGetUserInfo } from \"@/api/User\";\r\n\r\nconst user = {\r\n  //库\r\n  state: {\r\n    userinfo: [],\r\n    listMsg: [],\r\n    code: \"\",\r\n    navnum: 0,\r\n    upBack: false,\r\n    // isSafari: localStorage.getItem(key: 'isSafari') === '1' ? 1 : 0,\r\n  },\r\n  mutations: {\r\n    upBack(state, payload) {\r\n      state.upBack = true;\r\n    },\r\n    //底部栏\r\n    upNavnum(state, payload) {\r\n      state.navnum = payload.id;\r\n    },\r\n    //方法\r\n    upMatchId(state, payload) {\r\n      state.MatchId = payload.id;\r\n    },\r\n    upinfo(state, payload) {\r\n      state.userinfo = payload;\r\n    },\r\n    //使用注册方法赋值\r\n    listMsg(state, payload) {\r\n      state.listMsg = payload;\r\n    },\r\n    upCode(state, payload) {\r\n      state.code = payload;\r\n    }\r\n  },\r\n  actions: {\r\n    getMsgList(context, payload) {\r\n      // 需要加token的在请求后加true\r\n      apiGetUserInfo(payload, true).then(res => {\r\n        //注册方法 $store.commit(‘方法名’,传递参数)\r\n        context.commit(\"listMsg\", res);\r\n      });\r\n    }\r\n  }\r\n};\r\n\r\nexport default user;\r\n"]}]}