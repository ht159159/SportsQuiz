{"remainingRequest":"C:\\work\\竞猜可换色板\\node_modules\\thread-loader\\dist\\cjs.js!C:\\work\\竞猜可换色板\\node_modules\\babel-loader\\lib\\index.js!C:\\work\\竞猜可换色板\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\work\\竞猜可换色板\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\work\\竞猜可换色板\\src\\views\\Home.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\work\\竞猜可换色板\\src\\views\\Home.vue","mtime":1605074743468},{"path":"C:\\work\\竞猜可换色板\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\work\\竞猜可换色板\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\work\\竞猜可换色板\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\work\\竞猜可换色板\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\work\\竞猜可换色板\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport CardComp from \"@/components/MainGame.vue\";\nimport CardFoot from \"@/components/MoreGame.vue\";\nimport \"../style/addtohomescreen.css\";\nimport ModalSignIn from \"@/components/Modal/SignIn.vue\";\nexport default {\n  name: \"mainHome\",\n  components: {\n    ModalSignIn: ModalSignIn,\n    CardComp: CardComp,\n    CardFoot: CardFoot\n  },\n  created: function created() {\n    if (window.plus) {\n      this.checkUpdate();\n    } else {\n      document.addEventListener(\"plusready\", this.checkUpdate, false);\n    }\n  },\n  data: function data() {\n    return {\n      isSignIn: false,\n      isLogin: false\n    };\n  },\n  methods: {\n    checkUpdate: function checkUpdate() {\n      var vm = this; // 检查当前版本，与从后台获取的版本作比较，以此判断是否更新\n\n      plus.runtime.getProperty(plus.runtime.appid, function (inf) {\n        // 当前版本\n        var wgtVersion = inf.version;\n        var xhr = new plus.net.XMLHttpRequest();\n\n        xhr.onreadystatechange = function () {\n          switch (xhr.readyState) {\n            case 0:\n              //alert( \"xhr请求已初始化\" );\n              break;\n\n            case 1:\n              //alert( \"xhr请求已打开\" );\n              break;\n\n            case 2:\n              //alert( \"xhr请求已发送\" );\n              break;\n\n            case 3:\n              //alert( \"xhr请求已响应\");\n              break;\n\n            case 4:\n              if (xhr.status == 200) {\n                //alert( \"xhr请求成功：\"+xhr.responseText );\n                //alert(\"服务器端版本：\" + JSON.parse(xhr.responseText).version);\n                var data = JSON.parse(xhr.responseText); // 如果有新版本，则提示需要更新\n\n                if (data.version > wgtVersion) {\n                  //alert(\"本地版本：\" + wgtVersion);\n                  plus.nativeUI.confirm(\"发现新版本，是否更新？\\r\\n更新说明：\" + data.comment, function (e) {\n                    if (e.index == 0) {\n                      vm.downloadWgt(data.url, data.version); // 下载wgt方法\n                    } else {\n                      return;\n                    }\n                  }, [\"确定\", \"取消\"]);\n                } else {\n                  return;\n                }\n              } else {\n                alert(\"xhr请求失败：\" + xhr.readyState);\n              }\n\n              break;\n\n            default:\n              break;\n          }\n        };\n\n        xhr.open(\"GET\", \"https://guess-color.linsio.cn/app/check.json?t=\" + new Date().getTime());\n        xhr.send();\n      });\n    },\n    closeMask: function closeMask() {\n      document.getElementById(\"d1\").style.display = \"none\";\n      document.getElementById(\"dMask\").style.display = \"none\";\n    },\n    // 下载wgt方法\n    downloadWgt: function downloadWgt(url, version) {\n      var vm = this; // 更新文件 wgt 文件地址\n\n      var wgtUrl = url + \"?v=\" + version; //plus.nativeUI.showWaiting(\"正在更新...\");\n\n      var downTask = plus.downloader.createDownload(wgtUrl, {\n        filename: \"_doc/update/\"\n      }, function (d, status) {\n        if (status == 200) {\n          //console.log(\"下载更新包成功：\" + d.filename);\n          vm.installWgt(d.filename); // 安装wgt方法\n        } else {\n          //console.log(\"下载更新包失败！\");\n          plus.nativeUI.alert(\"下载更新包失败！\", function () {\n            vm.closeMask();\n          });\n        } //plus.nativeUI.closeWaiting();\n\n      });\n      downTask.start(); // 开启下载的任务\n\n      var prg = 0; //var showLoading = plus.nativeUI.showWaiting(\"正在下载\");  //创建一个showWaiting对象\n\n      downTask.addEventListener(\"statechanged\", function (task, status) {\n        //给下载任务设置一个监听 并根据状态  做操作\n        switch (task.state) {\n          case 1:\n            //showLoading.setTitle(\"正在连接到服务器\");\n            break;\n\n          case 2:\n            //showLoading.setTitle(\"已连接到服务器\");\n            break;\n\n          case 3:\n            prg = parseInt(parseFloat(task.downloadedSize) / parseFloat(task.totalSize) * 100); //if(prg % 10 == 0) {  // 让百分比 10% 增长，如果这里不这么处理  出现 堆栈内存溢出的问题，有知道原因的大神指导一下哈\n            //\tshowLoading.setTitle(\"更新文件已下载\" + prg + \"%\");\n            //}\n\n            document.getElementById(\"d1\").style.display = \"block\";\n            document.getElementById(\"dMask\").style.display = \"block\";\n            var pg = document.getElementById(\"pg\");\n            var pgv = document.getElementById(\"pgv\");\n            var timer = setInterval(function () {\n              if (prg !== 100) {\n                pg.value = prg;\n                pgv.innerHTML = \"进度：\" + prg + \"%\";\n              } else {\n                pgv.innerHTML = \"APP更新包下载完成\";\n                clearInterval(timer);\n              }\n            }, 100);\n            break;\n\n          case 4:\n            //plus.nativeUI.closeWaiting();\n            break;\n        }\n      });\n    },\n    // 安装wgt方法\n    installWgt: function installWgt(path) {\n      //plus.nativeUI.showWaiting(\"安装更新包文件...\");\n      plus.runtime.install(path, {}, function () {\n        //plus.nativeUI.closeWaiting();\n        //console.log(\"安装更新包文件成功！\");\n        plus.nativeUI.alert(\"APP资源更新完成！\", function () {\n          plus.runtime.restart();\n        });\n      }, function (e) {\n        //plus.nativeUI.closeWaiting();\n        //console.log(\"安装更新包文件失败[\" + e.code + \"]：\" + e.message);\n        plus.nativeUI.alert(\"安装更新包文件失败[\" + e.code + \"]：\" + e.message, function () {\n          plus.runtime.restart();\n        });\n      });\n    },\n    clearcaches: function clearcaches() {\n      plus.cache.calculate(function (size) {\n        //console.log(\"您目前的系统缓存为\" + parseFloat(size / (1024 * 1024)).toFixed(2) + \"M？\")\n        sizeCache = size;\n        plus.nativeUI.confirm(\"您目前的系统缓存为\" + parseFloat(sizeCache / (1024 * 1024)).toFixed(2) + \"M？\", function (e) {\n          if (e.index == 1) {} else {\n            plus.cache.clear(function () {\n              alert(\"缓存清除完毕\");\n              plus.runtime.restart();\n            });\n          }\n        }, \"清除缓存\", [\"确认\", \"取消\"]);\n      });\n    }\n  }\n};",null]}