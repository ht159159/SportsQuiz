{"remainingRequest":"C:\\work\\竞猜可换色板\\node_modules\\thread-loader\\dist\\cjs.js!C:\\work\\竞猜可换色板\\node_modules\\babel-loader\\lib\\index.js!C:\\work\\竞猜可换色板\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\work\\竞猜可换色板\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\work\\竞猜可换色板\\src\\views\\club\\InitiateActivities.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\work\\竞猜可换色板\\src\\views\\club\\InitiateActivities.vue","mtime":1605584175076},{"path":"C:\\work\\竞猜可换色板\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\work\\竞猜可换色板\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\work\\竞猜可换色板\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\work\\竞猜可换色板\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\work\\竞猜可换色板\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:\\\\work\\\\\\u7ADE\\u731C\\u53EF\\u6362\\u8272\\u677F\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport back from \"@/components/Botton/back.vue\";\nimport { apiGetClubGamblingMatchInfo, apiAddClubGambling } from \"@/api/ClubGamblings.js\";\nimport model from \"@/components/model\";\nexport default {\n  components: {\n    back: back,\n    model: model\n  },\n  data: function data() {\n    return {\n      betObj: [],\n      oddsIndex: undefined,\n      // 發起賠率文字\n      betInfo: 0,\n      // 賠率\n      betNum: 0,\n      // 押金\n      deposit: \"\",\n      // 預計盈利\n      expectedProfit: 0,\n      // 手續費\n      handlingCharge: 0,\n      chargeThreshold: undefined,\n      // 手續費判斷標準\n      uName: \"\",\n      clubId: undefined,\n      matchItemId: undefined,\n      playId: undefined,\n      betPosition: \"\",\n      isBetNum: false,\n      isDeposit: false,\n      isClickTwice: false,\n      isFancyBoxOpen: false\n    };\n  },\n  watch: {\n    betNum: function betNum() {\n      this.validateBetNum();\n    },\n    betInfo: function betInfo() {\n      this.expectedProfit = (this.deposit * this.betNum).toFixed(2);\n    },\n    deposit: function deposit() {\n      this.expectedProfit = (this.deposit / (this.betNum - 1)).toFixed(2);\n      this.getHandlingCharge();\n    }\n  },\n  created: function created() {\n    var _this = this;\n\n    this.getMatchItemId().then(function () {\n      _this.getMatchInfo();\n    });\n  },\n  methods: {\n    // 讀取matchItemId\n    getMatchItemId: function () {\n      var _getMatchItemId = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.uName = localStorage.getItem(\"uname\");\n                this.clubId = localStorage.getItem(\"ClubId\");\n                this.matchItemId = localStorage.getItem(\"matchItemId\");\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function getMatchItemId() {\n        return _getMatchItemId.apply(this, arguments);\n      }\n\n      return getMatchItemId;\n    }(),\n    // 取得發起活動的賽事資訊\n    getMatchInfo: function () {\n      var _getMatchInfo = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2() {\n        var _this2 = this;\n\n        var data;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                data = {\n                  MatchItemId: this.matchItemId\n                };\n                _context2.next = 3;\n                return apiGetClubGamblingMatchInfo(data, true).then(function (res) {\n                  _this2.betObj = res.Data;\n                });\n\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function getMatchInfo() {\n        return _getMatchInfo.apply(this, arguments);\n      }\n\n      return getMatchInfo;\n    }(),\n    // 選擇勝平負\n    clickOdds: function clickOdds(num, item) {\n      this.oddsIndex = num;\n      this.betNum = item.OddsValue;\n      this.betInfo = item.Position + item.OddsValue; // 發起賠率input值\n\n      this.playId = item.PlayId;\n      this.betPosition = item.Position;\n\n      if (this.deposit == 0) {\n        this.isDeposit = true;\n      }\n    },\n    // 驗證發起賠率\n    validateBetNum: function validateBetNum() {\n      if (this.betNum <= this.betObj.MaxOddsValue && this.betNum >= this.betObj.MinOddsValue) {\n        this.expectedProfit = (this.deposit / this.betNum).toFixed(2);\n        this.isBetNum = false;\n      } else {\n        this.betNum = 0;\n        this.isBetNum = true;\n      }\n    },\n    // 驗證押金\n    validateDeposit: function validateDeposit() {\n      if (this.deposit <= this.betObj.MaxDeposit && this.deposit >= this.betObj.MinDeposit) {\n        this.expectedProfit = (this.deposit / (this.betNum - 1)).toFixed(2); // 計算手續費\n\n        this.getHandlingCharge();\n        this.isDeposit = false;\n      } else {\n        this.deposit = 0;\n        this.handlingCharge = 0;\n        this.isDeposit = true;\n      }\n    },\n    // 手續費\n    getHandlingCharge: function getHandlingCharge() {\n      if (this.deposit >= this.betObj.ChargeThreshold) {\n        this.handlingCharge = this.deposit * this.betObj.HandlingCharge;\n      } else {\n        this.handlingCharge = this.betObj.FixedHandlingCharge;\n      }\n    },\n    // 發起\n    initiate: function initiate() {\n      var _this3 = this;\n\n      if (this.isBetNum == true || this.isDeposit == true || this.betNum == 0 || this.deposit == 0) {\n        var vm = this;\n        var m = vm.$message({\n          message: this.$t('EnterCorrectValue'),\n          duration: 3000,\n          type: \"error\",\n          center: true\n        });\n        this.isFancyBoxOpen = false;\n        setTimeout(function () {\n          return m.close();\n        }, 2000);\n        return;\n      } else {\n        if (this.isClickTwice == false) {\n          var data = {\n            ClubId: this.clubId,\n            MatchItemId: this.matchItemId,\n            PlayId: this.playId,\n            BetPosition: this.betPosition,\n            HandlingCharge: this.handlingCharge,\n            OddsValue: this.betNum,\n            Deposit: this.deposit,\n            UName: this.uName\n          };\n          apiAddClubGambling(data, true).then(function (res) {\n            if (res.Success) {\n              var _vm = _this3;\n\n              var _m = _vm.$message({\n                message: res.Message,\n                duration: 3000,\n                type: \"success\",\n                center: true\n              });\n\n              setTimeout(function () {\n                _m.close();\n\n                _this3.$router.push(\"/ClubActivities\");\n              }, 2000);\n            } else {\n              var _vm2 = _this3;\n\n              var _m2 = _vm2.$message({\n                message: res.Message,\n                duration: 3000,\n                type: \"error\",\n                center: true\n              });\n\n              setTimeout(function () {\n                return _m2.close();\n              }, 2000);\n            }\n\n            _this3.isFancyBoxOpen = false;\n          });\n          this.isClickTwice = true;\n        }\n      }\n    }\n  }\n};",null]}