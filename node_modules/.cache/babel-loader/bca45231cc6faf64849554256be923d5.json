{"remainingRequest":"C:\\Users\\Yang\\Desktop\\新增資料夾\\竞猜可换色板\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\Yang\\Desktop\\新增資料夾\\竞猜可换色板\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Yang\\Desktop\\新增資料夾\\竞猜可换色板\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Yang\\Desktop\\新增資料夾\\竞猜可换色板\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Yang\\Desktop\\新增資料夾\\竞猜可换色板\\src\\views\\Lottery.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Yang\\Desktop\\新增資料夾\\竞猜可换色板\\src\\views\\Lottery.vue","mtime":1607914691128},{"path":"C:\\Users\\Yang\\Desktop\\新增資料夾\\竞猜可换色板\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Yang\\Desktop\\新增資料夾\\竞猜可换色板\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Yang\\Desktop\\新增資料夾\\竞猜可换色板\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Yang\\Desktop\\新增資料夾\\竞猜可换色板\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Yang\\Desktop\\新增資料夾\\竞猜可换色板\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.find\";\nimport \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { apiLuckDraw, apiGetPrizePoolSetting } from \"@/api/product.js\";\nimport { apiGetUserInfo, apiGetUserAddress } from \"@/api/User.js\";\nimport roundTurntable from \"../components/roundTurntable.vue\";\nimport model from \"../components/model\";\nimport { apiGetInvitationUrl } from \"@/api/InvitationCode.js\";\nimport Clipboard from \"clipboard\";\nimport back from \"../components/Botton/back.vue\";\nimport { lotteryMusic, lotteryWining } from \"@/utils/medias\";\nexport default {\n  components: {\n    roundTurntable: roundTurntable,\n    model: model,\n    back: back\n  },\n  created: function created() {\n    var _this = this;\n\n    this.lang = JSON.parse(localStorage.getItem(\"lang\")).tag;\n    this.getPrizePoolSetting();\n    apiGetUserInfo(\"\", true).then(function (res) {\n      _this.gold = res.UDiamond;\n      _this.num = Math.floor(res.UDiamond / 10);\n    }); // this.geturl();\n\n    this.getUserAddress();\n  },\n  data: function data() {\n    return {\n      lang: \"\",\n      // 转盘上的奖品数据\n      prizeData: [],\n      // 转动的圈数\n      rotateCircle: 24,\n      // 转动需要持续的时间（s）\n      duringTime: 6.5,\n      // 转盘样式的选项\n      turntableStyleOption: {\n        // 背景色\n        prizeBgColors: [\"#AE3EFF\", \"#4D3FFF\", \"#FC262C\", \"#3A8BFF\", \"#EE7602\", \"#FE339F\"],\n        // 转盘的外边框颜色\n        borderColor: \"#199301\"\n      },\n      // 中奖的奖品的index\n      prizeIndex: -1,\n      // 用来锁定转盘，避免同时多次点击转动\n      isLocking: false,\n      // 剩余抽奖次数\n      num: 2,\n      gold: Number,\n      index: \"\",\n      showgold: false,\n      typep: \"\",\n      codeUrl: \"\",\n      Tips: [],\n      flag: true,\n      editUserAddress: false,\n      prize: 0\n    };\n  },\n  methods: {\n    // geturl() {\n    //   apiGetInvitationUrl(\"\", true).then(res => {\n    //     this.codeUrl = res.data;\n    //   });\n    // },\n    copy: function copy() {\n      var _this2 = this;\n\n      var clipboard = new Clipboard(\".tag-read1\");\n      clipboard.on(\"success\", function (e) {\n        // this.$toast.success({\n        //   message: \"邀请链接复制成功\",\n        //   duration: 3000\n        // });\n        var m = _this2.$message({\n          message: \"邀请链接复制成功\",\n          duration: 3000,\n          type: \"success\",\n          center: true\n        });\n\n        setTimeout(function () {\n          return m.close();\n        }, 1200); // success(\"复制成功\");//这里你如果引入了elementui的提示就可以用，没有就注释即可\n        // 释放内存\n\n        clipboard.destroy();\n      });\n      clipboard.on(\"error\", function (e) {\n        // 不支持复制\n        // 释放内存\n        clipboard.destroy();\n      });\n    },\n    wexin: function wexin() {\n      var m = this.$message({\n        type: \"warning\",\n        message: this.$t('NotYetOpen'),\n        center: true,\n        duration: 1000\n      });\n      setTimeout(function () {\n        return m.close();\n      }, 1200);\n    },\n    pyj: function pyj() {\n      var m = this.$message({\n        type: \"warning\",\n        message: this.$t('NotYetOpen'),\n        center: true,\n        duration: 1000\n      });\n      setTimeout(function () {\n        return m.close();\n      }, 1200);\n    },\n    close: function close() {\n      this.showgold = false;\n    },\n    getPrizePoolSetting: function getPrizePoolSetting() {\n      var _this3 = this;\n\n      apiGetPrizePoolSetting(\"\").then(function (res) {\n        _this3.prizeData = res.Prizes;\n        _this3.prize = res.Price;\n        _this3.Tips = res.Tips;\n      });\n    },\n    getApiLuckDraw: function getApiLuckDraw() {\n      var _this4 = this;\n\n      if (!this.flag) {\n        return;\n      }\n\n      this.flag = false;\n      apiLuckDraw(\"\", true).then(function (res) {\n        if (res.isSuccess) {\n          for (var i = 0; i < _this4.prizeData.length; i++) {\n            var element = _this4.prizeData[i].PrizeId;\n\n            if (element == res.PrizeId) {\n              _this4.index = i;\n            }\n          }\n\n          _this4.startRotation();\n        } else {\n          _this4.flag = true;\n\n          _this4.$message({\n            type: \"error\",\n            message: res.Message,\n            center: true,\n            duration: 1000,\n            typep: \"\"\n          });\n\n          if (res.Message === \"抱歉，请先设置默认收货地址！\") {\n            _this4.$router.push(\"/address\");\n          }\n        }\n      });\n    },\n    startRotation: function startRotation() {\n      // 如果还不可以转动\n      if (!this.canBeRotated()) {\n        return false;\n      } //開始轉動音效\n\n\n      lotteryMusic.play(); // 开始转动\n      // 先上锁\n\n      this.isLocking = true; // 设置在哪里停下，应该与后台交互，这里随机抽取0~5\n      // apiLuckDraw(\"\", true).then(res => {\n      // if (res.isSuccess) {\n      // let index;\n      // for (let i = 0; i < this.prizeData.length; i++) {\n      //   const element = this.prizeData[i].PrizeId;\n      //   if (element == res.PrizeId) {\n      //     index = i;\n      //   }\n      // }\n\n      var index = this.index; // 成功后次数减少一次\n\n      this.num--;\n      this.prizeIndex = index; // 告诉子组件，开始转动了\n\n      this.$refs.roundTurntable.rotate(index); // }\n      // });\n    },\n    // 已经转动完转盘触发的函数\n    endRotation: function endRotation() {\n      var _this5 = this;\n\n      // 停止轉動音效\n      lotteryMusic.stop();\n      this.showgold = true;\n      this.typep = 1; // 中獎\n\n      lotteryWining.play();\n      apiGetUserInfo(\"\", true).then(function (res) {\n        _this5.gold = res.UDiamond;\n      }); // 提示中奖\n      // alert(\n      //   `恭喜您获奖啦,您的奖品是：${this.prizeData[this.prizeIndex].PrizeName}`\n      // );\n      // this.$message({\n      //   type: \"success\",\n      //   message: this.prizeData[this.prizeIndex].PrizeName,\n      //   center: true,\n      //   duration: 3000\n      // });\n      // 解锁\n\n      this.isLocking = false;\n      this.flag = true;\n    },\n    // 判断是否可以转动\n    canBeRotated: function canBeRotated() {\n      if (this.num <= 0) {\n        this.showgold = true;\n        this.typep = 2;\n        return false;\n      }\n\n      if (this.isLocking) {\n        return false;\n      }\n\n      return true;\n    },\n    //取得地址\n    getUserAddress: function getUserAddress() {\n      var _this6 = this;\n\n      apiGetUserAddress(\"\", true).then(function (res) {\n        var found = res.Data.find(function (element) {\n          return element.IsDefault == 1;\n        });\n        found != undefined ? _this6.editUserAddress = false : _this6.editUserAddress = true;\n      });\n    }\n  }\n};",null]}