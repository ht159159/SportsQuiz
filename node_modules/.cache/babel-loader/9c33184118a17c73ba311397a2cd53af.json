{"remainingRequest":"C:\\work\\竞猜可换色板\\node_modules\\babel-loader\\lib\\index.js!C:\\work\\竞猜可换色板\\src\\store\\modules\\match.js","dependencies":[{"path":"C:\\work\\竞猜可换色板\\src\\store\\modules\\match.js","mtime":1609234294990},{"path":"C:\\work\\竞猜可换色板\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\work\\竞猜可换色板\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:\\\\work\\\\\\u7ADE\\u731C\\u53EF\\u6362\\u8272\\u677F\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/asyncToGenerator\";\n//match请求\nimport { apiGetMatchTypes, apiGetMatchs, apiGetMatch, apiGetMatchItemAndMainPlay, apiGetHistoryMatchList, apiGetMatchItemAndSpecialPlay, apiGetChallenge } from \"@/api/match.js\";\nvar match = {\n  state: {\n    MatchType: [],\n    Matchs: [],\n    MatchId: \"\",\n    rankmatchlist: [],\n    Matchitems: [],\n    MatchName: \"\",\n    MatchSpecial: [],\n    ChallengeId: 1,\n    TotalPages: \"\",\n    time: \"\",\n    lefttab: true,\n    righttab: false,\n    bgc1: false,\n    titlenum: -1,\n    loading: false,\n    comparisonMatchitems: []\n  },\n  mutations: {\n    uptitlenum: function uptitlenum(state, payload) {\n      state.titlenum = payload.id;\n    },\n    uptime: function uptime(state, payload) {\n      state.time = payload.slice(0, payload.indexOf(\"T\"));\n    },\n    upChallengeId: function upChallengeId(state, payload) {\n      state.ChallengeId = payload;\n    },\n    upMatchitems: function upMatchitems(state, payload) {\n      state.Matchitems = payload;\n    },\n    upComparisonMatchitems: function upComparisonMatchitems(state, payload) {\n      state.comparisonMatchitems = payload;\n    },\n    upRankmatchlist: function upRankmatchlist(state, payload) {\n      state.rankmatchlist = payload;\n    },\n    upMatchType: function upMatchType(state, payload) {\n      state.MatchType = payload;\n    },\n    //排位赛赛事\n    upMatchId: function upMatchId(state, payload) {\n      state.MatchId = payload.id;\n    },\n    //正常赛事 赛事id和赛事名字\n    upMatchid: function upMatchid(state, payload) {\n      state.MatchId = payload.MatchId;\n      state.MatchName = payload.MatchName;\n    },\n    //赛事\n    upMatchs: function upMatchs(state, payload) {\n      state.Matchs = payload.Matchs;\n      state.TotalPages = payload.page;\n    },\n    //特殊赛事\n    upMatchSpecial: function upMatchSpecial(state, payload) {\n      state.MatchSpecial = payload;\n    },\n    upBoolen: function upBoolen(state, payload) {\n      state.lefttab = payload.test11;\n      state.righttab = payload.test22;\n      state.bgc1 = payload.bgc1;\n    },\n    uploading: function uploading(state, payload) {\n      state.loading = payload;\n    }\n  },\n  actions: {\n    asyncChallengeid: function asyncChallengeid(context, payload) {\n      apiGetChallenge(\"\", true).then(function (res) {\n        context.commit(\"upChallengeId\", res.challengeId);\n      });\n    },\n    asyncgetMatchType: function asyncgetMatchType(context, payload) {\n      apiGetMatchTypes(payload).then(function (res) {\n        context.commit(\"upMatchType\", res.Data);\n      });\n    },\n    asyncgetMatchList: function asyncgetMatchList(context, payload) {\n      apiGetMatchs(payload).then(function (res) {\n        context.commit(\"upMatchs\", {\n          Matchs: res.Data,\n          page: res.TotalPages\n        });\n      });\n    },\n    //获取单个赛事\n    asyncgetMatch: function asyncgetMatch(context, payload) {\n      var data = {\n        matchId: context.state.MatchId\n      };\n      apiGetMatch(data).then(function (res) {});\n    },\n    //赛事玩法\n    asyncGetMatchplay: function () {\n      var _asyncGetMatchplay = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee(context, payload) {\n        var data;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                data = {\n                  matchId: context.state.MatchId,\n                  matchItemType: payload.id,\n                  index: 1,\n                  count: 100\n                };\n                _context.next = 3;\n                return apiGetMatchItemAndMainPlay(data, true).then(function (res) {\n                  // 確認主隊在TeamMatchItemViewModels裡面排在第0個位置，怕後端資料排序不統一，因為HTML那邊是固定抓TeamMatchItemViewModels[1]為主隊\n                  if (res.Data) {\n                    var teamAry = res.Data;\n                    var ComparisonMatchitems; //比較的資料\n\n                    teamAry.forEach(function (el) {\n                      if (el.TeamMatchItemViewModels[0].IsHome == false) {\n                        var newAry = el.TeamMatchItemViewModels.shift(0);\n                        el.TeamMatchItemViewModels.push(newAry);\n                      }\n                    });\n\n                    if (context.state.Matchitems != []) {\n                      // context.commit(\"upOldMatchitems\", context.state.Matchitems);\n                      context.commit(\"upComparisonMatchitems\", teamAry);\n                      ComparisonMatchitems = context.state.Matchitems;\n\n                      for (var i = 0; ComparisonMatchitems.length > i; i++) {\n                        for (var j = 0; teamAry.length > j; j++) {\n                          if (ComparisonMatchitems[i].MatchItemId == teamAry[j].MatchItemId) {\n                            //   console.log(ComparisonMatchitems[i].MatchItemId)\n                            for (var c = 0; ComparisonMatchitems[i].CommonPlayViewModelGroups.length > c; c++) {\n                              for (var cc = 1; ComparisonMatchitems[i].CommonPlayViewModelGroups[c].length > cc; cc++) {\n                                //判斷內容是否有一樣，不一樣才開始比較\n                                // console.log(j)\n                                // console.log(c)\n                                // console.log(teamAry)\n                                // console.log(teamAry[j])\n                                // console.log(teamAry[j].CommonPlayViewModelGroups[c])\n                                // console.log(teamAry[j].CommonPlayViewModelGroups[c][2])\n                                // console.log(teamAry[j].CommonPlayViewModelGroups[c][2].PlayId)\n                                // console.log(ComparisonMatchitems[i])\n                                // console.log(ComparisonMatchitems[i].CommonPlayViewModelGroups[c])\n                                // console.log(ComparisonMatchitems[i].CommonPlayViewModelGroups[c][2])\n                                if (teamAry[j].CommonPlayViewModelGroups[c] != undefined && ComparisonMatchitems[j].CommonPlayViewModelGroups[c] != undefined) {\n                                  if (teamAry[j].CommonPlayViewModelGroups[c][cc].PlayId != -1 && ComparisonMatchitems[i].CommonPlayViewModelGroups[c][cc].Text != teamAry[j].CommonPlayViewModelGroups[c][cc].Text) {\n                                    //比較2者大小 大是2 小是3\n                                    teamAry[j].CommonPlayViewModelGroups[c][cc].Text.split(\" \")[1] > ComparisonMatchitems[j].CommonPlayViewModelGroups[c][cc].Text.split(\" \")[1] ? ComparisonMatchitems[j].CommonPlayViewModelGroups[c][cc].compare = 2 : teamAry[j].CommonPlayViewModelGroups[c][cc].Text.split(\" \")[1] < ComparisonMatchitems[j].CommonPlayViewModelGroups[c][cc].Text.split(\" \")[1] ? ComparisonMatchitems[j].CommonPlayViewModelGroups[c][cc].compare = 3 : ComparisonMatchitems[j].CommonPlayViewModelGroups[c][cc].compare = 1;\n                                    context.commit(\"upComparisonMatchitems\", ComparisonMatchitems);\n                                  }\n                                }\n                              }\n                            }\n                          }\n                        }\n                      }\n\n                      context.commit(\"upMatchitems\", teamAry);\n                    } else {\n                      context.commit(\"upComparisonMatchitems\", teamAry);\n                      context.commit(\"upMatchitems\", teamAry);\n                    }\n\n                    context.commit(\"upMatchitems\", teamAry);\n\n                    if (res) {\n                      context.commit(\"uploading\", false);\n                    }\n\n                    if (res.Data.length == 0) {\n                      return 3;\n                    }\n                  }\n                });\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function asyncGetMatchplay(_x, _x2) {\n        return _asyncGetMatchplay.apply(this, arguments);\n      }\n\n      return asyncGetMatchplay;\n    }(),\n    // 更多赛事玩法\n    asyncGetMatchMorePlay: function asyncGetMatchMorePlay(context, payload) {\n      var data = {\n        playTypeList: payload.data.playTypeList,\n        matchItemType: payload.data.matchItemType,\n        matchId: context.state.MatchId,\n        index: 1,\n        count: 10\n      };\n      apiGetMatchItemAndSpecialPlay(data, true).then(function (res) {\n        if (res) {\n          context.commit(\"uploading\", false);\n        }\n\n        context.commit(\"upMatchSpecial\", res.Data);\n      });\n    },\n    //排行榜\n    asyncGetHistoryMatchList: function asyncGetHistoryMatchList(context, payload) {\n      apiGetHistoryMatchList(\"\", true).then(function (res) {\n        context.commit(\"upRankmatchlist\", res.Data);\n      });\n    }\n  }\n};\nexport default match;",{"version":3,"sources":["C:\\work\\竞猜可换色板\\src\\store\\modules\\match.js"],"names":["apiGetMatchTypes","apiGetMatchs","apiGetMatch","apiGetMatchItemAndMainPlay","apiGetHistoryMatchList","apiGetMatchItemAndSpecialPlay","apiGetChallenge","match","state","MatchType","Matchs","MatchId","rankmatchlist","Matchitems","MatchName","MatchSpecial","ChallengeId","TotalPages","time","lefttab","righttab","bgc1","titlenum","loading","comparisonMatchitems","mutations","uptitlenum","payload","id","uptime","slice","indexOf","upChallengeId","upMatchitems","upComparisonMatchitems","upRankmatchlist","upMatchType","upMatchId","upMatchid","upMatchs","page","upMatchSpecial","upBoolen","test11","test22","uploading","actions","asyncChallengeid","context","then","res","commit","challengeId","asyncgetMatchType","Data","asyncgetMatchList","asyncgetMatch","data","matchId","asyncGetMatchplay","matchItemType","index","count","teamAry","ComparisonMatchitems","forEach","el","TeamMatchItemViewModels","IsHome","newAry","shift","push","i","length","j","MatchItemId","c","CommonPlayViewModelGroups","cc","undefined","PlayId","Text","split","compare","asyncGetMatchMorePlay","playTypeList","asyncGetHistoryMatchList"],"mappings":"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","sourcesContent":["//match请求\r\nimport {\r\n    apiGetMatchTypes,\r\n    apiGetMatchs,\r\n    apiGetMatch,\r\n    apiGetMatchItemAndMainPlay,\r\n    apiGetHistoryMatchList,\r\n    apiGetMatchItemAndSpecialPlay,\r\n    apiGetChallenge\r\n} from \"@/api/match.js\";\r\n\r\nconst match = {\r\n    state: {\r\n        MatchType: [],\r\n        Matchs: [],\r\n        MatchId: \"\",\r\n        rankmatchlist: [],\r\n        Matchitems: [],\r\n        MatchName: \"\",\r\n        MatchSpecial: [],\r\n        ChallengeId: 1,\r\n        TotalPages: \"\",\r\n        time: \"\",\r\n        lefttab: true,\r\n        righttab: false,\r\n        bgc1: false,\r\n        titlenum: -1,\r\n        loading: false,\r\n        comparisonMatchitems: []\r\n    },\r\n    mutations: {\r\n        uptitlenum(state, payload) {\r\n            state.titlenum = payload.id;\r\n        },\r\n        uptime(state, payload) {\r\n            state.time = payload.slice(0, payload.indexOf(\"T\"));\r\n        },\r\n        upChallengeId(state, payload) {\r\n            state.ChallengeId = payload;\r\n        },\r\n        upMatchitems(state, payload) {\r\n            state.Matchitems = payload;\r\n        },\r\n        upComparisonMatchitems(state, payload) {\r\n            state.comparisonMatchitems = payload;\r\n        },\r\n        upRankmatchlist(state, payload) {\r\n            state.rankmatchlist = payload;\r\n        },\r\n        upMatchType(state, payload) {\r\n            state.MatchType = payload;\r\n        },\r\n        //排位赛赛事\r\n        upMatchId(state, payload) {\r\n            state.MatchId = payload.id;\r\n        },\r\n        //正常赛事 赛事id和赛事名字\r\n        upMatchid(state, payload) {\r\n            state.MatchId = payload.MatchId;\r\n            state.MatchName = payload.MatchName;\r\n        },\r\n        //赛事\r\n        upMatchs(state, payload) {\r\n            state.Matchs = payload.Matchs;\r\n            state.TotalPages = payload.page;\r\n        },\r\n        //特殊赛事\r\n        upMatchSpecial(state, payload) {\r\n            state.MatchSpecial = payload;\r\n        },\r\n        upBoolen(state, payload) {\r\n            state.lefttab = payload.test11;\r\n            state.righttab = payload.test22;\r\n            state.bgc1 = payload.bgc1;\r\n        },\r\n        uploading(state, payload) {\r\n            state.loading = payload;\r\n        }\r\n    },\r\n    actions: {\r\n        asyncChallengeid(context, payload) {\r\n            apiGetChallenge(\"\", true).then(res => {\r\n                context.commit(\"upChallengeId\", res.challengeId);\r\n            });\r\n        },\r\n        asyncgetMatchType(context, payload) {\r\n            apiGetMatchTypes(payload).then(res => {\r\n                context.commit(\"upMatchType\", res.Data);\r\n            });\r\n        },\r\n        asyncgetMatchList(context, payload) {\r\n            apiGetMatchs(payload).then(res => {\r\n                context.commit(\"upMatchs\", {\r\n                    Matchs: res.Data,\r\n                    page: res.TotalPages\r\n                });\r\n            });\r\n        },\r\n        //获取单个赛事\r\n        asyncgetMatch(context, payload) {\r\n            let data = {\r\n                matchId: context.state.MatchId\r\n            };\r\n\r\n            apiGetMatch(data).then(res => {});\r\n        },\r\n        //赛事玩法\r\n        async asyncGetMatchplay(context, payload) {\r\n            let data = {\r\n                matchId: context.state.MatchId,\r\n                matchItemType: payload.id,\r\n                index: 1,\r\n                count: 100\r\n            };\r\n            await apiGetMatchItemAndMainPlay(data, true).then(res => {\r\n                // 確認主隊在TeamMatchItemViewModels裡面排在第0個位置，怕後端資料排序不統一，因為HTML那邊是固定抓TeamMatchItemViewModels[1]為主隊\r\n                if(res.Data){\r\n                    let teamAry = res.Data;\r\n                    let ComparisonMatchitems;//比較的資料\r\n                    teamAry.forEach(el => {\r\n                        if (el.TeamMatchItemViewModels[0].IsHome == false) {\r\n                            let newAry =  el.TeamMatchItemViewModels.shift(0);\r\n                            el.TeamMatchItemViewModels.push(newAry)\r\n                        }\r\n                    });\r\n                    if (context.state.Matchitems != []) {\r\n\r\n                        // context.commit(\"upOldMatchitems\", context.state.Matchitems);\r\n                        context.commit(\"upComparisonMatchitems\", teamAry);\r\n                        ComparisonMatchitems = context.state.Matchitems;\r\n                        for(let i = 0; ComparisonMatchitems.length > i; i++){\r\n                            for(let j = 0; teamAry.length > j; j++){\r\n                                if(ComparisonMatchitems[i].MatchItemId == teamAry[j].MatchItemId) {\r\n                                        //   console.log(ComparisonMatchitems[i].MatchItemId)\r\n                                    for(let c = 0; ComparisonMatchitems[i].CommonPlayViewModelGroups.length > c; c++) {\r\n                                        for(let cc = 1; ComparisonMatchitems[i].CommonPlayViewModelGroups[c].length > cc; cc++){\r\n                                            //判斷內容是否有一樣，不一樣才開始比較\r\n                                            // console.log(j)\r\n                                            // console.log(c)\r\n                                            // console.log(teamAry)\r\n                                            // console.log(teamAry[j])\r\n                                            // console.log(teamAry[j].CommonPlayViewModelGroups[c])\r\n                                            // console.log(teamAry[j].CommonPlayViewModelGroups[c][2])\r\n                                            // console.log(teamAry[j].CommonPlayViewModelGroups[c][2].PlayId)\r\n                                            // console.log(ComparisonMatchitems[i])\r\n                                            // console.log(ComparisonMatchitems[i].CommonPlayViewModelGroups[c])\r\n                                            // console.log(ComparisonMatchitems[i].CommonPlayViewModelGroups[c][2])\r\n                                            if (teamAry[j].CommonPlayViewModelGroups[c] != undefined && ComparisonMatchitems[j].CommonPlayViewModelGroups[c] != undefined) {                          \r\n                                                if(teamAry[j].CommonPlayViewModelGroups[c][cc].PlayId != -1 && ComparisonMatchitems[i].CommonPlayViewModelGroups[c][cc].Text != teamAry[j].CommonPlayViewModelGroups[c][cc].Text){\r\n                                                    \r\n                                                    //比較2者大小 大是2 小是3\r\n                                                    teamAry[j].CommonPlayViewModelGroups[c][cc].Text.split(\" \")[1] > ComparisonMatchitems[j].CommonPlayViewModelGroups[c][cc].Text.split(\" \")[1] ? ComparisonMatchitems[j].CommonPlayViewModelGroups[c][cc].compare = 2 : teamAry[j].CommonPlayViewModelGroups[c][cc].Text.split(\" \")[1] < ComparisonMatchitems[j].CommonPlayViewModelGroups[c][cc].Text.split(\" \")[1] ? ComparisonMatchitems[j].CommonPlayViewModelGroups[c][cc].compare = 3 : ComparisonMatchitems[j].CommonPlayViewModelGroups[c][cc].compare = 1;\r\n                                                    context.commit(\"upComparisonMatchitems\", ComparisonMatchitems);\r\n                                                }\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                        \r\n                        context.commit(\"upMatchitems\", teamAry);\r\n                    }else{\r\n                        context.commit(\"upComparisonMatchitems\", teamAry);\r\n                        context.commit(\"upMatchitems\", teamAry);\r\n                    }\r\n                    context.commit(\"upMatchitems\", teamAry);\r\n                    if (res) {\r\n                        context.commit(\"uploading\", false);\r\n                    }\r\n                    if (res.Data.length == 0) {\r\n                        return 3;\r\n                    }\r\n                }\r\n            });\r\n        },\r\n        // 更多赛事玩法\r\n        asyncGetMatchMorePlay(context, payload) {\r\n            let data = {\r\n                playTypeList: payload.data.playTypeList,\r\n                matchItemType: payload.data.matchItemType,\r\n                matchId: context.state.MatchId,\r\n                index: 1,\r\n                count: 10\r\n            };\r\n            apiGetMatchItemAndSpecialPlay(data, true).then(res => {\r\n                if (res) {\r\n                    context.commit(\"uploading\", false);\r\n                }\r\n                context.commit(\"upMatchSpecial\", res.Data);\r\n            });\r\n        },\r\n        //排行榜\r\n        asyncGetHistoryMatchList(context, payload) {\r\n            apiGetHistoryMatchList(\"\", true).then(res => {\r\n                context.commit(\"upRankmatchlist\", res.Data);\r\n            });\r\n        }\r\n    }\r\n};\r\n\r\nexport default match;"]}]}