{"remainingRequest":"C:\\work\\竞猜可换色板\\node_modules\\thread-loader\\dist\\cjs.js!C:\\work\\竞猜可换色板\\node_modules\\babel-loader\\lib\\index.js!C:\\work\\竞猜可换色板\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\work\\竞猜可换色板\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\work\\竞猜可换色板\\src\\views\\club\\CreateClubSet.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\work\\竞猜可换色板\\src\\views\\club\\CreateClubSet.vue","mtime":1605499100502},{"path":"C:\\work\\竞猜可换色板\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\work\\竞猜可换色板\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\work\\竞猜可换色板\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\work\\竞猜可换色板\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\work\\竞猜可换色板\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.typed.uint8-array\";\nimport \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.regexp.to-string\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport back from \"@/components/Botton/back.vue\"; // import { apiGetMissionList, apiAddMission, apiReceiveMissionReward } from \"@/api/mission.js\";\n// import { apiGetMatchs } from \"@/api/match\";\n\nimport { apiGetClubMatchs } from \"@/api/ClubActivitys.js\";\nimport { apiClubUpload, apiMemApplyClub } from \"@/api/Club\";\nimport { swiper, swiperSlide, directive } from \"vue-awesome-swiper\";\nimport \"swiper/css/swiper.css\";\nexport default {\n  components: {\n    back: back,\n    swiper: swiper,\n    swiperSlide: swiperSlide\n  },\n  directives: {\n    swiper: directive\n  },\n  data: function data() {\n    return {\n      noMission: false,\n      checkList: [],\n      matchsList: [],\n      busy: false,\n      loading: false,\n      push: true,\n      IndexNum: 1,\n      noMore: false,\n      clubName: '',\n      clubSlogan: '',\n      upImg: false,\n      getClubMatchsData: {\n        matchTypeId: 2,\n        index: 1,\n        count: 8,\n        havaPlay: true,\n        matchItemTypeId: -1\n      },\n      totalPages: \"\",\n      swiperOptions: {\n        pagination: {\n          el: '.swiper-pagination',\n          dynamicBullets: true\n        } // Some Swiper option/callback...\n\n      }\n    };\n  },\n  created: function created() {// this.getTaskList(this.categoryType);\n  },\n  computed: {\n    swiper: function swiper() {\n      return this.$refs.mySwiper.swiper;\n    }\n  },\n  mounted: function mounted() {\n    var _this2 = this;\n\n    // console.log('Current Swiper instance object', this.swiper)\n    apiGetClubMatchs(this.getClubMatchsData, true).then(function (res) {\n      // this.swiper.appendSlide('<div class=\"swiper-slide\">加載中.......</div>')\n      _this2.totalPages = res.Data.TotalPages;\n\n      for (var i = 0; res.Data.TotalPages > i; i++) {\n        _this2.matchsList.push([]);\n      }\n\n      ;\n\n      for (var _i = 0; res.Data.Data.length > _i; _i++) {\n        _this2.matchsList[_this2.swiper.activeIndex].push(res.Data.Data[_i]);\n      }\n\n      ;\n      _this2.getClubMatchsData.index++;\n    });\n    this.swiper.on('slideChange', function () {\n      // console.log(this.swiper.activeIndex); //滑动打印当前索引\n      if (_this2.getClubMatchsData.index > _this2.totalPages) {\n        return;\n      }\n\n      _this2.onLoad(_this2.swiper.activeIndex);\n    }); //   let data1 = {\n    //   matchTypeId: 2,\n    //   index: 1,\n    //   count: 10,\n    //   havaPlay: true,\n    //   matchItemTypeId: -1\n    // };\n    // apiGetMatchs(data1, true).then(res => {\n    //   console.log(res)\n    //   this.matchsList = res.Data;\n    // });\n  },\n  methods: {\n    creat: function creat() {\n      var _this3 = this;\n\n      if (this.clubName == \"\") {\n        this.$message({\n          message: this.$t(\"FillYourClub\"),\n          type: \"error\",\n          center: true,\n          duration: 1200\n        });\n      } else if (this.clubSlogan == \"\") {\n        this.$message({\n          message: this.$t(\"FillYourClubSlogan\"),\n          type: \"error\",\n          center: true,\n          duration: 1200\n        });\n      } else if (this.checkList.toString() == \"\") {\n        this.$message({\n          message: this.$t(\"FillYourFavoriteEvent\"),\n          type: \"error\",\n          center: true,\n          duration: 1200\n        });\n      } else if (localStorage.getItem(\"imgName\") == \"\") {\n        this.$message({\n          message: this.$t(\"UploadYourClubLogo\"),\n          type: \"error\",\n          center: true,\n          duration: 1200\n        });\n      } else {\n        var memApplyClubData = {\n          ClubName: this.clubName,\n          SloganLabel: this.clubSlogan,\n          MatchId: this.checkList.toString() + \",\",\n          ClubImg: localStorage.getItem(\"imgName\"),\n          UName: localStorage.getItem(\"uname\")\n        };\n        apiMemApplyClub(memApplyClubData, true).then(function (res) {\n          if (res.Success) {\n            _this3.$message({\n              message: res.Message,\n              type: \"success\",\n              center: true,\n              duration: 1200\n            });\n\n            _this3.$router.push(\"/Myself\");\n          } else {\n            _this3.$message({\n              message: res.Message,\n              type: \"error\",\n              center: true,\n              duration: 1200\n            });\n          }\n        });\n      }\n    },\n    onLoad: function onLoad(activeIndex) {\n      var _this4 = this;\n\n      // this.busy = true;\n      //  let data1 = {\n      //   matchTypeId: 2,\n      //   index: this.IndexNum,\n      //   count: 8,\n      //   havaPlay: true,\n      //   matchItemTypeId: -1\n      // }\n      apiGetClubMatchs(this.getClubMatchsData, true).then(function (res) {\n        // if(res.Data.length == 0){\n        //   this.swiper.appendSlide('<div class=\"swiper-slide\">noMore.......</div>')\n        //   this.noMore = true\n        //   // this.push = false;\n        //   return\n        // }\n        // this.swiper.appendSlide('<div class=\"swiper-slide\">加載中.......</div>')\n        for (var i = 0; res.Data.Data.length > i; i++) {\n          _this4.matchsList[activeIndex].push(res.Data.Data[i]);\n        } // for(let i = 0; res.Data.length>i; i++){\n        //   this.matchsList.push(res.Data[i])\n        //   this.busy = false;\n        // }\n\n\n        _this4.getClubMatchsData.index++;\n      });\n    },\n    // 图片上传功能\n    tirggerFile: function tirggerFile(event) {\n      var file = event.target.files[0];\n      var imgSize = file.size;\n      var param = new FormData(); // 创建form对象\n\n      param.append('file', file, file.name); // 通过append向form对象添加数据\n\n      param.append('type', '1'); // 添加form表单中其他数据\n      // console.log(param.get('file')) // FormData私有类对象，访问不到，可以通过get判断值是否传进去\n\n      if (!event.target.files.length) return;\n\n      if (imgSize / 1024 > 10000) {\n        this.$message({\n          message: this.$t(\"PictureIsTooBig\"),\n          type: \"warning\",\n          center: true,\n          duration: 1200\n        });\n      } else {\n        this.imgPreview(file);\n      }\n    },\n    // 获取图片\n    imgPreview: function imgPreview(file, callback) {\n      var _this = this; // this指向问题，所以在外面先定义\n\n\n      var config = {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        },\n        contentType: false,\n        //required\n        processData: false // required\n\n      }; // 判断是否支持FileReader\n\n      if (!file || !window.FileReader) return; // 创建一个reader\n\n      var reader = new FileReader(); // 将图片转成base64格式\n\n      reader.readAsDataURL(file);\n\n      reader.onloadend = function () {\n        var result = this.result;\n        var img = new Image();\n        img.src = result; // console.log('============未压缩图片===========')\n\n        img.onload = function () {\n          var data = _this.compress(img);\n\n          _this.imgUrl = result;\n\n          var blob = _this.dataURItoBlob(data); // console.log('*******base64转blob对象******')\n\n\n          var param = new FormData(); // 创建form对象\n\n          param.append('file', blob, file.name); // 通过append向form对象添加数据\n\n          param.append('type', \"club\");\n          apiClubUpload(param, config).then(function (res) {\n            if (res.Success) {\n              _this.$message({\n                message: _this.$t(\"UploadSuccessfully\"),\n                type: \"success\",\n                center: true,\n                duration: 1200\n              }); //顯示圖片\n\n\n              _this.upImg = true;\n              document.querySelector('#demo').setAttribute('src', result);\n              localStorage.setItem(\"imgName\", file.name);\n            } else {\n              _this.$message({\n                message: _this.$t(\"UploadFailed\"),\n                type: \"error\",\n                center: true,\n                duration: 1200\n              });\n            }\n          });\n        };\n      };\n    },\n    // 压缩图片\n    compress: function compress(img) {\n      var canvas = document.createElement('canvas');\n      var ctx = canvas.getContext('2d'); // let initSize = img.src.length\n\n      var width = img.width;\n      var height = img.height;\n      canvas.width = width;\n      canvas.height = height; // 铺底色\n\n      ctx.fillStyle = '#fff';\n      ctx.fillRect(0, 0, canvas.width, canvas.height);\n      ctx.drawImage(img, 0, 0, width, height); // 进行最小压缩\n\n      var ndata = canvas.toDataURL('image/jpeg', 0.1); // console.log('*******压缩后的图片大小*******')\n\n      return ndata;\n    },\n    dataURItoBlob: function dataURItoBlob(base64Data) {\n      var byteString;\n      if (base64Data.split(',')[0].indexOf('base64') >= 0) byteString = atob(base64Data.split(',')[1]);else byteString = unescape(base64Data.split(',')[1]);\n      var mimeString = base64Data.split(',')[0].split(':')[1].split(';')[0];\n      var ia = new Uint8Array(byteString.length);\n\n      for (var i = 0; i < byteString.length; i++) {\n        ia[i] = byteString.charCodeAt(i);\n      }\n\n      return new Blob([ia], {\n        type: mimeString\n      });\n    }\n  },\n  destroyed: function destroyed() {\n    localStorage.setItem(\"imgName\", \"\");\n  }\n};",null]}