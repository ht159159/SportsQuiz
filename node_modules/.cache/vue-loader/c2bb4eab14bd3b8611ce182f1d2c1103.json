{"remainingRequest":"C:\\work\\竞猜可换色板\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\work\\竞猜可换色板\\src\\views\\personalCenter\\Questionnaire.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\work\\竞猜可换色板\\src\\views\\personalCenter\\Questionnaire.vue","mtime":1604904546431},{"path":"C:\\work\\竞猜可换色板\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\work\\竞猜可换色板\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\work\\竞猜可换色板\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\work\\竞猜可换色板\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\work\\竞猜可换色板\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport {\r\n  apiGetQuestionnaireAndQAList,\r\n  apiAddQuestionnaireFeedback\r\n} from \"@/api/Questionnaire.js\";\r\nimport back from \"@/components/Botton/back.vue\";\r\nexport default {\r\n  components: {\r\n    back\r\n  },\r\n  data() {\r\n    return {\r\n      questionListData: {\r\n        id: 0,\r\n        index: 1,\r\n        count: 10\r\n      },\r\n      questionList: [],\r\n      newQuestionList: [],\r\n      textContent: \"\",\r\n      textLen: 0,\r\n      questionIndex: 0,\r\n      uid: \"\",\r\n      submitData: [],\r\n      answerIdList: [],\r\n      contentStrList: []\r\n    };\r\n  },\r\n  async created() {\r\n    this.uid = localStorage.getItem(\"UId\");\r\n    await apiGetQuestionnaireAndQAList(this.questionListData, true).then(\r\n      res => {\r\n        this.questionList = res;\r\n        this.newQuestionListAry();\r\n      }\r\n    );\r\n  },\r\n  methods: {\r\n    // 判斷API資料有幾道題目，生成幾個空陣列\r\n    newQuestionListAry() {\r\n      for (let i = 0; i < this.questionList.questionnaires.length; i++) {\r\n        this.newQuestionList.push([]);\r\n        this.questionList.questionnaires[i].IsChooseMore == 1 ? this.contentStrList.push([]) : this.contentStrList.push(\"\")\r\n        this.questionList.questionnaires[i].IsChooseMore == 1 ? this.answerIdList.push([]) : this.answerIdList.push(\"\")\r\n      }\r\n    },\r\n\r\n    // 判斷多選或單選\r\n    bindCheckBox(i, index, e) {\r\n      this.questionIndex = i;\r\n      if (this.questionList.questionnaires[i].IsChooseMore === 0) {\r\n        if (e === true) {\r\n          this.submitData[i] = {\r\n            Id: 0,\r\n            Uid: this.uid,\r\n            QuestionnaireId: this.questionList.Id,\r\n            QuestionId: this.questionList.questionnaires[i].Id,\r\n            AnswerId: this.questionList.questionnaires[i].questionnaireAnswers[\r\n              index\r\n            ].Id,\r\n            ContentStr: this.questionList.questionnaires[i]\r\n              .questionnaireAnswers[index].AnswerTxt\r\n          };\r\n          if (this.newQuestionList[i].length > 1) {\r\n            this.newQuestionList[i].splice(0, 1);\r\n          }\r\n        } else {\r\n          this.submitData[i] = \"\";\r\n        }\r\n      }\r\n      if (this.questionList.questionnaires[i].IsChooseMore === 1) {\r\n        let answerId = \"\";\r\n        let contentStr = \"\";\r\n        answerId = String(\r\n          this.questionList.questionnaires[i].questionnaireAnswers[index].Id\r\n        );\r\n        contentStr = this.questionList.questionnaires[i].questionnaireAnswers[\r\n          index\r\n        ].AnswerTxt;\r\n        if (e === true) {\r\n          if (typeof this.contentStrList[i] === \"string\") {\r\n            this.contentStrList[i] = this.contentStrList[i].split(\",\");\r\n            this.contentStrList[i].push(contentStr);\r\n            this.contentStrList[i] = this.contentStrList[i].join(\",\");\r\n          } else {\r\n            this.contentStrList[i].push(contentStr);\r\n            this.contentStrList[i] = this.contentStrList[i].join(\",\");\r\n          }\r\n\r\n          if (typeof this.answerIdList[i] === \"string\") {\r\n            this.answerIdList[i] = this.answerIdList[i].split(\",\");\r\n            this.answerIdList[i].push(answerId);\r\n            this.answerIdList[i] = this.answerIdList[i].join(\",\");\r\n          } else {\r\n            this.answerIdList[i].push(answerId);\r\n            this.answerIdList[i] = this.answerIdList[i].join(\",\");\r\n          }\r\n        } else {\r\n          if (typeof this.contentStrList[i] === \"string\") {\r\n            this.contentStrList[i] = this.contentStrList[i].split(\",\");\r\n\r\n            if (this.contentStrList[i].indexOf(contentStr) >= 0) {\r\n              this.contentStrList[i].splice(\r\n                this.contentStrList[i].indexOf(contentStr),\r\n                1\r\n              );\r\n              if (this.contentStrList[i].length > 0)\r\n                this.contentStrList[i] = this.contentStrList[i].join(\",\");\r\n            }\r\n          }\r\n          if (typeof this.answerIdList[i] === \"string\") {\r\n            this.answerIdList[i] = this.answerIdList[i].split(\",\");\r\n\r\n            if (this.answerIdList[i].indexOf(answerId) >= 0) {\r\n              this.answerIdList[i].splice(this.answerIdList[i].indexOf(answerId), 1);\r\n              if (this.answerIdList[i].length > 0)\r\n                this.answerIdList[i] = this.answerIdList[i].join(\",\");\r\n            }\r\n          }\r\n        }\r\n        this.submitData[i] = {\r\n          Id: 0,\r\n          Uid: this.uid,\r\n          QuestionnaireId: this.questionList.Id,\r\n          QuestionId: this.questionList.questionnaires[i].Id,\r\n          AnswerId: this.answerIdList[i],\r\n          ContentStr: this.contentStrList[i]\r\n        };\r\n\r\n        if (this.submitData[i].AnswerId == \"\") {\r\n          this.submitData[i] = \"\";\r\n        }\r\n      }\r\n    },\r\n\r\n    // 字數限制\r\n    textcontrol(i) {\r\n      let len = this.textContent.length;\r\n      this.textLen = len;\r\n      this.submitData[i] = {\r\n        Id: 0,\r\n        Uid: this.uid,\r\n        QuestionnaireId: this.questionList.Id,\r\n        QuestionId: this.questionList.questionnaires[i].Id,\r\n        AnswerId: \"\",\r\n        ContentStr: this.textContent\r\n      };\r\n    },\r\n\r\n    // 送出\r\n    submit() {\r\n      // this.questionList.questionnaires.length\r\n      let submitDataJSON;\r\n      var promise = new Promise((resolve, reject) => {\r\n//         for (let i = 0; i < this.newQuestionList.length - 1; i++) {\r\n//           if (this.newQuestionList[i].length < 1) {\r\n//             // alert(\"請填選答案\");\r\n//             this.$message({\r\n//               message: this.$t(\"FillAnswer\"),\r\n//               type: \"error\",\r\n//               center: true,\r\n//               duration: 1200\r\n//             });\r\n// console.log(this.submitData)\r\n//             return;\r\n//           }\r\n//         }\r\n\r\n          // if (this.textContent != \"\") {\r\n          //   this.submitData[this.submitData.length] = {\r\n          //     Id: 0,\r\n          //     Uid: this.uid,\r\n          //     QuestionnaireId: this.questionList.Id,\r\n          //     QuestionId: this.questionList.questionnaires[\r\n          //       this.questionList.questionnaires.length - 1\r\n          //     ].Id,\r\n          //     AnswerId: \"\",\r\n          //     ContentStr: this.textContent\r\n          //   };\r\n          // }\r\n        for (let i = 0; i < this.newQuestionList.length; i++) {\r\n          if (this.submitData[i] == undefined || this.submitData[i] == \"\") {\r\n            // alert(\"請填選答案\");\r\n            this.$message({\r\n              message: this.$t(\"FillAnswer\"),\r\n              type: \"error\",\r\n              center: true,\r\n              duration: 1200\r\n            });\r\n            return;\r\n          }\r\n        }\r\n        resolve();\r\n      });\r\n\r\n      promise.then(() => {\r\n        submitDataJSON = this.submitData;\r\n        apiAddQuestionnaireFeedback(submitDataJSON, true).then(res => {\r\n          var messagePromise = new Promise((resolve, reject) => {\r\n            if (res.Code == \"600\") {\r\n              this.$message({\r\n                message: res.Message,\r\n                type: \"warning\",\r\n                center: true,\r\n                duration: 1800\r\n              });\r\n            } else {\r\n              this.$message({\r\n                message: this.$t(\"SubmittedSuccessfully\"),\r\n                type: \"success\",\r\n                center: true,\r\n                duration: 1800\r\n              });\r\n            }\r\n            resolve();\r\n          });\r\n          messagePromise.then(() => {\r\n            history.back();\r\n          });\r\n        });\r\n      });\r\n    }\r\n  }\r\n};\r\n",null]}