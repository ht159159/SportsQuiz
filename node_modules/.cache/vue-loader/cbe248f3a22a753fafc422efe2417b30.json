{"remainingRequest":"C:\\work\\竞猜可换色板\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\work\\竞猜可换色板\\src\\views\\club\\ClubActiveBet.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\work\\竞猜可换色板\\src\\views\\club\\ClubActiveBet.vue","mtime":1605511605185},{"path":"C:\\work\\竞猜可换色板\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\work\\竞猜可换色板\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\work\\竞猜可换色板\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\work\\竞猜可换色板\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\work\\竞猜可换色板\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport back from \"@/components/Botton/back.vue\";\r\nimport {\r\n  apiGetClubGamblingBetInfo,\r\n  apiClubGamblingBet\r\n} from \"@/api/ClubGamblings.js\";\r\nexport default {\r\n  components: {\r\n    back\r\n  },\r\n  data() {\r\n    return {\r\n      uName: \"\",\r\n      clubGamblingId: \"\",\r\n      betObj: [],\r\n      playList: \"\",\r\n      betNum: \"\",\r\n      betNumSelect: [200, 500, 1000, 2000, 5000, this.$t(\"MaximumAmount\")],\r\n      betNumSelectIndex: undefined,\r\n      expectedProfit: undefined,\r\n      isOverMaxBetNum: false,\r\n    };\r\n  },\r\n  watch: {\r\n    betNum: function(num) {\r\n      if (num > this.betObj.MaxDeposit) {\r\n        let vm = this;\r\n        const m = vm.$message({\r\n          message: this.$t(\"ExceedsThMaximumAmount\"),\r\n          duration: 3000,\r\n          type: \"warning\",\r\n          center: true\r\n        });\r\n        setTimeout(() => m.close(), 2000);\r\n        this.betNum = 0;\r\n        this.expectedProfit = 0;\r\n      } else {\r\n        this.expectedProfit = (this.betNum * (this.playList.OddsValue - 1)).toFixed(1);\r\n      }\r\n    }\r\n  },\r\n  created() {\r\n    this.getBetId();\r\n    this.getBetInfo();\r\n  },\r\n  mounted() {},\r\n  methods: {\r\n    // 獲取投注id 供API使用\r\n    async getBetId() {\r\n      this.uName = localStorage.getItem(\"uname\");\r\n      this.clubGamblingId = localStorage.getItem(\"betId\");\r\n    },\r\n    // 取得投注資訊\r\n    async getBetInfo() {\r\n      let data = {\r\n        ClubGamblingId: this.clubGamblingId\r\n      };\r\n      await apiGetClubGamblingBetInfo(data, true).then(res => {\r\n        this.betObj = res.Data;\r\n        this.playList = res.Data.PlayList[0];\r\n      });\r\n    },\r\n    // 選擇投注金額\r\n    selectBetNum(num, index) {\r\n      this.betNum = num;\r\n      this.betNumSelectIndex = index;\r\n\r\n      // 预计盈利\r\n      this.expectedProfit = (this.betNum * this.playList.OddsValue).toFixed(1);\r\n      if (num == \"最大金额\") {\r\n        this.betNum = this.betObj.MaxDeposit;\r\n        this.expectedProfit = (this.betNum * (this.playList.OddsValue - 1)).toFixed(1);\r\n      }\r\n    },\r\n\r\n    // 下注\r\n    bet() {\r\n      if (this.betNum > this.betObj.MaxDeposit) {\r\n        let vm = this;\r\n        const m = vm.$message({\r\n          message: this.$t(\"betAmountNotMatch\"),\r\n          duration: 3000,\r\n          type: \"error\",\r\n          center: true\r\n        });\r\n        setTimeout(() => m.close(), 2000);\r\n        return;\r\n      }\r\n      let data = {\r\n        UName: this.uName,\r\n        Amount: this.betNum,\r\n        ClubGamblingId: this.clubGamblingId\r\n      };\r\n      apiClubGamblingBet(data, true).then(res => {\r\n        if (res.Data) {\r\n          let vm = this;\r\n          const m = vm.$message({\r\n            message: this.$t(\"BettingSuccess\"),\r\n            duration: 3000,\r\n            type: \"success\",\r\n            center: true\r\n          });\r\n          setTimeout(() => {\r\n            m.close();\r\n            this.$router.push(\"/myClub\");\r\n          }, 750);\r\n          return;\r\n        } else {\r\n          let vm = this;\r\n          const m = vm.$message({\r\n            message: res.Message,\r\n            duration: 3000,\r\n            type: \"error\",\r\n            center: true\r\n          });\r\n          setTimeout(() => m.close(), 2000);\r\n          return;\r\n        }\r\n      });\r\n    }\r\n  }\r\n};\r\n",null]}