{"remainingRequest":"C:\\Users\\Yang\\Desktop\\新增資料夾\\竞猜可换色板\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Yang\\Desktop\\新增資料夾\\竞猜可换色板\\src\\components\\FlowAd.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Yang\\Desktop\\新增資料夾\\竞猜可换色板\\src\\components\\FlowAd.vue","mtime":1608885922143},{"path":"C:\\Users\\Yang\\Desktop\\新增資料夾\\竞猜可换色板\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Yang\\Desktop\\新增資料夾\\竞猜可换色板\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Yang\\Desktop\\新增資料夾\\竞猜可换色板\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport model from \"@/components/model\";\r\nimport { apiGetFlowAdByType, apiWatchedFlowAd } from \"@/api/FlowAd.js\";\r\nexport default {\r\n  props: {\r\n    isOpenAd: Boolean,\r\n    adTypeId: Number,\r\n    AdObj: Object,\r\n    // isFinished: Boolean\r\n  },\r\n  components: {\r\n    model\r\n  },\r\n  watch: {\r\n    isOpenAd: function(bool) {\r\n      if(bool) {\r\n        this.getAdByType();\r\n      }\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      isOpen: this.isOpenAd,\r\n      adType: 0,\r\n      flowAdId: undefined,\r\n      isDataLoaded: true,\r\n      watchTime: 0,\r\n      FlowAdUrl: \"\",\r\n      openAdIframe: false,\r\n      restTime: 0,\r\n      isTimeUp: false,\r\n      timer: \"\",\r\n      dataLen: undefined,\r\n      isFasilAd: false,\r\n      isSucessAd: false,\r\n      reward: \"\",\r\n      isFinish: false,\r\n      lang: \"\",\r\n    };\r\n  },\r\n  created() {\r\n    this.lang = JSON.parse(localStorage.getItem(\"lang\")).tag;\r\n  },\r\n  methods: {\r\n    // 獲取廣告\r\n    async getAdByType() {\r\n      let len = this.AdObj.Id;\r\n      this.dataLen = len;\r\n      this.flowAdId = this.AdObj.Id;\r\n      this.watchTime = this.AdObj.WatchTime;\r\n      this.FlowAdUrl = this.AdObj.FlowAdUrl;\r\n      this.reward = this.AdObj.Amount;\r\n      // 取到廣告ID值之前按鈕先鎖住，等取到之後再解鎖\r\n      this.isDataLoaded = false;\r\n    },\r\n    // 取消觀看廣告按鈕\r\n    cancelBtn() {\r\n      this.isOpen = false;\r\n      this.$emit(\"update:isOpenAd\", this.isOpen);\r\n    },\r\n    // 確認觀看廣告按鈕\r\n    async confirmBtnEvent() {\r\n      this.isOpen = false;\r\n      this.$emit(\"update:isOpenAd\", this.isOpen);\r\n\r\n      if (this.dataLen > 0) {\r\n        this.openAdIframe = true;\r\n        this.countDownTimer();\r\n      } else {\r\n        let vm = this;\r\n        const m = vm.$message({\r\n          message: \"目前無廣告\",\r\n          duration: 3000,\r\n          type: \"error\",\r\n          center: true\r\n        });\r\n        setTimeout(() => m.close(), 2000);\r\n      }\r\n    },\r\n\r\n    // 計時器\r\n    countDownTimer() {\r\n      this.isTimeUp = false;\r\n      this.timer = \"\";\r\n      clearInterval(this.timer);\r\n      this.restTime = this.watchTime;\r\n      this.timer = setInterval(() => {\r\n        if (this.restTime == 0) {\r\n          this.isTimeUp = true;\r\n          return;\r\n        }\r\n        this.restTime = this.restTime - 1;\r\n      }, 1000);\r\n    },\r\n\r\n    // 點擊關閉廣告\r\n    closeAd() {\r\n      let data = {\r\n        Id: this.flowAdId\r\n      }\r\n      apiWatchedFlowAd(data, true).then(res => {\r\n        // 清除計時器\r\n        if (this.isFasilAd == false) {\r\n          clearInterval(this.timer);\r\n          this.timer = \"\";\r\n        }\r\n        // 觀看完成成功 & 失敗情況\r\n        if (Math.abs(res.Code) >= 600) {\r\n          this.isFasilAd = true;\r\n        } else {\r\n          this.isFasilAd = false;\r\n          this.openAdIframe = false;\r\n          this.isSucessAd = true;\r\n        }\r\n      });\r\n    },\r\n\r\n    // 觀看廣告失敗取消按鈕\r\n    failCancelBtn() {\r\n      this.isFasilAd = false;\r\n      this.openAdIframe = false;\r\n      clearInterval(this.timer);\r\n    },\r\n    // 觀看廣告失敗確認按鈕\r\n    failConfirmBtn() {\r\n      this.isFasilAd = false;\r\n      this.openAdIframe = false;\r\n\r\n      this.getAdByType().then(() => {\r\n        this.confirmBtnEvent();\r\n      })\r\n    },\r\n  },\r\n\r\n  // 離開本頁時清除計時器\r\n  destroyed() {\r\n    this.timer = \"\";\r\n    clearInterval(this.timer);\r\n  },\r\n};\r\n",null]}