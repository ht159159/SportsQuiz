{"remainingRequest":"C:\\work\\竞猜可换色板\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\work\\竞猜可换色板\\src\\components\\roundTurntable.vue?vue&type=style&index=0&id=136cc057&scoped=true&lang=scss&","dependencies":[{"path":"C:\\work\\竞猜可换色板\\src\\components\\roundTurntable.vue","mtime":1587026299234},{"path":"C:\\work\\竞猜可换色板\\node_modules\\@vue\\cli-service\\node_modules\\css-loader\\index.js","mtime":499162500000},{"path":"C:\\work\\竞猜可换色板\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\work\\竞猜可换色板\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\work\\竞猜可换色板\\node_modules\\sass-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\work\\竞猜可换色板\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\work\\竞猜可换色板\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.turntable {\n  /*background-color: red;*/\n  // position: absolute;\n  // left: 0;\n  // top: 0;\n  // background-color: gray;\n  text-align: center;\n  transform: translateZ(0);\n  border-radius: 50%;\n  .myTurntable {\n    position: absolute;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100%;\n    background: url(\"~@/assets/大转盘.png\");\n    background-size: 100%;\n    background-repeat: no-repeat;\n  }\n  .prize-container {\n    position: absolute;\n    left: 25%;\n    top: 0;\n    width: 50%;\n    height: 50%;\n    .item {\n      /*background: pink;*/\n      position: absolute;\n      left: 0;\n      top: 0;\n      width: 100%;\n      height: 100%;\n      transform-origin: center bottom;\n    }\n  }\n}\n",{"version":3,"sources":["roundTurntable.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+IA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"roundTurntable.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"turntable\" ref=\"turntable\">\n    <div\n      class=\"myTurntable\"\n      :style=\"{ transform: rotateAngle, transition: rotateTransition }\"\n    >\n      <!-- <canvas id=\"canvas\" ref=\"canvas\">\n        当前浏览器版本过低，请使用其他浏览器尝试\n      </canvas> -->\n      <div class=\"prize-container\">\n        <div\n          v-for=\"(item, index) in prizeData\"\n          class=\"item\"\n          :style=\"getRotateAngle(index)\"\n        >\n          <slot name=\"item\" :item=\"item\"></slot>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"round-turntable\",\n  Mounted() {\n    this.init();\n  },\n  props: {\n    prizeData: {\n      required: true\n    },\n    rotateCircle: {\n      default: 6\n    },\n    turntableStyleOption: {\n      default: () => {\n        return {\n          // 背景色\n          prizeBgColors: [\n            \"#AE3EFF\",\n            \"#4D3FFF\",\n            \"#FC262C\",\n            \"#3A8BFF\",\n            \"#EE7602\",\n            \"#FE339F\"\n          ],\n          // 转盘的外边框颜色\n          borderColor: \"#199301\"\n        };\n      }\n    },\n    duringTime: {\n      default: 4.5\n    }\n  },\n  data() {\n    return {\n      // 开始转动的角度\n      startRotateDegree: 0,\n      rotateAngle: 0,\n      rotateTransition: \"\"\n    };\n  },\n  methods: {\n    // 根据index计算每一格要旋转的角度的样式\n    getRotateAngle(index) {\n      const angle =\n        (360 / this.prizeData.length) * index + 180 / this.prizeData.length;\n      return {\n        transform: `rotate(${angle}deg)`\n      };\n    },\n    // 初始化圆形转盘canvas\n    init() {\n      // 各种数据\n      const data = this.turntableStyleOption;\n      const prizeNum = this.prizeData.length;\n      const { prizeBgColors, borderColor } = data;\n      // 开始绘画\n      const canvas = this.$refs.canvas;\n      const ctx = canvas.getContext(\"2d\");\n      const canvasW = (this.$refs.canvas.width = this.$refs.turntable.clientWidth); // 画板的高度\n      const canvasH = (this.$refs.canvas.height = this.$refs.turntable.clientHeight); // 画板的宽度\n      // translate方法重新映射画布上的 (0,0) 位置\n      ctx.translate(0, canvasH);\n      // rotate方法旋转当前的绘图，因为文字适合当前扇形中心线垂直的！\n      ctx.rotate((-90 * Math.PI) / 180);\n      // 圆环的外圆的半径\n      const outRadius = canvasW / 2;\n      // 圆环的内圆的半径\n      const innerRadius = 0;\n      const baseAngle = (Math.PI * 2) / prizeNum; // 计算每个奖项所占角度数\n      ctx.clearRect(0, 0, canvasW, canvasH); //去掉背景默认的黑色\n      ctx.strokeStyle = borderColor; // 设置画图线的颜色\n      for (let index = 0; index < prizeNum; index++) {\n        const angle = index * baseAngle;\n        ctx.fillStyle = prizeBgColors[index]; //设置每个扇形区域的颜色\n        ctx.beginPath(); //开始绘制\n        // 标准圆弧：arc(x,y,radius,startAngle,endAngle,anticlockwise)\n        ctx.arc(\n          canvasW * 0.5,\n          canvasH * 0.5,\n          outRadius,\n          angle,\n          angle + baseAngle,\n          false\n        );\n        ctx.arc(\n          canvasW * 0.5,\n          canvasH * 0.5,\n          innerRadius,\n          angle + baseAngle,\n          angle,\n          true\n        );\n        ctx.stroke(); //开始链线\n        ctx.fill(); //填充颜色\n        ctx.save(); //保存当前环境的状态\n      }\n    },\n    // 转动起来\n    rotate(index) {\n      // 运转时长\n      const duringTime = this.duringTime;\n      const rotateAngle =\n        this.startRotateDegree +\n        this.rotateCircle * 360 +\n        360 -\n        (180 / this.prizeData.length + (360 / this.prizeData.length) * index) -\n        (this.startRotateDegree % 360);\n      this.startRotateDegree = rotateAngle;\n      this.rotateAngle = `rotate(${rotateAngle}deg)`;\n      this.rotateTransition = `transform ${duringTime}s cubic-bezier(0.250, 0.460, 0.455, 0.995)`;\n      setTimeout(() => {\n        this.$emit(\"endRotation\");\n      }, duringTime * 1000 + 500);\n    }\n  }\n};\n</script>\n\n<style scoped lang=\"scss\">\n.turntable {\n  /*background-color: red;*/\n  // position: absolute;\n  // left: 0;\n  // top: 0;\n  // background-color: gray;\n  text-align: center;\n  transform: translateZ(0);\n  border-radius: 50%;\n  .myTurntable {\n    position: absolute;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100%;\n    background: url(\"~@/assets/大转盘.png\");\n    background-size: 100%;\n    background-repeat: no-repeat;\n  }\n  .prize-container {\n    position: absolute;\n    left: 25%;\n    top: 0;\n    width: 50%;\n    height: 50%;\n    .item {\n      /*background: pink;*/\n      position: absolute;\n      left: 0;\n      top: 0;\n      width: 100%;\n      height: 100%;\n      transform-origin: center bottom;\n    }\n  }\n}\n</style>\n"]}]}