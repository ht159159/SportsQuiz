{"remainingRequest":"C:\\work\\竞猜可换色板\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\work\\竞猜可换色板\\src\\components\\FlowAd.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\work\\竞猜可换色板\\src\\components\\FlowAd.vue","mtime":1600940821881},{"path":"C:\\work\\竞猜可换色板\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\work\\竞猜可换色板\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\work\\竞猜可换色板\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\work\\竞猜可换色板\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport model from \"@/components/model\";\r\nimport { apiGetFlowAdByType, apiWatchedFlowAd } from \"@/api/FlowAd.js\";\r\nexport default {\r\n  props: {\r\n    isOpenAd: Boolean,\r\n    adTypeId: Number,\r\n    // isFinished: Boolean\r\n  },\r\n  components: {\r\n    model\r\n  },\r\n  watch: {\r\n    isOpenAd: function(bool) {\r\n      if(bool) {\r\n        this.getAdByType();\r\n      }\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      isOpen: this.isOpenAd,\r\n      adType: 0,\r\n      flowAdId: undefined,\r\n      isDataLoaded: true,\r\n      watchTime: 0,\r\n      FlowAdUrl: \"\",\r\n      openAdIframe: false,\r\n      restTime: 0,\r\n      isTimeUp: false,\r\n      timer: \"\",\r\n      dataLen: undefined,\r\n      isFasilAd: false,\r\n      isSucessAd: false,\r\n      reward: \"\",\r\n      isFinish: false,\r\n    };\r\n  },\r\n  methods: {\r\n    // 獲取廣告\r\n    async getAdByType() {\r\n      let data = {\r\n        flowAdTypeId: this.adTypeId\r\n      };\r\n      await apiGetFlowAdByType(data, true).then(res => {\r\n        let len = Object.keys(res.Data).length;\r\n        this.dataLen = len;\r\n        this.flowAdId = res.Data.Id;\r\n        this.watchTime = res.Data.WatchTime;\r\n        this.FlowAdUrl = res.Data.FlowAdUrl;\r\n        this.reward = res.Data.Amount;\r\n        // 取到廣告ID值之前按鈕先鎖住，等取到之後再解鎖\r\n        this.isDataLoaded = false;\r\n      });\r\n    },\r\n    // 取消觀看廣告按鈕\r\n    cancelBtn() {\r\n      this.isOpen = false;\r\n      this.$emit(\"update:isOpenAd\", this.isOpen);\r\n    },\r\n    // 確認觀看廣告按鈕\r\n    async confirmBtnEvent() {\r\n      this.isOpen = false;\r\n      this.$emit(\"update:isOpenAd\", this.isOpen);\r\n\r\n      if (this.dataLen > 0) {\r\n        this.openAdIframe = true;\r\n        this.countDownTimer();\r\n      } else {\r\n        let vm = this;\r\n        const m = vm.$message({\r\n          message: \"目前無廣告\",\r\n          duration: 3000,\r\n          type: \"error\",\r\n          center: true\r\n        });\r\n        setTimeout(() => m.close(), 2000);\r\n      }\r\n    },\r\n\r\n    // 計時器\r\n    countDownTimer() {\r\n      this.isTimeUp = false;\r\n      this.timer = \"\";\r\n      clearInterval(this.timer);\r\n      this.restTime = this.watchTime;\r\n      this.timer = setInterval(() => {\r\n        if (this.restTime == 0) {\r\n          this.isTimeUp = true;\r\n          return;\r\n        }\r\n        this.restTime = this.restTime - 1;\r\n      }, 1000);\r\n    },\r\n\r\n    // 點擊關閉廣告\r\n    closeAd() {\r\n      let data = {\r\n        Id: this.flowAdId\r\n      }\r\n      apiWatchedFlowAd(data, true).then(res => {\r\n        // 清除計時器\r\n        if (this.isFasilAd == false) {\r\n          clearInterval(this.timer);\r\n          this.timer = \"\";\r\n        }\r\n        // 觀看完成成功 & 失敗情況\r\n        if (res.Code == 600) {\r\n          this.isFasilAd = true;\r\n        } else {\r\n          this.isFasilAd = false;\r\n          this.openAdIframe = false;\r\n          this.isSucessAd = true;\r\n        }\r\n      });\r\n    },\r\n\r\n    // 觀看廣告失敗取消按鈕\r\n    failCancelBtn() {\r\n      this.isFasilAd = false;\r\n      this.openAdIframe = false;\r\n      clearInterval(this.timer);\r\n    },\r\n    // 觀看廣告失敗確認按鈕\r\n    failConfirmBtn() {\r\n      this.isFasilAd = false;\r\n      this.openAdIframe = false;\r\n\r\n      this.getAdByType().then(() => {\r\n        this.confirmBtnEvent();\r\n      })\r\n    },\r\n  },\r\n\r\n  // 離開本頁時清除計時器\r\n  destroyed() {\r\n    this.timer = \"\";\r\n    clearInterval(this.timer);\r\n  },\r\n};\r\n",{"version":3,"sources":["FlowAd.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"FlowAd.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <div class=\"flowAd\">\r\n    <transition name=\"fade\">\r\n      <model v-if=\"isOpenAd\"></model>\r\n    </transition>\r\n    <transition name=\"fade\">\r\n      <div class=\"fancyBox\" v-if=\"isOpenAd\">\r\n        <div class=\"fancyBox-close\" :disabled=\"isDataLoaded\" @click=\"cancelBtn()\"></div>\r\n        <div class=\"fancyBoxTop\"></div>\r\n        <span class=\"fancyText\">领取奖励</span\r\n        ><!--是否觀看廣告按鈕-->\r\n        <div class=\"gold-wrap\">\r\n          <span>+</span>\r\n          <span class=\"gold-num\">{{ reward }}</span>\r\n          <span>金币 </span>\r\n        </div>\r\n        <div class=\"fancy-box-btn-wrap\">\r\n          <!-- <input type=\"button\" class=\"commit\" :class=\"[isDataLoaded ? 'disable' : 'cancelBtn']\"  :value=\" $t('Cancel')\" :disabled=\"isDataLoaded\" @click=\"cancelBtn()\"> -->\r\n          <input type=\"button\" class=\"confirmBtn\" :class=\"[isDataLoaded ? 'disable' : 'confirmBtn']\"  value=\" 观看广告领取奖励\" :disabled=\"isDataLoaded\" @click=\"confirmBtnEvent()\" >\r\n        </div>\r\n      </div>\r\n    </transition>\r\n\r\n    <!-- 觀看廣告失敗彈窗 -->\r\n    <transition name=\"fade\">\r\n      <model v-if=\"isFasilAd\"></model>\r\n    </transition>\r\n    <transition name=\"fade\">\r\n      <div class=\"fancyBox\" v-if=\"isFasilAd\">\r\n        <span>資料傳送失敗，是否再觀看一次廣告?</span\r\n        ><!--是否觀看廣告按鈕-->\r\n        <div class=\"fancy-box-btn-wrap\">\r\n          <input type=\"button\" class=\"commit cancelBtn\"  :value=\" $t('Cancel')\"  @click=\"failCancelBtn()\">\r\n          <input type=\"button\" class=\"commit confirmBtn\" :value=\" $t('Confirm')\" @click=\"failConfirmBtn()\" >\r\n        </div>\r\n      </div>\r\n    </transition>\r\n\r\n    <!-- iframe -->\r\n    <div class=\"iframe-wrap\" v-if=\"openAdIframe\">\r\n      <div class=\"count-down\">\r\n        <div class=\"count-down-wrap\" v-if=\"!isTimeUp\">\r\n          <span>剩余</span>\r\n          <span>{{ restTime }}</span>\r\n          <span>秒</span>\r\n        </div>\r\n        <div class=\"closeAd-wrap\" v-if=\"isTimeUp\" @click=\"closeAd()\">\r\n          <!-- <div class=\"closeAd\"></div> -->\r\n          <span>關閉</span>\r\n        </div>\r\n      </div>\r\n      <iframe :src=\"FlowAdUrl\" frameborder=\"0\" width=\"100%\" height=\"100%\"></iframe>\r\n    </div>\r\n\r\n    <!-- 錯誤訊息 -->\r\n\r\n    <!-- 領取成功彈窗 -->\r\n    <transition name=\"fade\">\r\n      <model v-if=\"isSucessAd\"></model>\r\n    </transition>\r\n    <transition name=\"fade\">\r\n      <div class=\"fancyBox\" v-if=\"isSucessAd\">\r\n        <div class=\"fancyBoxTop\"></div>\r\n        <span class=\"fancyText\">領取成功</span><!--領取成功-->\r\n        <div class=\"gold-wrap\">\r\n          <span>+</span>\r\n          <span class=\"gold-num\">{{ reward }}</span>\r\n          <span>金币 </span>\r\n        </div>\r\n        <div class=\"fancy-box-btn-wrap\">\r\n          <input type=\"button\" class=\"confirmBtn\" :value=\" $t('Confirm')\" @click=\"isSucessAd = !isSucessAd\" >\r\n        </div>\r\n        <!-- <span class=\"tipText\">需看完小视频，中途退出没有奖励哦</span> -->\r\n      </div>\r\n    </transition>\r\n  </div>\r\n</template>\r\n<script>\r\nimport model from \"@/components/model\";\r\nimport { apiGetFlowAdByType, apiWatchedFlowAd } from \"@/api/FlowAd.js\";\r\nexport default {\r\n  props: {\r\n    isOpenAd: Boolean,\r\n    adTypeId: Number,\r\n    // isFinished: Boolean\r\n  },\r\n  components: {\r\n    model\r\n  },\r\n  watch: {\r\n    isOpenAd: function(bool) {\r\n      if(bool) {\r\n        this.getAdByType();\r\n      }\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      isOpen: this.isOpenAd,\r\n      adType: 0,\r\n      flowAdId: undefined,\r\n      isDataLoaded: true,\r\n      watchTime: 0,\r\n      FlowAdUrl: \"\",\r\n      openAdIframe: false,\r\n      restTime: 0,\r\n      isTimeUp: false,\r\n      timer: \"\",\r\n      dataLen: undefined,\r\n      isFasilAd: false,\r\n      isSucessAd: false,\r\n      reward: \"\",\r\n      isFinish: false,\r\n    };\r\n  },\r\n  methods: {\r\n    // 獲取廣告\r\n    async getAdByType() {\r\n      let data = {\r\n        flowAdTypeId: this.adTypeId\r\n      };\r\n      await apiGetFlowAdByType(data, true).then(res => {\r\n        let len = Object.keys(res.Data).length;\r\n        this.dataLen = len;\r\n        this.flowAdId = res.Data.Id;\r\n        this.watchTime = res.Data.WatchTime;\r\n        this.FlowAdUrl = res.Data.FlowAdUrl;\r\n        this.reward = res.Data.Amount;\r\n        // 取到廣告ID值之前按鈕先鎖住，等取到之後再解鎖\r\n        this.isDataLoaded = false;\r\n      });\r\n    },\r\n    // 取消觀看廣告按鈕\r\n    cancelBtn() {\r\n      this.isOpen = false;\r\n      this.$emit(\"update:isOpenAd\", this.isOpen);\r\n    },\r\n    // 確認觀看廣告按鈕\r\n    async confirmBtnEvent() {\r\n      this.isOpen = false;\r\n      this.$emit(\"update:isOpenAd\", this.isOpen);\r\n\r\n      if (this.dataLen > 0) {\r\n        this.openAdIframe = true;\r\n        this.countDownTimer();\r\n      } else {\r\n        let vm = this;\r\n        const m = vm.$message({\r\n          message: \"目前無廣告\",\r\n          duration: 3000,\r\n          type: \"error\",\r\n          center: true\r\n        });\r\n        setTimeout(() => m.close(), 2000);\r\n      }\r\n    },\r\n\r\n    // 計時器\r\n    countDownTimer() {\r\n      this.isTimeUp = false;\r\n      this.timer = \"\";\r\n      clearInterval(this.timer);\r\n      this.restTime = this.watchTime;\r\n      this.timer = setInterval(() => {\r\n        if (this.restTime == 0) {\r\n          this.isTimeUp = true;\r\n          return;\r\n        }\r\n        this.restTime = this.restTime - 1;\r\n      }, 1000);\r\n    },\r\n\r\n    // 點擊關閉廣告\r\n    closeAd() {\r\n      let data = {\r\n        Id: this.flowAdId\r\n      }\r\n      apiWatchedFlowAd(data, true).then(res => {\r\n        // 清除計時器\r\n        if (this.isFasilAd == false) {\r\n          clearInterval(this.timer);\r\n          this.timer = \"\";\r\n        }\r\n        // 觀看完成成功 & 失敗情況\r\n        if (res.Code == 600) {\r\n          this.isFasilAd = true;\r\n        } else {\r\n          this.isFasilAd = false;\r\n          this.openAdIframe = false;\r\n          this.isSucessAd = true;\r\n        }\r\n      });\r\n    },\r\n\r\n    // 觀看廣告失敗取消按鈕\r\n    failCancelBtn() {\r\n      this.isFasilAd = false;\r\n      this.openAdIframe = false;\r\n      clearInterval(this.timer);\r\n    },\r\n    // 觀看廣告失敗確認按鈕\r\n    failConfirmBtn() {\r\n      this.isFasilAd = false;\r\n      this.openAdIframe = false;\r\n\r\n      this.getAdByType().then(() => {\r\n        this.confirmBtnEvent();\r\n      })\r\n    },\r\n  },\r\n\r\n  // 離開本頁時清除計時器\r\n  destroyed() {\r\n    this.timer = \"\";\r\n    clearInterval(this.timer);\r\n  },\r\n};\r\n</script>\r\n"]}]}