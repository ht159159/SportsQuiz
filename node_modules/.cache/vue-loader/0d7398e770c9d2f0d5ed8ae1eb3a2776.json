{"remainingRequest":"C:\\Users\\Yang\\Desktop\\新增資料夾\\竞猜可换色板\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Yang\\Desktop\\新增資料夾\\竞猜可换色板\\src\\views\\Challenge\\challengeFour.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Yang\\Desktop\\新增資料夾\\竞猜可换色板\\src\\views\\Challenge\\challengeFour.vue","mtime":1606980098076},{"path":"C:\\Users\\Yang\\Desktop\\新增資料夾\\竞猜可换色板\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Yang\\Desktop\\新增資料夾\\竞猜可换色板\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Yang\\Desktop\\新增資料夾\\竞猜可换色板\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport back from \"../../components/Botton/back.vue\";\r\nimport { apiGetChallengeMatchByRandom, apiBet } from \"@/api/match\";\r\nimport { betSuccess } from \"@/utils/medias\";\r\nexport default {\r\n  components: {\r\n    back,\r\n  },\r\n  created() {\r\n    this.getMatch();\r\n  },\r\n  data() {\r\n    return {\r\n      num: -1,\r\n      num2: -1,\r\n      matchs: \"\",\r\n      bettype: \"\",\r\n      bettype2: \"\",\r\n      playid: 0,\r\n      playid2: 0,\r\n      bet3: \"\",\r\n      bet2: \"\",\r\n      Reward: \"\"\r\n    };\r\n  },\r\n  methods: {\r\n    goBet() {\r\n      if (this.playid == 0) {\r\n        alert(this.$t('PleaseSelectTheFirstMatch'));\r\n        return;\r\n      }\r\n\r\n      if (this.playid2 == 0) {\r\n        alert(this.$t('PleaseSelectTheSecondMatch'));\r\n        return;\r\n      }\r\n      //第一次投注\r\n      let data = {\r\n        playId: this.playid,\r\n        betType: 3\r\n      };\r\n      //第二次投注\r\n      let data1 = {\r\n        playId: this.playid2,\r\n        betType: 3\r\n      };\r\n\r\n      apiBet(data, true).then(res => {\r\n        if (res.IsBetSucceed) {\r\n          this.$message({\r\n            message: this.$t('BettingSuccess'),\r\n            duration: 2500,\r\n            type: \"success\",\r\n            center: true\r\n          });\r\n          // 下注成功音效\r\n          betSuccess.play();\r\n          setTimeout(() => {\r\n            this.$router.push(\"/challengehome\");\r\n          }, 1000);\r\n        }\r\n      });\r\n\r\n      apiBet(data1, true).then(res => {\r\n        if (Math.abs(res.Code) >= 600) {\r\n          this.$message({\r\n            message: res.Message,\r\n            duration: 2000,\r\n            type: \"error\",\r\n            center: true\r\n          });\r\n        }\r\n      });\r\n      // this.$nextTick(() => {\r\n      //   if (this.bet1 == true && this.bet2 == true) {\r\n      //   }\r\n      // });\r\n    },\r\n    bet(id, playid) {\r\n      this.num = id;\r\n      this.playid = playid;\r\n    },\r\n    bet1(id, playid) {\r\n      this.num2 = id;\r\n      this.playid2 = playid;\r\n    },\r\n    getMatch() {\r\n      apiGetChallengeMatchByRandom(\"\", true).then(res => {\r\n        this.Reward = res.Reward;\r\n        if (res.data.Data.length === 0) {\r\n          this.$message({\r\n            message: this.$t('NoGameTip'),\r\n            duration: 3000,\r\n            type: \"error\",\r\n            center: true\r\n          });\r\n        } else {\r\n          this.matchs = res.data.Data;\r\n        }\r\n        // res.data.Data[0].CommonPlayViewModelGroups[0].shift();\r\n        // res.data.Data[1].CommonPlayViewModelGroups[0].shift();\r\n        // this.bettype = res.data.Data[0].CommonPlayViewModelGroups[0];\r\n        // this.bettype = res.data.Data[0].CommonPlayViewModelGroups[0].slice(\r\n        //   res.data.Data[0].CommonPlayViewModelGroups[0].length - 2,\r\n        //   res.data.Data[0].CommonPlayViewModelGroups[0].length\r\n        // );\r\n\r\n        // this.bettype2 = res.data.Data[1].CommonPlayViewModelGroups[0].slice(\r\n        //   res.data.Data[1].CommonPlayViewModelGroups[0].length - 2,\r\n        //   res.data.Data[1].CommonPlayViewModelGroups[0].length\r\n        // );\r\n        this.bettype = res.data.Data[0].CommonPlayViewModelGroups[0].filter(\r\n          item => item.PlayId != -1\r\n        );\r\n        this.bettype2 = res.data.Data[1].CommonPlayViewModelGroups[0].filter(\r\n          item => item.PlayId != -1\r\n        );\r\n      });\r\n    }\r\n  }\r\n};\r\n",null]}