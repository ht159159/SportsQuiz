{"remainingRequest":"C:\\Users\\Yang\\Desktop\\新增資料夾\\竞猜可换色板\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Yang\\Desktop\\新增資料夾\\竞猜可换色板\\src\\views\\club\\ClubActiveBet.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Yang\\Desktop\\新增資料夾\\竞猜可换色板\\src\\views\\club\\ClubActiveBet.vue","mtime":1606980099168},{"path":"C:\\Users\\Yang\\Desktop\\新增資料夾\\竞猜可换色板\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Yang\\Desktop\\新增資料夾\\竞猜可换色板\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Yang\\Desktop\\新增資料夾\\竞猜可换色板\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Yang\\Desktop\\新增資料夾\\竞猜可换色板\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport back from \"@/components/Botton/back.vue\";\r\nimport {\r\n  apiGetClubGamblingBetInfo,\r\n  apiClubGamblingBet\r\n} from \"@/api/ClubGamblings.js\";\r\nexport default {\r\n  components: {\r\n    back\r\n  },\r\n  data() {\r\n    return {\r\n      uName: \"\",\r\n      clubGamblingId: \"\",\r\n      betObj: [],\r\n      playList: \"\",\r\n      betNum: \"\",\r\n      betNumSelect: [200, 500, 1000, 2000, 5000, this.$t(\"MaximumAmount\")],\r\n      betNumSelectIndex: undefined,\r\n      expectedProfit: undefined,\r\n      isOverMaxBetNum: false,\r\n    };\r\n  },\r\n  watch: {\r\n    betNum: function(num) {\r\n      if (num > this.betObj.MaxDeposit) {\r\n        let vm = this;\r\n        const m = vm.$message({\r\n          message: this.$t(\"ExceedsThMaximumAmount\"),\r\n          duration: 3000,\r\n          type: \"warning\",\r\n          center: true\r\n        });\r\n        setTimeout(() => m.close(), 2000);\r\n        this.betNum = 0;\r\n        this.expectedProfit = 0;\r\n      } else {\r\n        this.expectedProfit = (this.betNum * (this.playList.OddsValue - 1)).toFixed(1);\r\n      }\r\n    }\r\n  },\r\n  created() {\r\n    this.getBetId();\r\n    this.getBetInfo();\r\n  },\r\n  mounted() {},\r\n  methods: {\r\n    // 獲取投注id 供API使用\r\n    async getBetId() {\r\n      this.uName = localStorage.getItem(\"uname\");\r\n      this.clubGamblingId = localStorage.getItem(\"betId\");\r\n    },\r\n    // 取得投注資訊\r\n    async getBetInfo() {\r\n      let data = {\r\n        ClubGamblingId: this.clubGamblingId\r\n      };\r\n      await apiGetClubGamblingBetInfo(data, true).then(res => {\r\n        if(Math.abs(res.Code) >= 600) {\r\n          let vm = this;\r\n          const m = vm.$message({\r\n            message: res.Message,\r\n            duration: 3000,\r\n            type: \"error\",\r\n            center: true\r\n          });\r\n          setTimeout(() => m.close(), 2000);\r\n          return;\r\n        } else {\r\n          this.betObj = res.Data;\r\n          this.playList = res.Data.PlayList[0];\r\n        }\r\n      });\r\n    },\r\n    // 選擇投注金額\r\n    selectBetNum(num, index) {\r\n      this.betNum = num;\r\n      this.betNumSelectIndex = index;\r\n\r\n      // 预计盈利\r\n      this.expectedProfit = (this.betNum * this.playList.OddsValue).toFixed(1);\r\n      if (num == \"最大金额\") {\r\n        this.betNum = this.betObj.MaxDeposit;\r\n        this.expectedProfit = (this.betNum * (this.playList.OddsValue - 1)).toFixed(1);\r\n      }\r\n    },\r\n\r\n    // 下注\r\n    bet() {\r\n      if (this.betNum > this.betObj.MaxDeposit) {\r\n        let vm = this;\r\n        const m = vm.$message({\r\n          message: this.$t(\"betAmountNotMatch\"),\r\n          duration: 3000,\r\n          type: \"error\",\r\n          center: true\r\n        });\r\n        setTimeout(() => m.close(), 2000);\r\n        return;\r\n      }\r\n      let data = {\r\n        UName: this.uName,\r\n        Amount: this.betNum,\r\n        ClubGamblingId: this.clubGamblingId\r\n      };\r\n      apiClubGamblingBet(data, true).then(res => {\r\n        if(Math.abs(res.Code) >= 600) {\r\n          let vm = this;\r\n          const m = vm.$message({\r\n            message: res.Message,\r\n            duration: 3000,\r\n            type: \"error\",\r\n            center: true\r\n          });\r\n          setTimeout(() => m.close(), 2000);\r\n          return;\r\n        } else {\r\n          if (res.Data) {\r\n            let vm = this;\r\n            const m = vm.$message({\r\n              message: this.$t(\"BettingSuccess\"),\r\n              duration: 3000,\r\n              type: \"success\",\r\n              center: true\r\n            });\r\n            setTimeout(() => {\r\n              m.close();\r\n              this.$router.push(\"/myClub\");\r\n            }, 750);\r\n            return;\r\n          } else {\r\n            let vm = this;\r\n            const m = vm.$message({\r\n              message: res.Message,\r\n              duration: 3000,\r\n              type: \"error\",\r\n              center: true\r\n            });\r\n            setTimeout(() => m.close(), 2000);\r\n            return;\r\n          }\r\n          \r\n        }\r\n      });\r\n    }\r\n  }\r\n};\r\n",{"version":3,"sources":["ClubActiveBet.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAifile":"ClubActiveBet.vue","sourceRoot":"src/views/club","sourcesContent":["<template>\r\n  <div class=\"activities-bet\">\r\n    <div class=\"activities-bet-header\">\r\n      <div class=\"activities-bet-header-wrap\">\r\n        <back class=\"back-icon img-he\"></back>\r\n        <h3>{{ $t(\"Bet\") }}</h3>\r\n        <!--投注-->\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"activities-bet-content\">\r\n      <div class=\"activities-bet-vsImg\">\r\n        <div class=\"activities-bet-vsImg-top\">\r\n          <div class=\"activities-bet-vsImg-box\">\r\n            <img v-if=\"betObj.HomeTeamImg\" :src=\"betObj.HomeTeamImg\" />\r\n            <img v-else src=\"@/assets/instead_logo1.png\" alt=\"\">\r\n            <p>{{ betObj.HomeTeam }}</p>\r\n          </div>\r\n          <div class=\"activities-bet-vs\">VS</div>\r\n          <div class=\"activities-bet-vsImg-box\">\r\n            <img v-if=\"betObj.AwayTeamImg\" :src=\"betObj.AwayTeamImg\" />\r\n            <img v-else src=\"@/assets/instead_logo1.png\" alt=\"\">\r\n            <p>{{ betObj.AwayTeam }}</p>\r\n          </div>\r\n        </div>\r\n        <div class=\"activities-bet-vsImg-bottom\">{{ playList.Position }}</div>\r\n      </div>\r\n      <div class=\"bet-block\">\r\n        <div class=\"bet-block-box\">\r\n          <div class=\"bet-block-box-title\">{{ $t('Odds') }}</div><!--赔率-->\r\n          <div class=\"odds\">\r\n            <p>{{ playList.Position }}</p>\r\n            <p class=\"blue\">{{ playList.OddsValue }}</p>\r\n          </div>\r\n        </div>\r\n        <div class=\"bet-block-box\">\r\n          <div class=\"bet-block-box-title-wrap\">\r\n            <div class=\"bet-block-box-title\">{{ $t(\"Bet\") }}</div><!--赔率-->\r\n            <div class=\"bet-block-box-tips\">{{ $t('TheMaximumBetAmount') }}【{{ betObj.MaxDeposit }}】</div>\r\n            <!-- <div class=\"bet-block-box-tips\" v-if=\"isOverMaxBetNum\">超過最大可投注金額</div> -->\r\n          </div>\r\n          <input type=\"text\" v-model=\"betNum\" />\r\n          <div class=\"bet-num-select\">\r\n            <div\r\n              class=\"bet-num-select-box\"\r\n              :class=\"{ 'bet-num-select-focus': betNumSelectIndex == index }\"\r\n              v-for=\"(num, index) in betNumSelect\"\r\n              @click=\"selectBetNum(num, index)\"\r\n            >\r\n              {{ num }}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"bet-block-box\">\r\n          <div class=\"bet-block-box-title-wrap\">\r\n            <div class=\"bet-block-box-title\">{{ $t(\"ExpectedProfit\") }}</div><!--预计盈利-->\r\n          </div>\r\n          <input type=\"text\" v-model=\"expectedProfit\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"activities-bet-btn\" @click=\"bet()\">{{ $t(\"Confirm\") }}</div>\r\n  </div>\r\n</template>\r\n<script>\r\nimport back from \"@/components/Botton/back.vue\";\r\nimport {\r\n  apiGetClubGamblingBetInfo,\r\n  apiClubGamblingBet\r\n} from \"@/api/ClubGamblings.js\";\r\nexport default {\r\n  components: {\r\n    back\r\n  },\r\n  data() {\r\n    return {\r\n      uName: \"\",\r\n      clubGamblingId: \"\",\r\n      betObj: [],\r\n      playList: \"\",\r\n      betNum: \"\",\r\n      betNumSelect: [200, 500, 1000, 2000, 5000, this.$t(\"MaximumAmount\")],\r\n      betNumSelectIndex: undefined,\r\n      expectedProfit: undefined,\r\n      isOverMaxBetNum: false,\r\n    };\r\n  },\r\n  watch: {\r\n    betNum: function(num) {\r\n      if (num > this.betObj.MaxDeposit) {\r\n        let vm = this;\r\n        const m = vm.$message({\r\n          message: this.$t(\"ExceedsThMaximumAmount\"),\r\n          duration: 3000,\r\n          type: \"warning\",\r\n          center: true\r\n        });\r\n        setTimeout(() => m.close(), 2000);\r\n        this.betNum = 0;\r\n        this.expectedProfit = 0;\r\n      } else {\r\n        this.expectedProfit = (this.betNum * (this.playList.OddsValue - 1)).toFixed(1);\r\n      }\r\n    }\r\n  },\r\n  created() {\r\n    this.getBetId();\r\n    this.getBetInfo();\r\n  },\r\n  mounted() {},\r\n  methods: {\r\n    // 獲取投注id 供API使用\r\n    async getBetId() {\r\n      this.uName = localStorage.getItem(\"uname\");\r\n      this.clubGamblingId = localStorage.getItem(\"betId\");\r\n    },\r\n    // 取得投注資訊\r\n    async getBetInfo() {\r\n      let data = {\r\n        ClubGamblingId: this.clubGamblingId\r\n      };\r\n      await apiGetClubGamblingBetInfo(data, true).then(res => {\r\n        if(Math.abs(res.Code) >= 600) {\r\n          let vm = this;\r\n          const m = vm.$message({\r\n            message: res.Message,\r\n            duration: 3000,\r\n            type: \"error\",\r\n            center: true\r\n          });\r\n          setTimeout(() => m.close(), 2000);\r\n          return;\r\n        } else {\r\n          this.betObj = res.Data;\r\n          this.playList = res.Data.PlayList[0];\r\n        }\r\n      });\r\n    },\r\n    // 選擇投注金額\r\n    selectBetNum(num, index) {\r\n      this.betNum = num;\r\n      this.betNumSelectIndex = index;\r\n\r\n      // 预计盈利\r\n      this.expectedProfit = (this.betNum * this.playList.OddsValue).toFixed(1);\r\n      if (num == \"最大金额\") {\r\n        this.betNum = this.betObj.MaxDeposit;\r\n        this.expectedProfit = (this.betNum * (this.playList.OddsValue - 1)).toFixed(1);\r\n      }\r\n    },\r\n\r\n    // 下注\r\n    bet() {\r\n      if (this.betNum > this.betObj.MaxDeposit) {\r\n        let vm = this;\r\n        const m = vm.$message({\r\n          message: this.$t(\"betAmountNotMatch\"),\r\n          duration: 3000,\r\n          type: \"error\",\r\n          center: true\r\n        });\r\n        setTimeout(() => m.close(), 2000);\r\n        return;\r\n      }\r\n      let data = {\r\n        UName: this.uName,\r\n        Amount: this.betNum,\r\n        ClubGamblingId: this.clubGamblingId\r\n      };\r\n      apiClubGamblingBet(data, true).then(res => {\r\n        if(Math.abs(res.Code) >= 600) {\r\n          let vm = this;\r\n          const m = vm.$message({\r\n            message: res.Message,\r\n            duration: 3000,\r\n            type: \"error\",\r\n            center: true\r\n          });\r\n          setTimeout(() => m.close(), 2000);\r\n          return;\r\n        } else {\r\n          if (res.Data) {\r\n            let vm = this;\r\n            const m = vm.$message({\r\n              message: this.$t(\"BettingSuccess\"),\r\n              duration: 3000,\r\n              type: \"success\",\r\n              center: true\r\n            });\r\n            setTimeout(() => {\r\n              m.close();\r\n              this.$router.push(\"/myClub\");\r\n            }, 750);\r\n            return;\r\n          } else {\r\n            let vm = this;\r\n            const m = vm.$message({\r\n              message: res.Message,\r\n              duration: 3000,\r\n              type: \"error\",\r\n              center: true\r\n            });\r\n            setTimeout(() => m.close(), 2000);\r\n            return;\r\n          }\r\n          \r\n        }\r\n      });\r\n    }\r\n  }\r\n};\r\n</script>\r\n"]}]}