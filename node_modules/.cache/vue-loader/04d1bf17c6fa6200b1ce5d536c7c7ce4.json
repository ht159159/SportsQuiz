{"remainingRequest":"C:\\work\\竞猜可换色板\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\work\\竞猜可换色板\\src\\views\\club\\ClubActivityMatch.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\work\\竞猜可换色板\\src\\views\\club\\ClubActivityMatch.vue","mtime":1604318236339},{"path":"C:\\work\\竞猜可换色板\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\work\\竞猜可换色板\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\work\\竞猜可换色板\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\work\\竞猜可换色板\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\work\\竞猜可换色板\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport back from \"@/components/Botton/back.vue\";\r\nimport { apiGetClubActivityMatchAndPlay, apiActivityBets } from \"@/api/ClubActivitys.js\";\r\nexport default {\r\n  name: \"myClub\",\r\n  components: {\r\n    back,\r\n  },\r\n  data() {\r\n    return {\r\n      matchObj: [],\r\n      matchObjIndex: undefined,\r\n      btnIndex: undefined,\r\n      active: undefined,\r\n      newPlayAry: [],\r\n      clubActivityId: \"\",\r\n    }\r\n  },\r\n  created() {\r\n    localStorage.setItem(\"categoryIndex\", 1);\r\n    this.getMatch();\r\n  },\r\n  methods: {\r\n    getMatch() {\r\n      this.clubActivityId = localStorage.getItem(\"AcvtiveId\");\r\n      let data = {\r\n        ClubActivityId: this.clubActivityId,\r\n      }\r\n      apiGetClubActivityMatchAndPlay(data, true).then((res) => {\r\n        this.matchObj = res.Data;\r\n\r\n        // 替Plays的每個按鈕添加一個isClick，供點選使用 + 塞一包空陣列進去給副標題使用\r\n        this.matchObj.forEach(el => {\r\n          el.PlayText = \"\";\r\n          el.Plays.forEach(play => {\r\n            play.isClick = 0;\r\n          })\r\n        });\r\n\r\n        // 副標題\r\n        for (let i = 0 ; i < this.matchObj.length; i ++) {\r\n          for (let j = 0 ; j < this.matchObj[i].Plays.length; j++) {\r\n            this.matchObj[i].PlayText += this.matchObj[i].Plays[j].Position;\r\n          }\r\n        }\r\n      });\r\n    },\r\n\r\n    // 點選玩法\r\n    choosePlay(play, index, btnIndexs) {\r\n      this.matchObj[index].Plays.forEach(el => {\r\n        if (el.isClick == 1) {\r\n          el.isClick = 0;\r\n          this.active = 0;\r\n        }\r\n      })\r\n      this.active = 0;\r\n      this.matchObjIndex = index;\r\n      this.matchObj[this.matchObjIndex].Plays[btnIndexs].isClick = 1;\r\n      this.active = this.matchObj[this.matchObjIndex].Plays[btnIndexs].isClick;\r\n\r\n      // 把全部按鈕都放進同一個陣列\r\n      let playArray = [];\r\n      this.matchObj.forEach(el => {\r\n        el.Plays.forEach(play => {\r\n          playArray.push(play);\r\n        });\r\n      });\r\n      // 過濾按鈕陣列，isClick == 1 的才留下\r\n      let filterPlayAry = playArray.filter(el => {\r\n        return el.isClick > 0;\r\n      });\r\n      // 取過濾出來的PlayId\r\n      this.newPlayAry = filterPlayAry.map(el => {\r\n        return el.PlayId;\r\n      })\r\n    },\r\n\r\n    //送出\r\n    send() {\r\n      let data = {\r\n        ClubActivityId: this.clubActivityId,\r\n        PlayIds: this.newPlayAry\r\n      }\r\n      apiActivityBets(data, true).then((res) => {\r\n        if(res.Code == 600) {\r\n          let vm = this;\r\n          const m = vm.$message({\r\n            message: res.Message,\r\n            duration: 3000,\r\n            type: \"error\",\r\n            center: true\r\n          });\r\n          setTimeout(() => m.close(), 2000);\r\n          return;\r\n        } else {\r\n          let vm = this;\r\n          const m = vm.$message({\r\n            message: this.$t('BettingSuccess'),\r\n            duration: 3000,\r\n            type: \"success\",\r\n            center: true\r\n          });\r\n          setTimeout(() => m.close(), 2000);\r\n          setTimeout(() => {\r\n            localStorage.setItem(\"categoryIndex\", 1);\r\n            this.$router.push(\"/ClubActivities\");\r\n          }, 3000);\r\n        }\r\n      });\r\n    }\r\n  },\r\n  beforeDestroy() {\r\n    localStorage.setItem(\"categoryIndex\", 1);\r\n  }\r\n}\r\n",{"version":3,"sources":["ClubActivityMatch.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwfile":"ClubActivityMatch.vue","sourceRoot":"src/views/club","sourcesContent":["<template>\r\n  <div class=\"club-Activity-match\">\r\n    <div class=\"club-Activity-match-header\">\r\n      <div class=\"club-Activity-match-header-wrap\">\r\n        <back class=\"back-icon img-he\"></back>\r\n        <h3>{{$t('ClubActivities')}}</h3>\r\n        <!--俱樂部活動-->\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"club-Activity-match-content\">\r\n      <div class=\"match-box\" v-for=\"(item, index) in matchObj\">\r\n        <p class=\"match-box-title\">{{ $t('SportGame') }}{{ index + 1 }}</p><!--賽事-->\r\n        <div class=\"match-box-team\">\r\n          <div class=\"match-box-team-wrap\">\r\n            <div class=\"team-name\">\r\n              <p>{{ item.HomeTeam}}</p>\r\n              <div class=\"team-img\" :style=\"{backgroundImage: 'url(' + item.HomeTeamImg + ')'}\"></div>\r\n            </div>\r\n            <p class=\"vs\">VS</p>\r\n            <div class=\"team-name\">\r\n              <div class=\"team-img\" :style=\"{backgroundImage: 'url(' + item.AwayTeamImg + ')'}\"></div>\r\n              <p>{{ item.AwayTeam}}</p>\r\n            </div>\r\n          </div>\r\n          <div class=\"gametip\">{{ $t('Select') }}{{ item.SelectPosition }}</div>\r\n        </div>\r\n        <div class=\"bet-btn-wrap\">\r\n          <div class=\"bet-btn\" v-model=\"active\" :class=\"{'bet-btn-active': play.isClick == 1}\" v-for=\"(play, btnIndexs) in item.Plays\" @click=\"choosePlay(play,index, btnIndexs)\">{{ play.Position}}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"confirm-btn-wrap\">\r\n      <div class=\"confirm-btn\" @click=\"send()\">\r\n        {{ this.$t('Confirm') }}\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\nimport back from \"@/components/Botton/back.vue\";\r\nimport { apiGetClubActivityMatchAndPlay, apiActivityBets } from \"@/api/ClubActivitys.js\";\r\nexport default {\r\n  name: \"myClub\",\r\n  components: {\r\n    back,\r\n  },\r\n  data() {\r\n    return {\r\n      matchObj: [],\r\n      matchObjIndex: undefined,\r\n      btnIndex: undefined,\r\n      active: undefined,\r\n      newPlayAry: [],\r\n      clubActivityId: \"\",\r\n    }\r\n  },\r\n  created() {\r\n    localStorage.setItem(\"categoryIndex\", 1);\r\n    this.getMatch();\r\n  },\r\n  methods: {\r\n    getMatch() {\r\n      this.clubActivityId = localStorage.getItem(\"AcvtiveId\");\r\n      let data = {\r\n        ClubActivityId: this.clubActivityId,\r\n      }\r\n      apiGetClubActivityMatchAndPlay(data, true).then((res) => {\r\n        this.matchObj = res.Data;\r\n\r\n        // 替Plays的每個按鈕添加一個isClick，供點選使用 + 塞一包空陣列進去給副標題使用\r\n        this.matchObj.forEach(el => {\r\n          el.PlayText = \"\";\r\n          el.Plays.forEach(play => {\r\n            play.isClick = 0;\r\n          })\r\n        });\r\n\r\n        // 副標題\r\n        for (let i = 0 ; i < this.matchObj.length; i ++) {\r\n          for (let j = 0 ; j < this.matchObj[i].Plays.length; j++) {\r\n            this.matchObj[i].PlayText += this.matchObj[i].Plays[j].Position;\r\n          }\r\n        }\r\n      });\r\n    },\r\n\r\n    // 點選玩法\r\n    choosePlay(play, index, btnIndexs) {\r\n      this.matchObj[index].Plays.forEach(el => {\r\n        if (el.isClick == 1) {\r\n          el.isClick = 0;\r\n          this.active = 0;\r\n        }\r\n      })\r\n      this.active = 0;\r\n      this.matchObjIndex = index;\r\n      this.matchObj[this.matchObjIndex].Plays[btnIndexs].isClick = 1;\r\n      this.active = this.matchObj[this.matchObjIndex].Plays[btnIndexs].isClick;\r\n\r\n      // 把全部按鈕都放進同一個陣列\r\n      let playArray = [];\r\n      this.matchObj.forEach(el => {\r\n        el.Plays.forEach(play => {\r\n          playArray.push(play);\r\n        });\r\n      });\r\n      // 過濾按鈕陣列，isClick == 1 的才留下\r\n      let filterPlayAry = playArray.filter(el => {\r\n        return el.isClick > 0;\r\n      });\r\n      // 取過濾出來的PlayId\r\n      this.newPlayAry = filterPlayAry.map(el => {\r\n        return el.PlayId;\r\n      })\r\n    },\r\n\r\n    //送出\r\n    send() {\r\n      let data = {\r\n        ClubActivityId: this.clubActivityId,\r\n        PlayIds: this.newPlayAry\r\n      }\r\n      apiActivityBets(data, true).then((res) => {\r\n        if(res.Code == 600) {\r\n          let vm = this;\r\n          const m = vm.$message({\r\n            message: res.Message,\r\n            duration: 3000,\r\n            type: \"error\",\r\n            center: true\r\n          });\r\n          setTimeout(() => m.close(), 2000);\r\n          return;\r\n        } else {\r\n          let vm = this;\r\n          const m = vm.$message({\r\n            message: this.$t('BettingSuccess'),\r\n            duration: 3000,\r\n            type: \"success\",\r\n            center: true\r\n          });\r\n          setTimeout(() => m.close(), 2000);\r\n          setTimeout(() => {\r\n            localStorage.setItem(\"categoryIndex\", 1);\r\n            this.$router.push(\"/ClubActivities\");\r\n          }, 3000);\r\n        }\r\n      });\r\n    }\r\n  },\r\n  beforeDestroy() {\r\n    localStorage.setItem(\"categoryIndex\", 1);\r\n  }\r\n}\r\n</script>\r\n"]}]}