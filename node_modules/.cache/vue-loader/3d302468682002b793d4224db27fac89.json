{"remainingRequest":"C:\\work\\竞猜可换色板\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\work\\竞猜可换色板\\src\\views\\Lottery.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\work\\竞猜可换色板\\src\\views\\Lottery.vue","mtime":1604647086180},{"path":"C:\\work\\竞猜可换色板\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\work\\竞猜可换色板\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\work\\竞猜可换色板\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\work\\竞猜可换色板\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\work\\竞猜可换色板\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { apiLuckDraw, apiGetPrizePoolSetting } from \"@/api/product.js\";\r\n\r\nimport { apiGetUserInfo, apiGetUserAddress } from \"@/api/User.js\";\r\nimport roundTurntable from \"../components/roundTurntable.vue\";\r\nimport model from \"../components/model\";\r\nimport { apiGetInvitationUrl } from \"@/api/InvitationCode.js\";\r\nimport Clipboard from \"clipboard\";\r\nimport back from \"../components/Botton/back.vue\";\r\n\r\nimport {lotteryMusic,lotteryWining} from \"@/utils/medias\";\r\n\r\nexport default {\r\n  components: {\r\n    roundTurntable,\r\n    model,\r\n    back,\r\n  },\r\n  created() {\r\n    this.lang = JSON.parse(localStorage.getItem(\"lang\")).tag;\r\n    this.getPrizePoolSetting();\r\n    apiGetUserInfo(\"\", true).then(res => {\r\n      this.gold = res.UDiamond;\r\n      this.num = Math.floor(res.UDiamond / 10);\r\n    });\r\n    this.geturl();\r\n    this.getUserAddress();\r\n    \r\n  },\r\n  data() {\r\n    return {\r\n      lang: \"\",\r\n      // 转盘上的奖品数据\r\n      prizeData: [],\r\n      // 转动的圈数\r\n      rotateCircle: 24,\r\n      // 转动需要持续的时间（s）\r\n      duringTime: 6.5,\r\n      // 转盘样式的选项\r\n      turntableStyleOption: {\r\n        // 背景色\r\n        prizeBgColors: [\r\n          \"#AE3EFF\",\r\n          \"#4D3FFF\",\r\n          \"#FC262C\",\r\n          \"#3A8BFF\",\r\n          \"#EE7602\",\r\n          \"#FE339F\"\r\n        ],\r\n        // 转盘的外边框颜色\r\n        borderColor: \"#199301\"\r\n      },\r\n\r\n      // 中奖的奖品的index\r\n      prizeIndex: -1,\r\n      // 用来锁定转盘，避免同时多次点击转动\r\n      isLocking: false,\r\n\r\n      // 剩余抽奖次数\r\n      num: 2,\r\n      gold: Number,\r\n      index: \"\",\r\n      showgold: false,\r\n      typep: \"\",\r\n      codeUrl: \"\",\r\n      Tips: [],\r\n      flag: true,\r\n      editUserAddress: false\r\n    };\r\n  },\r\n  methods: {\r\n    geturl() {\r\n      apiGetInvitationUrl(\"\", true).then(res => {\r\n        this.codeUrl = res.data;\r\n      });\r\n    },\r\n    copy() {\r\n      var clipboard = new Clipboard(\".tag-read1\");\r\n      clipboard.on(\"success\", e => {\r\n        // this.$toast.success({\r\n        //   message: \"邀请链接复制成功\",\r\n        //   duration: 3000\r\n        // });\r\n        const m = this.$message({\r\n          message: \"邀请链接复制成功\",\r\n          duration: 3000,\r\n          type: \"success\",\r\n          center: true\r\n        });\r\n        setTimeout(() => m.close(), 1200);\r\n        // success(\"复制成功\");//这里你如果引入了elementui的提示就可以用，没有就注释即可\r\n        // 释放内存\r\n        clipboard.destroy();\r\n      });\r\n      clipboard.on(\"error\", e => {\r\n        // 不支持复制\r\n        // 释放内存\r\n        clipboard.destroy();\r\n      });\r\n    },\r\n    wexin() {\r\n      const m = this.$message({\r\n        type: \"warning\",\r\n        message: this.$t('NotYetOpen'),\r\n        center: true,\r\n        duration: 1000\r\n      });\r\n      setTimeout(() => m.close(), 1200);\r\n    },\r\n    pyj() {\r\n      const m = this.$message({\r\n        type: \"warning\",\r\n        message: this.$t('NotYetOpen'),\r\n        center: true,\r\n        duration: 1000\r\n      });\r\n      setTimeout(() => m.close(), 1200);\r\n    },\r\n    close() {\r\n      this.showgold = false;\r\n    },\r\n    getPrizePoolSetting() {\r\n      apiGetPrizePoolSetting(\"\").then(res => {\r\n        this.prizeData = res.Prizes;\r\n        this.Tips = res.Tips;\r\n      });\r\n    },\r\n    getApiLuckDraw() {\r\n      if (!this.flag) {\r\n        return;\r\n      }\r\n      this.flag = false;\r\n      apiLuckDraw(\"\", true).then(res => {\r\n        if (res.isSuccess) {\r\n          for (let i = 0; i < this.prizeData.length; i++) {\r\n            const element = this.prizeData[i].PrizeId;\r\n            if (element == res.PrizeId) {\r\n              this.index = i;\r\n            }\r\n          }\r\n          this.startRotation();\r\n        } else {\r\n          this.flag = true;\r\n          this.$message({\r\n            type: \"error\",\r\n            message: res.Message,\r\n            center: true,\r\n            duration: 1000,\r\n            typep: \"\"\r\n          });\r\n          if (res.Message === \"抱歉，请先设置默认收货地址！\") {\r\n            this.$router.push(\"/address\");\r\n          }\r\n        }\r\n      });\r\n    },\r\n    startRotation() {\r\n      // 如果还不可以转动\r\n      if (!this.canBeRotated()) {\r\n        return false;\r\n      }\r\n      //開始轉動音效\r\n      lotteryMusic.play();\r\n      // 开始转动\r\n      // 先上锁\r\n      this.isLocking = true;\r\n      // 设置在哪里停下，应该与后台交互，这里随机抽取0~5\r\n      // apiLuckDraw(\"\", true).then(res => {\r\n      // if (res.isSuccess) {\r\n      // let index;\r\n      // for (let i = 0; i < this.prizeData.length; i++) {\r\n      //   const element = this.prizeData[i].PrizeId;\r\n      //   if (element == res.PrizeId) {\r\n      //     index = i;\r\n      //   }\r\n      // }\r\n      let index = this.index;\r\n      // 成功后次数减少一次\r\n      this.num--;\r\n      this.prizeIndex = index;\r\n      // 告诉子组件，开始转动了\r\n      this.$refs.roundTurntable.rotate(index);\r\n      // }\r\n      // });\r\n    },\r\n    // 已经转动完转盘触发的函数\r\n    endRotation() {\r\n    // 停止轉動音效\r\n    lotteryMusic.stop();\r\n    this.showgold = true;\r\n    this.typep = 1;\r\n    // 中獎\r\n    lotteryWining.play();\r\n      apiGetUserInfo(\"\", true).then(res => {\r\n        this.gold = res.UDiamond;\r\n      });\r\n      // 提示中奖\r\n      // alert(\r\n      //   `恭喜您获奖啦,您的奖品是：${this.prizeData[this.prizeIndex].PrizeName}`\r\n      // );\r\n      // this.$message({\r\n      //   type: \"success\",\r\n      //   message: this.prizeData[this.prizeIndex].PrizeName,\r\n      //   center: true,\r\n      //   duration: 3000\r\n      // });\r\n      // 解锁\r\n      this.isLocking = false;\r\n      this.flag = true;\r\n    },\r\n    // 判断是否可以转动\r\n    canBeRotated() {\r\n      if (this.num <= 0) {\r\n        this.showgold = true;\r\n        this.typep = 2;\r\n        return false;\r\n      }\r\n      if (this.isLocking) {\r\n        return false;\r\n      }\r\n      return true;\r\n    },\r\n    //取得地址\r\n    getUserAddress () {\r\n      apiGetUserAddress(\"\", true).then(res => {\r\n        const found = res.Data.find(element => element.IsDefault == 1);\r\n        found != undefined ? this.editUserAddress = false : this.editUserAddress = true;      \r\n      });\r\n    }\r\n  }\r\n};\r\n",null]}