{"remainingRequest":"C:\\work\\竞猜可换色板\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\work\\竞猜可换色板\\src\\views\\personalCenter\\Myself.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\work\\竞猜可换色板\\src\\views\\personalCenter\\Myself.vue","mtime":1605491181323},{"path":"C:\\work\\竞猜可换色板\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\work\\竞猜可换色板\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\work\\竞猜可换色板\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\work\\竞猜可换色板\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\work\\竞猜可换色板\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport Vue from \"vue\";\r\nimport { Toast } from \"vant\";\r\nimport backB from \"@/components/Botton/back.vue\";\r\nVue.use(Toast);\r\nimport axios from \"axios\";\r\nimport {\r\n  apiGetUserInfo,\r\n  apiUploadImg,\r\n  apiChangePwd,\r\n  apiGetVipGrade\r\n} from \"@/api/User.js\";\r\nimport { apiUpload } from \"@/api/Upload.js\";\r\nimport { apiGetUnreadMessageCount, apiSetMessageRead } from \"@/api/Message.js\";\r\nimport { apiGetMissionUnGet } from \"@/api/mission.js\";\r\nimport back from \"@/components/Botton/back.vue\";\r\nimport colorChoice from \"@/components/ColorChoice.vue\";\r\nimport model from \"../../components/model\";\r\nimport { apiGetMemClubs } from \"@/api/Club.js\";\r\nexport default {\r\n  name: \"Myself\",\r\n  components: {\r\n    back,\r\n    colorChoice,\r\n    model\r\n  },\r\n  filters: {\r\n    Uname(val) {\r\n      if (val == \"\") {\r\n        return 100;\r\n      }\r\n    },\r\n    F(val) {\r\n      if (val == \"\") {\r\n        return \"no name\";\r\n      }\r\n    },\r\n    noName(name) {\r\n      if (name == null) {\r\n        return \"去设置昵称\";\r\n      } else {\r\n        return name;\r\n      }\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      infoList: [\r\n        [\r\n          {  topic: this.$t(\"MyRank\"),  routerName: \"rank\"}, //【 我的排位 】\r\n          {  topic: this.$t(\"MyChallenge\"),  routerName: \"challengehome\"}, //【 我的挑战 】\r\n          {  topic: this.$t(\"MyTask\"),  routerName: \"task\"},  //【 我的任务 】\r\n          {  topic: this.$t(\"MyMedal\"),  routerName: \"medal\"},  //【 我的勋章 】\r\n          {  topic: this.$t(\"Club\"),  routerName: \"CreateClub\"}  //【 俱樂部 】\r\n        ],\r\n        [\r\n          {  topic: this.$t(\"PersonalMessage\"),  routerName: \"selfMsg\"},  //【 个人讯息 】\r\n          {  topic: this.$t(\"SystemInformation\"),  routerName: \"myMessage\"},  //【 系统消息 】\r\n          {  topic: this.$t(\"GuessHistory\"),  routerName: \"history\"},  //【 竞猜历史 】\r\n          {  topic: this.$t(\"MatchResults\"),  routerName: \"gameResult\"},  //【 比赛结果 】\r\n          {  topic: this.$t(\"AddressManagement\"),  routerName: \"address\"},  //【 地址管理 】\r\n          {  topic: this.$t(\"Guide\"),  routerName: \"guize\"},  //【 竞猜指南 】\r\n          {  topic: this.$t(\"Questionnaire\"),  routerName: \"questionnaire\"},  //【 问卷调查 】\r\n          {  topic: this.$t(\"ChangeLanguage\"), routerName: \"lang\"},  //【 语种切换 】\r\n        ],\r\n        [\r\n          {  topic: this.$t(\"ChangePassword\"),  routerName: \"changePass\"}  //【 色系选择 】\r\n        ]\r\n      ],\r\n      isAddress: false,\r\n      myMoney: 1000, //金币\r\n      myTicket: 20, //门票\r\n      myLottery: 5, //奖券\r\n      UImg: \"\",\r\n      msgList: {\r\n        UImg: \"\",\r\n        UDiamond: 0,\r\n        UTicket: 0, //门票\r\n        Lotteries: 0 //奖券\r\n      },\r\n      msgCount: 0,\r\n      unclaimedTaskReward: 0,\r\n      countNum: false,\r\n      testList: {},\r\n      msgMsg: \"\",\r\n      imgUrl: \"\",\r\n\r\n      showLan: false,\r\n      language: \"\",\r\n      langIndex: undefined,\r\n      langList: ['简体中文','繁體中文','English'],\r\n\r\n      showGuide: false,\r\n    };\r\n  },\r\n  methods: {\r\n    goToPage(routerName) {\r\n      // 語系切換\r\n      if (routerName == \"lang\") {\r\n        this.showLan = true;\r\n        if (this.language == \"简体中文\") {\r\n          this.langIndex = 0;\r\n        } else if (this.language == \"繁體中文\") {\r\n          this.langIndex = 1;\r\n        }\r\n        else if (this.language == \"English\") {\r\n          this.langIndex = 2;\r\n        }\r\n        return;\r\n      }\r\n\r\n      // 俱樂部\r\n      if (routerName === \"CreateClub\") {\r\n        // 獲取俱樂部會員資格與否   1 = 有資格;  2 = 無資格\r\n        // let userName = localStorage.getItem('uname')\r\n        // let data = {}\r\n        apiGetMemClubs(\"\", true).then(res => {\r\n          if (res.Data == null) {\r\n            // 無會員\r\n            localStorage.setItem(\"isMember\", 2);\r\n            this.$router.push(\"/CreateClub\");\r\n          } else {\r\n            // 有會員\r\n            localStorage.setItem(\"isMember\", 1);\r\n            localStorage.setItem(\"ClubId\", res.Data.ClubId);\r\n            // 判斷是否為管理階級\r\n            if (res.Data.Name == \"会长\") {\r\n              localStorage.setItem(\"isManagement\", 1);\r\n            } else if (res.Data.Name == \"副会长\"){\r\n              localStorage.setItem(\"isManagement\", 2);\r\n            } else if (res.Data.Name == \"会员\"){\r\n              localStorage.setItem(\"isManagement\", 3);\r\n            }\r\n            this.$router.push(\"/myClub\");\r\n          }\r\n        });\r\n        return;\r\n      }\r\n      this.$router.push(\"/\" + routerName);\r\n      switch (routerName) {\r\n        //系统信息\r\n        case \"myMessage\":\r\n          this.$router.push(\"/myMessage\");\r\n          let data = {};\r\n          apiSetMessageRead(data, true).then(res => {\r\n            this.countNum = false;\r\n          });\r\n          break;\r\n\r\n        default:\r\n          break;\r\n      }\r\n    },\r\n    goMyself() {\r\n      this.$router.push(\"/selfMsg\");\r\n    },\r\n    noVip() {\r\n      // let config = {\r\n      //   headers: { \"Content-Type\": \"application/json\" }\r\n      // };\r\n      // let urlL = 'https://api-sf.linsio.cn/api/Payment/OTCLogin';\r\n      // let param = {\r\n      //   '': '123456'\r\n      // }\r\n      // //  添加请求头\r\n      // axios.post(urlL, param, config).then(response => {\r\n      // })\r\n      this.$router.push(\"/vip\");\r\n    },\r\n\r\n    goRecharge() {\r\n      this.$router.push(\"/recharge\");\r\n    },\r\n    //路由跳转\r\n    goShop() {\r\n      this.$router.push(\"/shop\");\r\n    },\r\n    goBackRes() {\r\n      this.$router.push(\"/yijian\");\r\n    },\r\n    goYao() {\r\n      this.$router.push(\"/invitationcode\");\r\n    },\r\n    goExchange() {\r\n      this.$router.push(\"/exchange\");\r\n    },\r\n\r\n    addressIn() {\r\n      this.isAddress = true;\r\n    },\r\n\r\n    layout() {\r\n      localStorage.removeItem(\"token\");\r\n      localStorage.setItem(\"shops\", \"[]\");\r\n      this.$router.push(\"/\");\r\n    },\r\n    goBack() {\r\n      this.$router.go(-1);\r\n      // let data = {}\r\n      // this.$store.dispatch(\"getMsgList\", data);\r\n    },\r\n\r\n    getMsg() {\r\n      let data = {};\r\n      apiGetUserInfo(data, true).then(res => {\r\n        //有token要加ture\r\n        this.msgList = res;\r\n        this.msgList.UImg = res.UImg;\r\n        localStorage.setItem(\"RankId\", res.RankId);\r\n        localStorage.setItem(\"nickName\", res.NickName);\r\n        localStorage.setItem(\"UImg\", res.UImg);\r\n      });\r\n    },\r\n\r\n    getMsgNum() {\r\n      let data = {};\r\n      apiGetUnreadMessageCount(data, true).then(res => {\r\n        this.msgCount = res.UnreadMessageCount;\r\n        if (this.msgCount > 0) {\r\n          this.countNum = true;\r\n        }\r\n      });\r\n    },\r\n\r\n    getUnclaimedTaskReward() {\r\n      let data = {};\r\n      apiGetMissionUnGet(data, true).then(res => {\r\n        this.unclaimedTaskReward = res.Count;\r\n      });\r\n    },\r\n    // 上传图片\r\n    updataImg(e) {\r\n      var file = e.target.files[0];\r\n      // 获取图片的大小，做大小限制有用\r\n      let imgSize = file.size;\r\n      //图片压缩就是处理file\r\n\r\n      this.imgPreview(file);\r\n\r\n      var _this = this; // this指向问题，所以在外面先定义\r\n      if (imgSize <= 1024 * 1024) {\r\n\r\n        const imgName = JSON.stringify(file.name);\r\n        let param = new FormData(); // 创建form对象\r\n        param.append(\"file\", file, file.name); // 通过append向form对象添加数据\r\n        let config = {\r\n          headers: {\r\n            \"Content-Type\": \"multipart/form-data\"\r\n          }\r\n        };\r\n        let urlL = process.env.VUE_APP_API_BASE_URL + \"/Uploader/UploadImg\";\r\n        //  添加请求头\r\n        axios.post(urlL, param, config).then(response => {\r\n          if (response.status == 200) {\r\n            // 成功上传后处理逻辑\r\n            this.msgMsg = response.data.Msg;\r\n            this.msgList.UImg = response.data.Data.Url;\r\n            this.$Alert.showSuccess.call(this, this.msgMsg);\r\n            let data = {\r\n              UImg: this.msgList.UImg\r\n            };\r\n            apiUploadImg(data, true).then(res => {\r\n              if (res.Status == 1) {\r\n                // localStorage.setItem('imgs', this.imgUrl)\r\n              }\r\n            });\r\n          }\r\n        });\r\n      } else {\r\n        this.$Alert.showWarning.call(this, \"图片太大啦！\");\r\n      }\r\n    },\r\n    imgPreview(file) {\r\n      let self = this;\r\n      let Orientation;\r\n      // 创建一个reader\r\n      let reader = new FileReader();\r\n      // 将图片2将转成 base64 格式\r\n      reader.readAsDataURL(file);\r\n      reader.onloadend = function() {\r\n        let result = this.result;\r\n        let img = new Image();\r\n        img.src = result;\r\n        //判断图片是否大于100K,是就直接上传，反之压缩图片\r\n        if (this.result.length <= 1024 * 1024) {\r\n          self.headerImage = this.result;\r\n        } else {\r\n          img.onload = function() {\r\n            let data = self.compress(img, Orientation);\r\n            self.headerImage = data;\r\n          };\r\n        }\r\n      };\r\n    },\r\n    compress(img, Orientation) {\r\n      let canvas = document.createElement(\"canvas\");\r\n      let ctx = canvas.getContext(\"2d\");\r\n      //瓦片canvas\r\n      let tCanvas = document.createElement(\"canvas\");\r\n      let tctx = tCanvas.getContext(\"2d\");\r\n      let initSize = img.src.length;\r\n      let width = img.width;\r\n      let height = img.height;\r\n      //如果图片大于四百万像素，计算压缩比并将大小压至400万以下\r\n      let ratio;\r\n      if ((ratio = (width * height) / 4000000) > 1) {\r\n        ratio = Math.sqrt(ratio);\r\n        width /= ratio;\r\n        height /= ratio;\r\n      } else {\r\n        ratio = 1;\r\n      }\r\n      canvas.width = width;\r\n      canvas.height = height;\r\n      //        铺底色\r\n      ctx.fillStyle = \"#fff\";\r\n      ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n      //如果图片像素大于100万则使用瓦片绘制\r\n      let count;\r\n      if ((count = (width * height) / 1000000) > 1) {\r\n        count = ~~(Math.sqrt(count) + 1); //计算要分成多少块瓦片\r\n        //            计算每块瓦片的宽和高\r\n        let nw = ~~(width / count);\r\n        let nh = ~~(height / count);\r\n        tCanvas.width = nw;\r\n        tCanvas.height = nh;\r\n        for (let i = 0; i < count; i++) {\r\n          for (let j = 0; j < count; j++) {\r\n            tctx.drawImage(\r\n              img,\r\n              i * nw * ratio,\r\n              j * nh * ratio,\r\n              nw * ratio,\r\n              nh * ratio,\r\n              0,\r\n              0,\r\n              nw,\r\n              nh\r\n            );\r\n            ctx.drawImage(tCanvas, i * nw, j * nh, nw, nh);\r\n          }\r\n        }\r\n      } else {\r\n        ctx.drawImage(img, 0, 0, width, height);\r\n      }\r\n      //修复ios上传图片的时候 被旋转的问题\r\n      if (Orientation != \"\" && Orientation != 1) {\r\n        switch (Orientation) {\r\n          case 6: //需要顺时针（向左）90度旋转\r\n            this.rotateImg(img, \"left\", canvas);\r\n            break;\r\n          case 8: //需要逆时针（向右）90度旋转\r\n            this.rotateImg(img, \"right\", canvas);\r\n            break;\r\n          case 3: //需要180度旋转\r\n            this.rotateImg(img, \"right\", canvas); //转两次\r\n            this.rotateImg(img, \"right\", canvas);\r\n            break;\r\n        }\r\n      }\r\n      //进行最小压缩\r\n      let ndata = canvas.toDataURL(\"image/jpeg\", 0.1);\r\n      //\"压缩前：\" + initSize\r\n      //\"压缩后：\" + ndata.length\r\n      //\"压缩率：\" + ~~((100 * (initSize - ndata.length)) / initSize) + \"%\"\r\n      tCanvas.width = tCanvas.height = canvas.width = canvas.height = 0;\r\n      return ndata;\r\n    },\r\n\r\n    // 語系初始化\r\n    langInit() {\r\n      this.language = JSON.parse(localStorage.getItem(\"lang\")).name;\r\n    },\r\n\r\n    // 語系彈窗選擇\r\n    langChoice(index) {\r\n      this.langIndex = index;\r\n    },\r\n\r\n    // 關閉語系選擇彈窗\r\n    cancel() {\r\n      this.showLan = false;\r\n    },\r\n\r\n    // 確定選擇語言\r\n    confirm() {\r\n      if (this.langIndex == 0) {\r\n        localStorage.setItem(\"lang\", JSON.stringify({ name: \"简体中文\", tag: \"zh-CN\" }));\r\n      } else if (this.langIndex == 1) {\r\n        localStorage.setItem(\"lang\", JSON.stringify({ name: \"繁體中文\", tag: \"zh-TW\" }));\r\n      }\r\n      else if (this.langIndex == 2) {\r\n        localStorage.setItem(\"lang\", JSON.stringify({ name: \"English\", tag: \"en-US\" }));\r\n      }\r\n      location.reload();\r\n    },\r\n\r\n    // 競猜指南暫時用確認按鈕\r\n    ComingSoon() {\r\n      this.showGuide = false;\r\n    }\r\n  },\r\n  mounted() {\r\n    this.getMsg();\r\n    this.getMsgNum();\r\n    this.langInit();\r\n    this.getUnclaimedTaskReward();\r\n  }\r\n};\r\n",null]}