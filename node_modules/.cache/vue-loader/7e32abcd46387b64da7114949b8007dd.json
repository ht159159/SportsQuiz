{"remainingRequest":"C:\\Users\\Yang\\Desktop\\新增資料夾\\竞猜可换色板\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Yang\\Desktop\\新增資料夾\\竞猜可换色板\\src\\views\\Challenge\\challengeHome.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Yang\\Desktop\\新增資料夾\\竞猜可换色板\\src\\views\\Challenge\\challengeHome.vue","mtime":1606294072314},{"path":"C:\\Users\\Yang\\Desktop\\新增資料夾\\竞猜可换色板\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Yang\\Desktop\\新增資料夾\\竞猜可换色板\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Yang\\Desktop\\新增資料夾\\竞猜可换色板\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport NavBottom from \"@/components/Main/NavBottom.vue\";\r\nimport {\r\n  apiGetChallengeIsCanGoOn,\r\n  apiGetChallenge,\r\n  apiGetChallengeMatchList,\r\n  apiGetChallengeCumulativeReward,\r\n  apiGetChallengeMatchByRandom\r\n} from \"@/api/match\";\r\nexport default {\r\n  components: {\r\n    NavBottom\r\n  },\r\n  created() {\r\n    this.getChallengeIsCanGoOn();\r\n    this.getYear();\r\n    this.getChallenge();\r\n    // this.getmatch();\r\n    this.getreward();\r\n    // this.isHaveMatch();\r\n  },\r\n  data() {\r\n    return {\r\n      age: [\r\n        { num: 12, eng: \"January\" },\r\n        { num: 11, eng: \"November\" },\r\n        { num: 10, eng: \"October\" },\r\n        { num: 9, eng: \"September\" },\r\n        { num: 8, eng: \"August\" },\r\n        { num: 7, eng: \"July\" },\r\n        { num: 6, eng: \"June\" },\r\n        { num: 5, eng: \"May\" },\r\n        { num: 4, eng: \"April\" },\r\n        { num: 3, eng: \"March\" },\r\n        { num: 2, eng: \"February\" },\r\n        { num: 1, eng: \"December\" }\r\n      ],\r\n      goOnType: \"\",\r\n      challengeInfo: \"\",\r\n      year: \"\",\r\n      value: 1,\r\n      match: [],\r\n      id: \"\",\r\n      matchitem: \"\",\r\n      activeNames: \"\",\r\n      showcontent: false,\r\n      item: \"\",\r\n      offset: 10,\r\n      loading: false,\r\n      finished: false,\r\n      index: 1,\r\n      page: \"\",\r\n      Jump: true,\r\n      ftext: \"\",\r\n      ShowExplain: false,\r\n      nomatchs: false\r\n    };\r\n  },\r\n  methods: {\r\n    showPopup() {\r\n      this.ShowExplain = true;\r\n    },\r\n    hideExplain() {\r\n      this.ShowExplain = false;\r\n    },\r\n    initialization() {\r\n      this.match = [];\r\n      this.index = 1;\r\n      this.loading = true; //下拉加载中\r\n      this.finished = false; //下拉结束\r\n      this.nomatchs = false;\r\n      if (this.loading) {\r\n        this.onLoad();\r\n      }\r\n    },\r\n    onLoad() {\r\n      this.ftext = this.$t('WipeNomore');\r\n      let data = {\r\n        year: this.year,\r\n        index: this.index,\r\n        count: 10\r\n      };\r\n      apiGetChallengeMatchList(data, true).then(res => {\r\n        this.page = res.TotalPages;\r\n        if (res.Data.length == 0) {\r\n          this.match = \"\";\r\n          this.ftext = \"\";\r\n          this.finished = true;\r\n          this.loading = false;\r\n          this.nomatchs = true;\r\n          return;\r\n        }\r\n        if (res.Data.length > 0) {\r\n          this.index++;\r\n          for (let i = 0; i < res.Data.length; i++) {\r\n            this.match.push(res.Data[i]);\r\n          }\r\n          this.loading = false;\r\n\r\n          if (this.page == this.index - 1) {\r\n            this.finished = true;\r\n\r\n            return;\r\n          }\r\n          return;\r\n        }\r\n      });\r\n    },\r\n    // 判断是否有比赛\r\n    isHaveMatch() {\r\n      apiGetChallengeMatchByRandom(\"\", true).then(res => {\r\n        if (res.data.Data.length == 0) {\r\n          this.Jump = false;\r\n        }\r\n      });\r\n    },\r\n\r\n    getreward() {\r\n      apiGetChallengeCumulativeReward(\"\", true).then(res => {\r\n        this.item = res;\r\n      });\r\n    },\r\n    getmatch() {},\r\n    handleChange(value, id, time) {\r\n\r\n      this.$router.push(\"/challengerecord\");\r\n      this.$store.commit(\"upChallengeId\", value);\r\n      this.$store.commit(\"uptime\", time);\r\n    },\r\n    add() {\r\n      this.year++;\r\n\r\n      this.initialization();\r\n    },\r\n    lose() {\r\n      this.year--;\r\n\r\n      this.initialization();\r\n    },\r\n    goJump(id) {\r\n      this.$router.push(`/challengemouth/${id}`);\r\n    },\r\n    //挑战赛是否进行\r\n    getChallengeIsCanGoOn() {\r\n      apiGetChallengeIsCanGoOn(\"\", true).then(res => {\r\n        this.goOnType = res.GoOnType;\r\n      });\r\n    },\r\n    getYear() {\r\n      var date = new Date();\r\n      this.year = date.getFullYear();\r\n    },\r\n    //获得挑战赛\r\n    getChallenge() {\r\n      apiGetChallenge(\"\", true).then(res => {\r\n        this.challengeInfo = res.availableIntegral;\r\n      });\r\n      this.$store.dispatch(\"asyncChallengeid\");\r\n      // this.$store.commit(\"upChallengeId\", {\r\n      //   id: this.challengeInfo.ChallengeId\r\n      // });\r\n\r\n      // apiGetChallengeMatchByRandom(\"\", true).then(res => {\r\n      // });\r\n    },\r\n    // IsCanBuyChallengeTicket() {\r\n    //   let data = {\r\n    //     challengeType: 1\r\n    //   };\r\n    //   apiIsCanBuyChallengeTicket(data, true).then(res => {\r\n    //   });\r\n    // },\r\n    gojump() {\r\n      if (this.goOnType == 1) {\r\n        this.$router.push(\"/challengeticket\");\r\n      }\r\n      if (this.Jump) {\r\n        if (this.goOnType == 3) {\r\n          if (this.challengeInfo.CurLevel == 1) {\r\n            this.$router.push(\"/challengematch\");\r\n          }\r\n          if (this.challengeInfo.CurLevel == 2) {\r\n            this.$router.push(\"/challengetwo\");\r\n          }\r\n          if (this.challengeInfo.CurLevel == 3) {\r\n            this.$router.push(\"/challengethree\");\r\n          }\r\n          if (this.challengeInfo.CurLevel == 4) {\r\n            this.$router.push(\"/challengefour\");\r\n          }\r\n          if (this.challengeInfo.CurLevel == 5) {\r\n            this.$router.push(\"/challengefive\");\r\n          }\r\n        }\r\n      } else {\r\n        this.$message({\r\n          message: this.$t('GameMaintenance'),\r\n          duration: 3000,\r\n          type: \"error\",\r\n          center: true\r\n        });\r\n      }\r\n      // apiGetChallengeIsCanGoOn(\"\", true).then(res => {\r\n      // });\r\n      // this.$router.push(\"/challengematch\");\r\n    }\r\n  }\r\n};\r\n",null]}