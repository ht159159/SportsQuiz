{"remainingRequest":"C:\\work\\竞猜可换色板\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\work\\竞猜可换色板\\src\\views\\club\\ClubActivities.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\work\\竞猜可换色板\\src\\views\\club\\ClubActivities.vue","mtime":1605522712112},{"path":"C:\\work\\竞猜可换色板\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\work\\竞猜可换色板\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\work\\竞猜可换色板\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\work\\竞猜可换色板\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\work\\竞猜可换色板\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport back from \"@/components/Botton/back.vue\";\r\nimport model from \"@/components/model\";\r\nimport { apiBuyClubActivityTicket, apiUpdateClubActivityStatus, apiGetClubActivityList} from \"@/api/ClubActivitys.js\";\r\nimport { apiGetClubGamblingList, apiUpdateClubGamblingsStatus} from \"@/api/ClubGamblings.js\";\r\nexport default {\r\n  components: {\r\n    back,\r\n    model\r\n  },\r\n  data() {\r\n    return {\r\n      isManagement: 0,\r\n      clubId: undefined,\r\n      isOpen: false,\r\n\r\n      activeCategoryIndex: 0,\r\n      tabIndex: 0,\r\n      betTabIndex: 0,\r\n      latestActivitiesObj: [],\r\n      historyActivitiesObj: [],\r\n      isTicketTipOpen: false,\r\n      ticketTipText:\r\n        \"活动规则：<br />1、胜负的判断：<br />①根据最终比赛结果来判定对应的竞猜胜负<br />②根据本次活动竞猜正确的胜率来判断第一名<br />2、参与规则<br />①参与需缴纳一定金额的门票<br />②购买门票的用户，视作愿意参与活动，门票不予退还<br />3、奖励规则<br />①胜利最高的为第一名，胜率想同的用户并列第一<br />②第一名的用户获得本次活动门票收益,如有多个用户并列第一，则均分本次活动的奖励<br />③奖励的发放在活动结束后的2个工作日内，由系统自动发放奖励<br />活动最终解释权归本APP所有\",\r\n      avtiveId: \"\",\r\n      activeNodata: false,\r\n      historyNoData: false,\r\n      matchName: \"\",\r\n      // 投注活動\r\n      betMyList: [],\r\n      betOtherList: [],\r\n      betMyListNoData: false,\r\n      betOtherListNoData: false,\r\n\r\n      wipeLoading: false,\r\n      callBackMsg: \"\",\r\n\r\n      // v-infinite-scroll 套件\r\n      busy: false,\r\n      immediate: false,\r\n      lastestIndexNum: 1,\r\n      historyIndexNum: 1,\r\n      lastestTotalPages: \"\",\r\n      historyTotalPages:\"\",\r\n\r\n      // 彈窗\r\n      isTicketTipType: \"\",\r\n      deleteData:\"\"\r\n    };\r\n  },\r\n  created() {\r\n    // 讀取是否為管理階\r\n    this.isManagement = localStorage.getItem(\"isManagement\");\r\n    // 取得clubId\r\n    this.clubId = localStorage.getItem(\"ClubId\");\r\n\r\n\r\n    if (localStorage.getItem(\"activeCategoryIndex\") == null) {\r\n      localStorage.setItem(\"activeCategoryIndex\", 0);\r\n    }\r\n    if (localStorage.getItem(\"tabIndex\") == null) {\r\n      localStorage.setItem(\"tabIndex\", 0);\r\n    }\r\n    if (localStorage.getItem(\"betTabIndex\") == null) {\r\n      localStorage.setItem(\"betTabIndex\", 0);\r\n    }\r\n\r\n    if (localStorage.getItem(\"activeCategoryIndex\") == \"0\") {\r\n      this.getLastestActivies();\r\n      this.activeCategoryIndex = 0;\r\n      this.tabIndex = localStorage.getItem(\"tabIndex\");\r\n      if (this.tabIndex == 1) {\r\n        this.getHistoryActivies();\r\n      }\r\n    } else if (localStorage.getItem(\"activeCategoryIndex\") == \"1\") {\r\n      this.activeCategoryIndex = 1;\r\n      this.getActiveBetList();\r\n      this.betTabIndex = localStorage.getItem(\"betTabIndex\");\r\n    }\r\n  },\r\n  methods: {\r\n    // 獲取最新活動\r\n    getLastestActivies() {\r\n      let data = {\r\n        ClubId: this.clubId,\r\n        Type: 1,\r\n        index: this.lastestIndexNum,\r\n        count: 10\r\n      }\r\n      apiGetClubActivityList(data, true).then(res => {\r\n        if (res.Code == \"600\") {\r\n          this.isOpen = true;\r\n          this.callBackMsg = res.Message;\r\n          this.busy = true;\r\n          return;\r\n        }\r\n        res.Data.Data.length <= 0 ? this.activeNodata = true : this.activeNodata = false;\r\n        // 俱樂部活動頁的資料\r\n        this.latestActivitiesObj = res.Data.Data;\r\n        this.lastestTotalPages = res.Data.TotalPages;\r\n      })\r\n      // this.busy = false;\r\n      this.tabIndex = 0;\r\n      localStorage.setItem(\"activeCategoryIndex\", this.activeCategoryIndex);\r\n    },\r\n\r\n    // 無限加載最新活動\r\n    loadLastest() {\r\n      if (this.lastestIndexNum >= this.lastestTotalPages ) {\r\n        return\r\n      }\r\n      this.busy = true;\r\n      this.lastestIndexNum++;\r\n      let data = {\r\n        ClubId: this.clubId,\r\n        Type: 1,\r\n        index: this.lastestIndexNum,\r\n        count: 10\r\n      }\r\n      apiGetClubActivityList(data, true).then(res => {\r\n        if (res.Code == \"600\") {\r\n          this.isOpen = true;\r\n          this.callBackMsg = res.Message;\r\n          this.busy = true;\r\n          return;\r\n        }\r\n        // 俱樂部活動頁的資料\r\n        if (res.Data.Data.length == 0) {\r\n          this.busy = true;\r\n        } else if(res.Data.Data.length > 0){\r\n          res.Data.Data.forEach(el => {\r\n            this.latestActivitiesObj.push(el);\r\n            this.busy = false;\r\n          })\r\n        }\r\n      })\r\n    },\r\n\r\n\r\n    // 獲取歷史活動\r\n    getHistoryActivies() {\r\n      let data = {\r\n        ClubId: this.clubId,\r\n        Type: 2,\r\n        index: this.historyIndexNum,\r\n        count: 10\r\n      }\r\n      apiGetClubActivityList(data, true).then(res => {\r\n        if (res.Code == \"600\") {\r\n          this.isOpen = true;\r\n          this.callBackMsg = res.Message;\r\n          return;\r\n        }\r\n        res.Data.Data.length <= 0 ? this.historyNoData = true : this.historyNoData = false;\r\n        // 俱樂部活動頁的資料\r\n        this.historyActivitiesObj = res.Data.Data;\r\n        this.historyTotalPages = res.Data.TotalPages;\r\n      })\r\n      this.tabIndex = 1;\r\n      localStorage.setItem(\"activeCategoryIndex\", this.activeCategoryIndex);\r\n    },\r\n\r\n    // 無限加載歷史活動\r\n    loadHistory() {\r\n      if (this.historyIndexNum >= this.historyTotalPages ) {\r\n        return\r\n      }\r\n      this.busy = true;\r\n      this.historyIndexNum++;\r\n      let data = {\r\n        ClubId: this.clubId,\r\n        Type: 2,\r\n        index: this.historyIndexNum,\r\n        count: 10\r\n      }\r\n      apiGetClubActivityList(data, true).then(res => {\r\n        if (res.Code == \"600\") {\r\n          this.isOpen = true;\r\n          this.callBackMsg = res.Message;\r\n          this.busy = true;\r\n          return;\r\n        }\r\n        // 俱樂部活動頁的資料\r\n        if (res.Data.Data.length == 0) {\r\n          this.busy = true;\r\n        } else if(res.Data.Data.length > 0){\r\n          res.Data.Data.forEach(el => {\r\n            this.historyActivitiesObj.push(el);\r\n            this.busy = false;\r\n          })\r\n        }\r\n      })\r\n    },\r\n\r\n    // 取得俱樂部投注列表\r\n    getActiveBetList() {\r\n      let data = {\r\n        ClubId: this.clubId\r\n      };\r\n      apiGetClubGamblingList(data, true).then(res => {\r\n        this.betMyList = res.Data.MyGamblings;\r\n        this.betOtherList = res.Data.OtherGamblings;\r\n        if (this.betMyList == null || this.betMyList.length == 0) {\r\n          this.betMyListNoData = true;\r\n        }\r\n        if (this.betOtherList == null || this.betOtherList.length == 0) {\r\n          this.betOtherListNoData = true;\r\n        }\r\n      });\r\n       this.betTabIndex = 0;\r\n      localStorage.setItem(\"activeCategoryIndex\", this.activeCategoryIndex);\r\n    },\r\n\r\n    // 切換俱樂部挑戰分頁\r\n    changeTabIndex(index) {\r\n      this.tabIndex = index;\r\n      localStorage.setItem(\"tabIndex\", index);\r\n      // 最新\r\n      if (index == 0) {\r\n        this.latestActivitiesObj = [];\r\n        this.lastestIndexNum = 1;\r\n        this.busy = false;\r\n        this.getLastestActivies();\r\n      }\r\n      // 歷史\r\n      if (index == 1) {\r\n        this.historyActivitiesObj = [];\r\n        this.historyIndexNum = 1;\r\n        this.busy = false;\r\n        this.getHistoryActivies();\r\n      }\r\n    },\r\n    // 切換俱樂部投注分頁\r\n    changeBetTabIndex(index) {\r\n      this.betTabIndex = index;\r\n      localStorage.setItem(\"betTabIndex\", index);\r\n    },\r\n\r\n    // 活動開啟發佈頁面\r\n    activesRelease() {\r\n      this.$router.push('/ClubActivitiesRelease');\r\n    },\r\n\r\n    // 購買活動門票\r\n    getTicket() {\r\n      console.log(this.avtiveId)\r\n      let data = {\r\n        ClubId: this.clubId,\r\n        ClubActivityId: this.avtiveId\r\n      };\r\n      apiBuyClubActivityTicket(data, true).then(res => {\r\n        if (res.Code == 600) {\r\n          let vm = this;\r\n          const m = vm.$message({\r\n            message: res.Message,\r\n            duration: 3000,\r\n            type: \"error\",\r\n            center: true\r\n          });\r\n          setTimeout(() => m.close(), 2000);\r\n          return;\r\n        }\r\n        localStorage.setItem(\"AcvtiveId\", this.avtiveId);\r\n        let vm = this;\r\n        const m = vm.$message({\r\n          message: this.$t('SuccessfulPurchase'),\r\n          duration: 3000,\r\n          type: \"success\",\r\n          center: true\r\n        });\r\n        setTimeout(() => m.close(), 2000);\r\n        setTimeout(() => {\r\n          this.isTicketTipOpen = false;\r\n          this.$router.push(\"/ClubActivityMatch\");\r\n        }, 3000);\r\n      });\r\n    },\r\n\r\n    // 繼續下注\r\n    continueBet(avtiveId) {\r\n      localStorage.setItem(\"AcvtiveId\", avtiveId);\r\n      this.$router.push(\"/ClubActivityMatch\");\r\n    },\r\n\r\n    // 參加成功\r\n    goResultDetail(avtiveId){\r\n      localStorage.setItem(\"AcvtiveId\", avtiveId);\r\n      this.$router.push(\"/ActivityMatchResultDetail\");\r\n    },\r\n\r\n    // 刪除最新活動\r\n    deleteActive(){\r\n      let data = {\r\n          Id: this.deleteData.Id,\r\n          ClubId: this.deleteData.ClubId,\r\n          SelectLeague: this.deleteData.SelectLeague,\r\n          MatchIds: this.deleteData.MatchIds,\r\n          PlayIds: this.deleteData.PlayIds,\r\n          ActivityContent: this.deleteData.ActivityContent,\r\n          NumGames: this.deleteData.NumGames,\r\n          ActivityImg: this.deleteData.ActivityImg,\r\n          SumBonus: this.deleteData.SumBonus,\r\n          Status: -1,\r\n          Stime: this.deleteData.Stime,\r\n          Etime: this.deleteData.Etime,\r\n          CreateTime: this.deleteData.CreateTime,\r\n          Creator: this.deleteData.Creator,\r\n      };\r\n      apiUpdateClubActivityStatus(data, true).then(res => {\r\n        if (res.Success) {\r\n          let vm = this;\r\n          const m = vm.$message({\r\n            message: this.$t('successfullyDeleted'),\r\n            duration: 3000,\r\n            type: \"success\",\r\n            center: true\r\n          });\r\n          setTimeout(() => {\r\n            m.close();\r\n            if (this.tabIndex == 0) {\r\n              this.getLastestActivies();\r\n              this.tabIndex = 0\r\n              return;\r\n            }\r\n            if (this.tabIndex == 1) {\r\n              this.getHistoryActivies();\r\n              this.tabIndex = 1;\r\n              return;\r\n            }\r\n          }, 2000);\r\n        } else {\r\n          let vm = this;\r\n          const x = vm.$message({\r\n            message: res.Message,\r\n            duration: 3000,\r\n            type: \"warning\",\r\n            center: true\r\n          });\r\n          setTimeout(() => x.close(), 2000);\r\n        }\r\n        this.isTicketTipOpen = false;\r\n      });\r\n    },\r\n\r\n    // 前往俱樂部投注\r\n    goBet(id) {\r\n      localStorage.setItem(\"betId\", id);\r\n      setTimeout(() => {\r\n        this.$router.push(\"/clubActiveBet\");\r\n      }, 250);\r\n    },\r\n\r\n    // 查看單一賽果 type:  1 = 發起人賽果;  2 = 其他人賽果\r\n    goBetResult(type, id) {\r\n      localStorage.setItem(\"betId\", id);\r\n      localStorage.setItem(\"singleResult\", true)\r\n      if (type == 1) {\r\n        setTimeout(() => {\r\n          this.$router.push(\"/InitiatorBetResult\");\r\n        }, 250);\r\n      } else {\r\n        setTimeout(() => {\r\n          this.$router.push(\"/BetResult\");\r\n        }, 250);\r\n      }\r\n    },\r\n\r\n    // 俱樂部投注刪除\r\n    betDelete() {\r\n      let data = {\r\n        Id: this.deleteData.Id,\r\n        ClubId: this.deleteData.ClubId,\r\n        MatchId: this.deleteData.MatchId,\r\n        MatchItemId: this.deleteData.MatchItemId,\r\n        PlayId: this.deleteData.PlayId,\r\n        BetPosition: this.deleteData.BetPosition,\r\n        OddsValue: this.deleteData.OddsValue,\r\n        GamblingTitle: this.deleteData.GamblingTitle,\r\n        GamblingContent: this.deleteData.GamblingContent,\r\n        GamblingImg: this.deleteData.GamblingImg,\r\n        Deposit: this.deleteData.Deposit,\r\n        OpenBetAmount: this.deleteData.OpenBetAmount,\r\n        BettedAmount: this.deleteData.BettedAmount,\r\n        HandlingCharge: this.deleteData.HandlingCharge,\r\n        Status: -1,\r\n        Stime: this.deleteData.Stime,\r\n        Etime: this.deleteData.Etime,\r\n        CreateTime: this.deleteData.CreateTime,\r\n        Creator: this.deleteData.Creator\r\n      }\r\n      apiUpdateClubGamblingsStatus(data, true).then(res => {\r\n        if(res.Data.Item1) {\r\n          let vm = this;\r\n          const m = vm.$message({\r\n            message: this.$t('successfullyDeleted'),\r\n            duration: 3000,\r\n            type: \"success\",\r\n            center: true\r\n          });\r\n          setTimeout(() => m.close(), 2000);\r\n          // 再獲取一次列表\r\n          this.getActiveBetList();\r\n          this.isTicketTipOpen = false;\r\n          return;\r\n        } \r\n        if (res.Code == 600) {\r\n          let vm = this;\r\n          const m = vm.$message({\r\n            message: res.Message,\r\n            duration: 3000,\r\n            type: \"warning\",\r\n            center: true\r\n          });\r\n          setTimeout(() => m.close(), 2000);\r\n          this.isTicketTipOpen = false;\r\n          return;\r\n        }\r\n        if (res.Data.Item1 == false) {\r\n          let vm = this;\r\n          const m = vm.$message({\r\n            message: this.$t(\"DataError\"),\r\n            duration: 3000,\r\n            type: \"warning\",\r\n            center: true\r\n          });\r\n          setTimeout(() => m.close(), 2000);\r\n          return;\r\n        }\r\n        this.isTicketTipOpen = false;\r\n      });\r\n    },\r\n    //刪除活動function選擇\r\n    deleteFunction () {\r\n      this.isTicketTipType == 'delete' ? this.deleteActive() : this.betDelete()\r\n    },\r\n\r\n    //彈窗顯示\r\n    isTicketTipShow (e,delData) {\r\n      this.isTicketTipType = e.toElement.className;\r\n      this.deleteData = delData;\r\n      this.isTicketTipOpen = !this.isTicketTipOpen;\r\n\r\n    },\r\n    // 彈窗確認按鈕事件\r\n    confirmBtnEvent() {\r\n      this.$router.push(\"/CreateClub\");\r\n    },\r\n  },\r\n};\r\n",null]}