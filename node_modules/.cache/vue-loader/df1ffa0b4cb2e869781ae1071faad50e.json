{"remainingRequest":"C:\\Users\\Yang\\Desktop\\新增資料夾\\竞猜可换色板\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Yang\\Desktop\\新增資料夾\\竞猜可换色板\\src\\views\\games.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Yang\\Desktop\\新增資料夾\\竞猜可换色板\\src\\views\\games.vue","mtime":1606980099577},{"path":"C:\\Users\\Yang\\Desktop\\新增資料夾\\竞猜可换色板\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Yang\\Desktop\\新增資料夾\\竞猜可换色板\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Yang\\Desktop\\新增資料夾\\竞猜可换色板\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport NavBottom from \"@/components/Main/NavBottom.vue\";\r\n\r\nexport default {\r\n  created () {\r\n    this.getMatchType();\r\n    this.showtabs2(this.football.matchTypeId);\r\n  },\r\n  name: \"gameSport\",\r\n  components: {\r\n    NavBottom\r\n  },\r\n  data () {\r\n    return {\r\n      active: 0,\r\n      tab1: false,\r\n      tab2: true,\r\n      tab3: false,\r\n      tab4: false,\r\n      tab5: false,\r\n      tab6: false,\r\n      football: {\r\n        matchTypeId: this.$store.state.match.MatchType[0].MatchTypeId\r\n      },\r\n      date: \"\",\r\n      count: \"\",\r\n      mid: \"\",\r\n      mlist: \"\",\r\n      msgList: [],\r\n      IndexNum: 1,\r\n      busy: false,\r\n      loading: false,\r\n      finished: false,\r\n      cid: \"\"\r\n    };\r\n  },\r\n  methods: {\r\n    onLoad () {\r\n      setTimeout(() => {\r\n\r\n        let data = {\r\n          matchTypeId:\r\n            this.cid || this.$store.state.match.MatchType[0].MatchTypeId,\r\n          index: this.IndexNum,\r\n          count: 10\r\n        };\r\n\r\n        this.$store.dispatch(\"asyncgetMatchList\", data);\r\n\r\n        if (this.$store.state.match.Matchs.length == 10) {\r\n          for (let i = 0; i < this.$store.state.match.Matchs.length; i++) {\r\n            this.msgList.push(this.$store.state.match.Matchs[i]);\r\n          }\r\n          this.loading = false;\r\n          this.IndexNum++;\r\n        } else if (\r\n          this.$store.state.match.Matchs.length < 10 &&\r\n          this.$store.state.match.Matchs.length > 0\r\n        ) {\r\n          for (let i = 0; i < this.$store.state.match.Matchs.length; i++) {\r\n            this.msgList.push(this.$store.state.match.Matchs[i]);\r\n          }\r\n          this.loading = false;\r\n          this.finished = true;\r\n        }\r\n      }, 500);\r\n    },\r\n\r\n    // load() {\r\n    //   this.busy = true;\r\n    //   let data = {\r\n    //     matchTypeId: this.$store.state.match.MatchType[0].MatchTypeId,\r\n    //     index: this.IndexNum,\r\n    //     count: 10\r\n    //   };\r\n\r\n    //   this.$store.dispatch(\"asyncgetMatchList\", data);\r\n    //   if (this.$store.state.match.Matchs.length == 0) {\r\n    //     this.busy = true;\r\n    //     return;\r\n    //   } else if (this.$store.state.match.Matchs.length > 0) {\r\n    //     for (let i = 0; i < this.$store.state.match.Matchs.length; i++) {\r\n    //       this.msgList.push(this.$store.state.match.Matchs[i]);\r\n    //       this.busy = false;\r\n    //     }\r\n    //     this.IndexNum++;\r\n    //   }\r\n    // },\r\n    gojump (id, name) {\r\n      this.$store.commit(\"upMatchid\", {\r\n        MatchId: id,\r\n        MatchName: name\r\n      });\r\n      this.$router.push(\"/match\");\r\n    },\r\n    showtabs (id) {\r\n      this.cid = id;\r\n      let data = {\r\n        matchTypeId: id,\r\n        index: 1,\r\n        count: 10\r\n      };\r\n      this.$store.dispatch(\"asyncgetMatchList\", data);\r\n    },\r\n    showtabs2 (id) {\r\n      let data = {\r\n        matchTypeId: id,\r\n        index: 1,\r\n        count: 10\r\n      };\r\n      this.$store.dispatch(\"asyncgetMatchList\", data);\r\n    },\r\n    getMatchType () {\r\n      let data = {\r\n        index: 1,\r\n        count: 10\r\n      };\r\n      this.$store.dispatch(\"asyncgetMatchType\", data);\r\n    }\r\n  }\r\n};\r\n",null]}