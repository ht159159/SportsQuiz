{"remainingRequest":"C:\\Users\\Yang\\Desktop\\新增資料夾\\竞猜可换色板\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Yang\\Desktop\\新增資料夾\\竞猜可换色板\\src\\views\\RankMatch.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Yang\\Desktop\\新增資料夾\\竞猜可换色板\\src\\views\\RankMatch.vue","mtime":1608885900411},{"path":"C:\\Users\\Yang\\Desktop\\新增資料夾\\竞猜可换色板\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Yang\\Desktop\\新增資料夾\\竞猜可换色板\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Yang\\Desktop\\新增資料夾\\竞猜可换色板\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Yang\\Desktop\\新增資料夾\\竞猜可换色板\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport NavBottom from \"@/components/Main/NavBottom.vue\";\r\nimport back from \"../components/Botton/back.vue\";\r\nimport model from \"../components/model\";\r\nimport { betSuccess } from \"@/utils/medias\";\r\nimport FlowAd from \"@/components/FlowAd\";\r\nimport {\r\n  apiGetBetResponse,\r\n  apiBet,\r\n  apiGetMemberMatchViewModel\r\n} from \"../api/match.js\";\r\nimport { apiGetFlowAdByType } from \"@/api/FlowAd.js\";\r\nexport default {\r\n  watch: {\r\n    betnum: function() {\r\n      if (\r\n        this.betinfo.PlayType == 3 ||\r\n        this.betinfo.PlayType == 4 ||\r\n        this.betinfo.PlayType == 5 ||\r\n        this.betinfo.PlayType == 6\r\n      ) {\r\n        this.money = (this.betnum * this.betinfo.OddsValue).toFixed(2);\r\n      } else {\r\n        this.money = (\r\n          this.betnum * this.betinfo.OddsValue -\r\n          this.betnum\r\n        ).toFixed(2);\r\n      }\r\n      this.rangeValue = parseInt(this.betnum);\r\n    }\r\n  },\r\n  components: {\r\n    NavBottom,\r\n    back,\r\n    model,\r\n    FlowAd\r\n  },\r\n\r\n  data() {\r\n    return {\r\n      tab1: true,\r\n      tab2: false,\r\n      tab3: false,\r\n\r\n      show: false,\r\n      showbet: false,\r\n      betnum: 0,\r\n      rangeValue: 0,\r\n      rangeMaxVal: 0,\r\n      money: \"\",\r\n      playtype: 0,\r\n      playId: \"\",\r\n      betinfo: \"\",\r\n      rankinfo: \"\",\r\n      fastnum: \"\",\r\n      IsOddsChange: false,\r\n      lastOdds: \"\",\r\n      newOdds: \"\",\r\n      timer: {\r\n        timer1: \"\",\r\n        timer2: \"\",\r\n        timer3: \"\"\r\n      },\r\n      countDownTimer: \"\",\r\n      countDownTime: 30,\r\n      qualifyingMinBet: 1,\r\n      isBetDisable: false,\r\n      isOpenAd: false,\r\n      adTypeId: 0,\r\n      isFinished: false,\r\n      AdObj: {},\r\n    };\r\n  },\r\n  created() {\r\n    // this.getMatchPlay();\r\n    this.initGetMatchPlay();\r\n    this.getrankmatchinfo();\r\n    // this.cycling();\r\n  },\r\n  methods: {\r\n    fastbet(id) {\r\n      this.fastnum = id;\r\n      this.betnum = id;\r\n    },\r\n    getrankmatchinfo() {\r\n      let data = {\r\n        matchId: this.$store.state.match.MatchId\r\n      };\r\n      apiGetMemberMatchViewModel(data, true).then(res => {\r\n        this.rankinfo = res;\r\n      });\r\n    },\r\n    gojump(id) {\r\n      this.$router.push(\"/matchmore\");\r\n    },\r\n    //关闭下注\r\n    closedialog() {\r\n      this.showbet = false;\r\n    },\r\n\r\n    //下注界面\r\n    showBetFn(id) {\r\n      this.betnum = 0;\r\n      // if (id > 0) {\r\n      //   this.showbet = true;\r\n      // }\r\n      this.playId = id;\r\n      if (this.playId == -1) {\r\n        return;\r\n      }\r\n      let data = {\r\n        playId: id,\r\n        betType: 2\r\n      };\r\n      apiGetBetResponse(data, true).then(res => {\r\n        if(Math.abs(res.Code) >= 600) {\r\n          this.$message({\r\n            message: res.Message,\r\n            duration: 3000,\r\n            type: \"error\",\r\n            center: true\r\n          });\r\n        } else {\r\n          this.showbet = true;\r\n\r\n          this.betinfo = res;\r\n          // 上次的舊賠率\r\n          this.lastOdds = this.betinfo.OddsValue;\r\n          // 投注金額預設最低投注金額\r\n          this.betnum = res.MinBetIntegral;\r\n          this.rangeValue = this.betnum;\r\n\r\n          // 判斷最大單筆投注金額回傳是否為-1 如是拉桿的最大值為10000\r\n          if (res.MaxBetIntegral === -1) this.rangeMaxVal = 10000;\r\n          else this.rangeMaxVal = res.MaxBetIntegral;\r\n\r\n          }\r\n          // 判斷玩家餘額小於最小可投注額時，指针放置在开始位置显示最小可投注额 且不可拖动\r\n          if (this.betinfo.AvailableIntegral < this.betinfo.MinBetIntegral) {\r\n            this.isDisable = true;\r\n            return;\r\n          // 判斷玩家餘額跟回傳的MaxBetIntegral 哪個小就取哪個\r\n          if (this.betinfo.AvailableIntegral > res.MaxBetIntegral) {\r\n            this.rangeMaxVal = res.MaxBetIntegral;\r\n            this.isDisable = false;\r\n          }\r\n          else if (this.betinfo.AvailableIntegral < res.MaxBetIntegral) {\r\n            this.rangeMaxVal = this.betinfo.AvailableIntegral;\r\n            this.isDisable = false;\r\n          }\r\n          else if (this.betinfo.AvailableIntegral = res.MaxBetIntegral) {\r\n            this.rangeMaxVal = this.betinfo.AvailableIntegral;\r\n            this.isDisable = false;\r\n          }\r\n        }\r\n      });\r\n    },\r\n    changeRangeVal() {\r\n      this.betnum = this.rangeValue;\r\n\r\n      let tooltip = document.querySelector(\".slide-tooltip\");\r\n      let rangeBtn = document.querySelector(\".el-slider__bar\");\r\n\r\n      let tooltipWidth = tooltip.getBoundingClientRect().width; // 提示框最正確的寬度\r\n      let rangeBtnOffset = rangeBtn.offsetWidth; // 拖動拉桿時拉桿條的偏移量\r\n      let rangeBtnOffsetParent = rangeBtn.offsetParent.offsetLeft; // 拉桿條離父層左邊(父層padding-left)的偏移量\r\n\r\n      let tolerance = tooltipWidth / 2 + (rangeBtnOffsetParent - tooltipWidth); // 公差\r\n      if (!this.isrunTwice) {\r\n        tooltip.style.left = tolerance + \"px\";\r\n        this.isrunTwice = true;\r\n      } else {\r\n        tooltip.style.left = rangeBtnOffset + tolerance + \"px\";\r\n      }\r\n    },\r\n    //投注金额\r\n    addbet() {\r\n      this.betnum = this.betnum + 1;\r\n    },\r\n    losebet() {\r\n      if (this.betnum == 0) {\r\n        return;\r\n      }\r\n      this.betnum = this.betnum - 1;\r\n    },\r\n    //可赢金额\r\n    getmoney1() {\r\n      // this.money = this.betnum * this.betinfo.OddsValue;\r\n      // this.money = this.money.toFixed(2);\r\n    },\r\n    // 點擊下注時判斷\r\n    betClick() {\r\n      this.newChangeOdds().then(() => {\r\n        // 如果兩個賠率不同\r\n        if (this.lastOdds !== this.newOdds) {\r\n          this.showbet = false;\r\n          this.IsOddsChange = true;\r\n          this.getMatchPlay();\r\n        } else {\r\n          this.bet();\r\n        }\r\n      });\r\n    },\r\n    //下注\r\n    async bet() {\r\n      // 防止连点\r\n      if (this.isBetDisable || !this.showbet) {\r\n        return false;\r\n      }\r\n      this.isBetDisable = true; // 防止连点\r\n\r\n      let data = {\r\n        playId: this.playId,\r\n        betIntegral: this.betnum,\r\n        betType: 2\r\n      };\r\n      if (this.betnum >= 1) {\r\n        await apiBet(data, true).then(res => {\r\n          if (res.IsBetSucceed) {\r\n            this.$message({\r\n              message: this.$t(\"BettingSuccess\"),\r\n              duration: 2500,\r\n              type: \"success\",\r\n              center: true\r\n            });\r\n            // this.Alert.showMsg(\"下注成功\", \"success\", 2500, true, true);\r\n            this.showbet = false;\r\n            this.getrankmatchinfo();\r\n            this.fastnum = \"\";\r\n            // 下注成功音效\r\n            betSuccess.play();\r\n            // 彈出廣告\r\n            this.adTypeId = 2;\r\n            let data = {\r\n              flowAdTypeId: this.adTypeId\r\n            };\r\n            apiGetFlowAdByType(data, true).then(res => {\r\n              if(res.Data.Id == 0) {\r\n                this.isOpenAd = false;\r\n              } else {\r\n                this.isOpenAd = true;\r\n                this.AdObj = res.Data;\r\n              }\r\n              this.isBetDisable = false; // 防止连点\r\n            });\r\n            this.isFinished = false;\r\n          } else if(Math.abs(res.Code) >= 600) {\r\n            this.$message({\r\n              message: res.Message,\r\n              duration: 1000,\r\n              type: \"error\",\r\n              center: true\r\n            });\r\n            if (res.Message == \"余额不足\") {\r\n              // 彈出廣告\r\n              setTimeout(() => {\r\n                this.adTypeId = 2;\r\n                let data = {\r\n                  flowAdTypeId: this.adTypeId\r\n                };\r\n                apiGetFlowAdByType(data, true).then(res => {\r\n                  if(res.Data.Id == 0) {\r\n                    this.isOpenAd = false;\r\n                    } else {\r\n                    this.isOpenAd = true;\r\n                    this.AdObj = res.Data;\r\n                  }\r\n                });\r\n              }, 1000);\r\n              this.showbet = false;\r\n              this.isBetDisable = false; // 防止连点\r\n            }\r\n            this.isBetDisable = false; // 防止连点\r\n          }\r\n        });\r\n      } else {\r\n        this.$message.error(\"投注金额需要大于1元\");\r\n      }\r\n      // 刷新API\r\n      this.getMatchPlay();\r\n    },\r\n    async default() {      \r\n      // 沒有早盤的話跑今日\r\n      if (this.$store.state.match.Matchitems.length == 0) {\r\n        this.tabshow(1)\r\n        .then(() => {\r\n          // 沒有今日的話跑滾球\r\n          if (this.$store.state.match.Matchitems.length == 0) {\r\n            this.tabshow(2)\r\n          }\r\n        });\r\n      }\r\n      this.cycling();\r\n    },\r\n    //畫面一進來時候获取早盤玩法\r\n    async initGetMatchPlay() {\r\n      this.tabshow(0).then(() => {\r\n        this.default()\r\n      });\r\n    },\r\n    //获取赛事玩法\r\n    getMatchPlay() {\r\n      this.$store.dispatch(\"asyncGetMatchplay\", {\r\n        id: this.playtype\r\n      });\r\n    },\r\n    async tabshow(id) {\r\n      this.$store.commit(\"uploading\", true);\r\n      this.loading = true;\r\n      this.playtype = id;\r\n      if (id == 0) {\r\n        this.tab1 = true;\r\n        this.tab2 = false;\r\n        this.tab3 = false;\r\n      }\r\n      if (id == 1) {\r\n        this.tab1 = false;\r\n        this.tab2 = true;\r\n        this.tab3 = false;\r\n      }\r\n      if (id == 2) {\r\n        this.tab1 = false;\r\n        this.tab2 = false;\r\n        this.tab3 = true;\r\n      }\r\n       await this.$store.dispatch(\"asyncGetMatchplay\", {\r\n        id: id\r\n      });\r\n      this.cycling();\r\n    },\r\n\r\n    cycling() {\r\n      // 早盤\r\n      if (this.tab1) {\r\n        // 停止全部計時器\r\n        this.destroyed();\r\n        // 再開啟計時器\r\n        this.timer.timer1 = setInterval(() => {\r\n          this.getMatchPlay();\r\n        }, 30000);\r\n        this.countDownTime = 30;\r\n        this.countDown();\r\n      }\r\n\r\n      // 今日\r\n      if (this.tab2) {\r\n        // 停止全部計時器\r\n        this.destroyed();\r\n        // 再開啟計時器\r\n        this.timer.timer2 = setInterval(() => {\r\n          this.getMatchPlay();\r\n        }, 30000);\r\n        this.countDownTime = 30;\r\n        this.countDown();\r\n      }\r\n\r\n      // 滾球\r\n      if (this.tab3) {\r\n        // 停止全部計時器\r\n        this.destroyed();\r\n        // 再開啟計時器\r\n        this.timer.timer3 = setInterval(() => {\r\n          this.getMatchPlay();\r\n        }, 2000);\r\n      }\r\n    },\r\n    // 倒數計時\r\n    countDown() {\r\n      this.countDownTimer = setInterval(() => {\r\n        if (this.countDownTime <= 0) {\r\n          this.countDownTime = 30;\r\n        }\r\n        this.countDownTime = this.countDownTime - 1;\r\n      }, 1000);\r\n    },\r\n    // 手動刷新\r\n    refresh() {\r\n      this.getMatchPlay();\r\n      this.cycling();\r\n\r\n      let vm = this;\r\n        const m = vm.$message({\r\n          message: this.$t(\"RefreshedSuccessfully\"),\r\n          duration: 3000,\r\n          type: \"success\",\r\n          center: true\r\n        });\r\n        setTimeout(() => {m.close()}, 2000);\r\n    },\r\n    // 停止全部計時器\r\n    destroyed() {\r\n      clearInterval(this.timer.timer1);\r\n      clearInterval(this.timer.timer2);\r\n      clearInterval(this.timer.timer3);\r\n      clearInterval(this.countDownTimer);\r\n    },\r\n\r\n    // 新賠率\r\n    async newChangeOdds() {\r\n      if (this.playId == -1) {\r\n        return;\r\n      }\r\n      let data = {\r\n        playId: this.playId,\r\n        betType: 2\r\n      };\r\n      await apiGetBetResponse(data, true).then(res => {\r\n        if(Math.abs(res.Code) >= 600) {\r\n          this.$message({\r\n            message: res.Message,\r\n            duration: 3000,\r\n            type: \"error\",\r\n            center: true\r\n          });\r\n        } else {\r\n          this.betinfo = res;\r\n          this.newOdds = this.betinfo.OddsValue;\r\n        }\r\n      });\r\n    },\r\n\r\n    closeOddsChange() {\r\n      this.getMatchPlay();\r\n      this.showbet = false;\r\n      this.IsOddsChange = false;\r\n    },\r\n\r\n    // 廣告結束時傳回的值\r\n    finishedAd(bool) {\r\n      this.isFinished = bool;\r\n    }\r\n  },\r\n\r\n  // 跳出本頁時 vue hook(生命週期)\r\n  destroyed() {\r\n    clearInterval(this.timer.timer1);\r\n    clearInterval(this.timer.timer2);\r\n    clearInterval(this.timer.timer3);\r\n    clearInterval(this.countDownTimer);\r\n  }\r\n};\r\n",{"version":3,"sources":["RankMatch.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2RA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"RankMatch.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n  <div class=\"rank-match\">\r\n    <!-- 投注 -->\r\n    <transition name=\"fade\">\r\n      <model v-if=\"$store.state.match.loading\"></model>\r\n    </transition>\r\n    <transition name=\"fade\">\r\n      <i v-if=\"$store.state.match.loading\" class=\"el-icon-loading\"></i>\r\n    </transition>\r\n    <transition name=\"fade\">\r\n      <model v-if=\"showbet\"></model>\r\n    </transition>\r\n    <transition name=\"fade\">\r\n      <div class=\"dialog\" v-if=\"showbet\">\r\n        <div class=\"bet-head\">\r\n          <div class=\"home\">\r\n            <p>\r\n              {{\r\n                betinfo.MatchItemName.slice(\r\n                  0,\r\n                  betinfo.MatchItemName.indexOf(\"V\")\r\n                )\r\n              }}\r\n            </p>\r\n          </div>\r\n          <div class=\"away\">\r\n            <p>\r\n              {{\r\n                betinfo.MatchItemName.slice(\r\n                  betinfo.MatchItemName.indexOf(\"S\") + 1\r\n                )\r\n              }}\r\n            </p>\r\n          </div>\r\n        </div>\r\n        <div class=\"bet-main\">\r\n          <div class=\"bet-main__wrap\">\r\n            <div class=\"betinfo\">\r\n              <span class=\"betinfo__title\">{{ this.betinfo.Position }}</span>\r\n              <span class=\"betinfo__title\">@{{ this.betinfo.OddsValue }}</span>\r\n            </div>\r\n            <!-- 下注 -->\r\n            <div class=\"betin\">\r\n              <span class=\"betin-span\">{{ $t(\"BetAmount\") }}</span\r\n              ><input\r\n                @input=\"getmoney1\"\r\n                class=\"betin-input\"\r\n                type=\"text\"\r\n                v-model=\"betnum\"\r\n              />\r\n              <i class=\"add\" @click=\"addbet\"> </i\r\n              ><i class=\"lose\" @click=\"losebet\"></i>\r\n            </div>\r\n            <!-- 获得金额 -->\r\n            <div class=\"getmoney\">\r\n              <span class=\"betin-span\">{{ $t(\"WinableAmount\") }}</span\r\n              ><input\r\n                class=\"betin-input\"\r\n                type=\"text\"\r\n                v-model=\"money\"\r\n                disabled=\"disabled\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <div class=\"fastbet\">\r\n            <!-- <div\r\n              class=\"fastbet-num \"\r\n              :class=\"{ fastbetactive: fastnum == 10 }\"\r\n              @click=\"fastbet(10)\"\r\n            >\r\n              10金币\r\n            </div>\r\n            <div\r\n              class=\"fastbet-num \"\r\n              :class=\"{ fastbetactive: fastnum == 30 }\"\r\n              @click=\"fastbet(30)\"\r\n            >\r\n              30金币\r\n            </div>\r\n            <div\r\n              class=\"fastbet-num \"\r\n              :class=\"{ fastbetactive: fastnum == 50 }\"\r\n              @click=\"fastbet(50)\"\r\n            >\r\n              50金币\r\n            </div>\r\n            <div\r\n              class=\"fastbet-num \"\r\n              :class=\"{ fastbetactive: fastnum == 100 }\"\r\n              @click=\"fastbet(100)\"\r\n            >\r\n              100金币\r\n            </div> -->\r\n            <div class=\"slide-tooltip\">\r\n              <span class=\"slide-tooltip-text\">{{ rangeValue }}</span>\r\n            </div>\r\n            <el-slider\r\n              v-model=\"rangeValue\"\r\n              :show-tooltip=\"false\"\r\n              :min=\"betinfo.MinBetIntegral\"\r\n              :max=\"rangeMaxVal\"\r\n              @input=\"changeRangeVal()\"\r\n            ></el-slider>\r\n          </div>\r\n          <div class=\"bet-main__second__wrap\">\r\n            <div class=\"fastbet-text-wrap\">\r\n              <span class=\"fastbet_text\">{{ $t(\"QuicklySelectAmount\") }}</span>\r\n            </div>\r\n            <div class=\"rules\">\r\n              <span class=\"rules-text\">{{ $t(\"MinimumBetAmount\") }}</span\r\n              ><span class=\"rules-money\"\r\n                >{{ this.betinfo.MinBetIntegral }} {{ $t(\"Coins\") }}</span\r\n              >\r\n            </div>\r\n            <div class=\"btn betbtn\" @click=\"betClick()\">{{ $t(\"Bet\") }}</div>\r\n          </div>\r\n        </div>\r\n        <div class=\"close\" @click=\"closedialog\"></div>\r\n      </div>\r\n    </transition>\r\n\r\n    <!-- 賠率變化時的彈窗 -->\r\n    <transition name=\"fade\">\r\n      <model v-if=\"IsOddsChange\"></model>\r\n    </transition>\r\n    <transition name=\"fade\">\r\n      <div class=\"IsOddsChange\" v-if=\"IsOddsChange\">\r\n        <p>{{ $t(\"OddsChanged\") }}</p>\r\n        <div class=\"IsOddsChangeBtn\" @click=\"closeOddsChange()\">\r\n          {{ $t(\"Confirm\") }}\r\n        </div>\r\n      </div>\r\n    </transition>\r\n\r\n    <div class=\"match\">\r\n      <div class=\"rank-match-head\">\r\n        <back class=\"back-icon\"></back>\r\n        <div class=\"title\">{{ $store.state.match.MatchName }}</div>\r\n        <div class=\"num\"></div>\r\n        <div\r\n          class=\"count-down-wrap\"\r\n          v-if=\"\r\n            tab1 == true ||\r\n              tab2 == true ||\r\n              $store.state.match.Matchitems.length == 0\r\n          \"\r\n        >\r\n          <div class=\"countdown-second\" @click=\"refresh()\">\r\n            {{ countDownTime }}\r\n          </div>\r\n          <!-- <div class=\"refresh\" ></div> --><!-- 手動刷新按鈕，目前點選時鐘代替這個按鈕 -->\r\n        </div>\r\n      </div>\r\n      <div class=\"banner \" id=\"banner4\">\r\n        <div class=\"myrank\">\r\n          <p class=\"ptop\">{{ $t(\"MyRank\") }}</p>\r\n          <p class=\"pcontent\" v-if=\"rankinfo.Rank == -1\">\r\n            {{ $t(\"NoRanking\") }}\r\n          </p>\r\n          <p class=\"pcontent\" v-else>{{ rankinfo.Rank }}</p>\r\n        </div>\r\n        <div class=\"gold\">\r\n          <p class=\"ptop\">{{ $t(\"TotalCoins\") }}</p>\r\n          <p class=\"pcontent\" v-if=\"rankinfo.AvailableIntegral === -1\">\r\n            {{ $t(\"No\") }}\r\n          </p>\r\n          <p class=\"pcontent\" v-else>{{ rankinfo.AvailableIntegral }}</p>\r\n        </div>\r\n        <div class=\"banner-tabs\">\r\n          <div :class=\"{ 'tab-active': tab3, tab: true }\" @click=\"tabshow(2)\">\r\n            {{ $t(\"Boules\") }}\r\n          </div>\r\n\r\n          <div :class=\"{ 'tab-active': tab2, tab: true }\" @click=\"tabshow(1)\">\r\n            {{ $t(\"Today\") }}\r\n          </div>\r\n          <div :class=\"{ 'tab-active': tab1, tab: true }\" @click=\"tabshow(0)\">\r\n            {{ $t(\"MorningSession\") }}\r\n          </div>\r\n        </div>\r\n\r\n        <router-link to=\"/guize\"> <i class=\"banner-quset\"></i></router-link>\r\n      </div>\r\n      <div class=\"main-main\">\r\n        <div\r\n          class=\"rank-match-main\"\r\n          v-for=\"item in $store.state.match.Matchitems\"\r\n          :key=\"item.MatchItemId\"\r\n        >\r\n          <div class=\"title\">\r\n            <div class=\"title-left\">\r\n              <img\r\n                v-if=\"item.TeamMatchItemViewModels[0].Img\"\r\n                :src=\"item.TeamMatchItemViewModels[0].Img\"\r\n                class=\"home-img\"\r\n              />\r\n              <img v-else src=\"@/assets/instead_logo1.png\" class=\"home-img\" />\r\n              <span class=\"homename\">{{item.TeamMatchItemViewModels[0].TeamName}}</span>\r\n            </div>\r\n\r\n            <div class=\"title-center\">\r\n              <span class=\"home commondiv\">{{ $t(\"Host\") }}</span>\r\n              <span class=\"away commondiv\">{{ $t(\"Guest\") }}</span>\r\n            </div>\r\n\r\n            <div class=\"title-right\">\r\n              <span class=\"awayname\">{{item.TeamMatchItemViewModels[1].TeamName}}</span>\r\n              <img\r\n                v-if=\"item.TeamMatchItemViewModels[1].Img\"\r\n                :src=\"item.TeamMatchItemViewModels[1].Img\"\r\n                class=\"away-img\"\r\n              />\r\n              <img v-else src=\"@/assets/instead_logo1.png\" class=\"away-img\" />\r\n            </div>\r\n          </div>\r\n          <!-- tab -->\r\n\r\n          <div class=\"guess-main\">\r\n            <div class=\"guess-main-title\">\r\n              <div v-if=\"playtype == 2\" class=\"left\">\r\n                <p v-if=\"playtype == 2\">上27</p>\r\n                <p v-if=\"playtype == 2\">\r\n                  {{ item.TeamMatchItemViewModels[0].Score }}:\r\n                  {{ item.TeamMatchItemViewModels[1].Score }}\r\n                </p>\r\n              </div>\r\n              <div class=\"time\">\r\n                {{\r\n                  item.MatchItemStartTime.slice(\r\n                    0,\r\n                    item.MatchItemStartTime.indexOf(\"T\")\r\n                  )\r\n                }}\r\n                {{\r\n                  item.MatchItemStartTime.slice(\r\n                    item.MatchItemStartTime.indexOf(\"T\") + 1\r\n                  )\r\n                }}\r\n              </div>\r\n              <div\r\n                class=\"more\"\r\n                @click=\"gojump(item.MatchId)\"\r\n                v-if=\"playtype == 1 || playtype == 0\"\r\n              >\r\n                {{ $t(\"More\") }}\r\n              </div>\r\n            </div>\r\n            <div class=\"guess-main-content\">\r\n              <div\r\n                class=\"content-item\"\r\n                v-for=\"itembets in item.CommonPlayViewModelGroups\"\r\n                :key=\"itembets.id\"\r\n              >\r\n                <div\r\n                  v-for=\"itembet in itembets\"\r\n                  :key=\"itembet.id\"\r\n                  @click=\"showBetFn(itembet.PlayId)\"\r\n                  :class=\"{ pstyle: itembet.PlayId != -1 }\"\r\n                >\r\n                  {{ itembet.Text }}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"nodata\" v-if=\"$store.state.match.Matchitems.length == 0\">\r\n          <p>{{ $t(\"NoData\") }}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <!-- 廣告 -->\r\n    <FlowAd\r\n      :isOpenAd.sync=\"isOpenAd\"\r\n      :adTypeId=\"adTypeId\"\r\n      :isFinished.sync=\"isFinished\"\r\n      :AdObj =\"AdObj\"\r\n      @isFinished=\"finishedAd\"\r\n    />\r\n    <nav-bottom class=\"match-bottom\"></nav-bottom>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport NavBottom from \"@/components/Main/NavBottom.vue\";\r\nimport back from \"../components/Botton/back.vue\";\r\nimport model from \"../components/model\";\r\nimport { betSuccess } from \"@/utils/medias\";\r\nimport FlowAd from \"@/components/FlowAd\";\r\nimport {\r\n  apiGetBetResponse,\r\n  apiBet,\r\n  apiGetMemberMatchViewModel\r\n} from \"../api/match.js\";\r\nimport { apiGetFlowAdByType } from \"@/api/FlowAd.js\";\r\nexport default {\r\n  watch: {\r\n    betnum: function() {\r\n      if (\r\n        this.betinfo.PlayType == 3 ||\r\n        this.betinfo.PlayType == 4 ||\r\n        this.betinfo.PlayType == 5 ||\r\n        this.betinfo.PlayType == 6\r\n      ) {\r\n        this.money = (this.betnum * this.betinfo.OddsValue).toFixed(2);\r\n      } else {\r\n        this.money = (\r\n          this.betnum * this.betinfo.OddsValue -\r\n          this.betnum\r\n        ).toFixed(2);\r\n      }\r\n      this.rangeValue = parseInt(this.betnum);\r\n    }\r\n  },\r\n  components: {\r\n    NavBottom,\r\n    back,\r\n    model,\r\n    FlowAd\r\n  },\r\n\r\n  data() {\r\n    return {\r\n      tab1: true,\r\n      tab2: false,\r\n      tab3: false,\r\n\r\n      show: false,\r\n      showbet: false,\r\n      betnum: 0,\r\n      rangeValue: 0,\r\n      rangeMaxVal: 0,\r\n      money: \"\",\r\n      playtype: 0,\r\n      playId: \"\",\r\n      betinfo: \"\",\r\n      rankinfo: \"\",\r\n      fastnum: \"\",\r\n      IsOddsChange: false,\r\n      lastOdds: \"\",\r\n      newOdds: \"\",\r\n      timer: {\r\n        timer1: \"\",\r\n        timer2: \"\",\r\n        timer3: \"\"\r\n      },\r\n      countDownTimer: \"\",\r\n      countDownTime: 30,\r\n      qualifyingMinBet: 1,\r\n      isBetDisable: false,\r\n      isOpenAd: false,\r\n      adTypeId: 0,\r\n      isFinished: false,\r\n      AdObj: {},\r\n    };\r\n  },\r\n  created() {\r\n    // this.getMatchPlay();\r\n    this.initGetMatchPlay();\r\n    this.getrankmatchinfo();\r\n    // this.cycling();\r\n  },\r\n  methods: {\r\n    fastbet(id) {\r\n      this.fastnum = id;\r\n      this.betnum = id;\r\n    },\r\n    getrankmatchinfo() {\r\n      let data = {\r\n        matchId: this.$store.state.match.MatchId\r\n      };\r\n      apiGetMemberMatchViewModel(data, true).then(res => {\r\n        this.rankinfo = res;\r\n      });\r\n    },\r\n    gojump(id) {\r\n      this.$router.push(\"/matchmore\");\r\n    },\r\n    //关闭下注\r\n    closedialog() {\r\n      this.showbet = false;\r\n    },\r\n\r\n    //下注界面\r\n    showBetFn(id) {\r\n      this.betnum = 0;\r\n      // if (id > 0) {\r\n      //   this.showbet = true;\r\n      // }\r\n      this.playId = id;\r\n      if (this.playId == -1) {\r\n        return;\r\n      }\r\n      let data = {\r\n        playId: id,\r\n        betType: 2\r\n      };\r\n      apiGetBetResponse(data, true).then(res => {\r\n        if(Math.abs(res.Code) >= 600) {\r\n          this.$message({\r\n            message: res.Message,\r\n            duration: 3000,\r\n            type: \"error\",\r\n            center: true\r\n          });\r\n        } else {\r\n          this.showbet = true;\r\n\r\n          this.betinfo = res;\r\n          // 上次的舊賠率\r\n          this.lastOdds = this.betinfo.OddsValue;\r\n          // 投注金額預設最低投注金額\r\n          this.betnum = res.MinBetIntegral;\r\n          this.rangeValue = this.betnum;\r\n\r\n          // 判斷最大單筆投注金額回傳是否為-1 如是拉桿的最大值為10000\r\n          if (res.MaxBetIntegral === -1) this.rangeMaxVal = 10000;\r\n          else this.rangeMaxVal = res.MaxBetIntegral;\r\n\r\n          }\r\n          // 判斷玩家餘額小於最小可投注額時，指针放置在开始位置显示最小可投注额 且不可拖动\r\n          if (this.betinfo.AvailableIntegral < this.betinfo.MinBetIntegral) {\r\n            this.isDisable = true;\r\n            return;\r\n          // 判斷玩家餘額跟回傳的MaxBetIntegral 哪個小就取哪個\r\n          if (this.betinfo.AvailableIntegral > res.MaxBetIntegral) {\r\n            this.rangeMaxVal = res.MaxBetIntegral;\r\n            this.isDisable = false;\r\n          }\r\n          else if (this.betinfo.AvailableIntegral < res.MaxBetIntegral) {\r\n            this.rangeMaxVal = this.betinfo.AvailableIntegral;\r\n            this.isDisable = false;\r\n          }\r\n          else if (this.betinfo.AvailableIntegral = res.MaxBetIntegral) {\r\n            this.rangeMaxVal = this.betinfo.AvailableIntegral;\r\n            this.isDisable = false;\r\n          }\r\n        }\r\n      });\r\n    },\r\n    changeRangeVal() {\r\n      this.betnum = this.rangeValue;\r\n\r\n      let tooltip = document.querySelector(\".slide-tooltip\");\r\n      let rangeBtn = document.querySelector(\".el-slider__bar\");\r\n\r\n      let tooltipWidth = tooltip.getBoundingClientRect().width; // 提示框最正確的寬度\r\n      let rangeBtnOffset = rangeBtn.offsetWidth; // 拖動拉桿時拉桿條的偏移量\r\n      let rangeBtnOffsetParent = rangeBtn.offsetParent.offsetLeft; // 拉桿條離父層左邊(父層padding-left)的偏移量\r\n\r\n      let tolerance = tooltipWidth / 2 + (rangeBtnOffsetParent - tooltipWidth); // 公差\r\n      if (!this.isrunTwice) {\r\n        tooltip.style.left = tolerance + \"px\";\r\n        this.isrunTwice = true;\r\n      } else {\r\n        tooltip.style.left = rangeBtnOffset + tolerance + \"px\";\r\n      }\r\n    },\r\n    //投注金额\r\n    addbet() {\r\n      this.betnum = this.betnum + 1;\r\n    },\r\n    losebet() {\r\n      if (this.betnum == 0) {\r\n        return;\r\n      }\r\n      this.betnum = this.betnum - 1;\r\n    },\r\n    //可赢金额\r\n    getmoney1() {\r\n      // this.money = this.betnum * this.betinfo.OddsValue;\r\n      // this.money = this.money.toFixed(2);\r\n    },\r\n    // 點擊下注時判斷\r\n    betClick() {\r\n      this.newChangeOdds().then(() => {\r\n        // 如果兩個賠率不同\r\n        if (this.lastOdds !== this.newOdds) {\r\n          this.showbet = false;\r\n          this.IsOddsChange = true;\r\n          this.getMatchPlay();\r\n        } else {\r\n          this.bet();\r\n        }\r\n      });\r\n    },\r\n    //下注\r\n    async bet() {\r\n      // 防止连点\r\n      if (this.isBetDisable || !this.showbet) {\r\n        return false;\r\n      }\r\n      this.isBetDisable = true; // 防止连点\r\n\r\n      let data = {\r\n        playId: this.playId,\r\n        betIntegral: this.betnum,\r\n        betType: 2\r\n      };\r\n      if (this.betnum >= 1) {\r\n        await apiBet(data, true).then(res => {\r\n          if (res.IsBetSucceed) {\r\n            this.$message({\r\n              message: this.$t(\"BettingSuccess\"),\r\n              duration: 2500,\r\n              type: \"success\",\r\n              center: true\r\n            });\r\n            // this.Alert.showMsg(\"下注成功\", \"success\", 2500, true, true);\r\n            this.showbet = false;\r\n            this.getrankmatchinfo();\r\n            this.fastnum = \"\";\r\n            // 下注成功音效\r\n            betSuccess.play();\r\n            // 彈出廣告\r\n            this.adTypeId = 2;\r\n            let data = {\r\n              flowAdTypeId: this.adTypeId\r\n            };\r\n            apiGetFlowAdByType(data, true).then(res => {\r\n              if(res.Data.Id == 0) {\r\n                this.isOpenAd = false;\r\n              } else {\r\n                this.isOpenAd = true;\r\n                this.AdObj = res.Data;\r\n              }\r\n              this.isBetDisable = false; // 防止连点\r\n            });\r\n            this.isFinished = false;\r\n          } else if(Math.abs(res.Code) >= 600) {\r\n            this.$message({\r\n              message: res.Message,\r\n              duration: 1000,\r\n              type: \"error\",\r\n              center: true\r\n            });\r\n            if (res.Message == \"余额不足\") {\r\n              // 彈出廣告\r\n              setTimeout(() => {\r\n                this.adTypeId = 2;\r\n                let data = {\r\n                  flowAdTypeId: this.adTypeId\r\n                };\r\n                apiGetFlowAdByType(data, true).then(res => {\r\n                  if(res.Data.Id == 0) {\r\n                    this.isOpenAd = false;\r\n                    } else {\r\n                    this.isOpenAd = true;\r\n                    this.AdObj = res.Data;\r\n                  }\r\n                });\r\n              }, 1000);\r\n              this.showbet = false;\r\n              this.isBetDisable = false; // 防止连点\r\n            }\r\n            this.isBetDisable = false; // 防止连点\r\n          }\r\n        });\r\n      } else {\r\n        this.$message.error(\"投注金额需要大于1元\");\r\n      }\r\n      // 刷新API\r\n      this.getMatchPlay();\r\n    },\r\n    async default() {      \r\n      // 沒有早盤的話跑今日\r\n      if (this.$store.state.match.Matchitems.length == 0) {\r\n        this.tabshow(1)\r\n        .then(() => {\r\n          // 沒有今日的話跑滾球\r\n          if (this.$store.state.match.Matchitems.length == 0) {\r\n            this.tabshow(2)\r\n          }\r\n        });\r\n      }\r\n      this.cycling();\r\n    },\r\n    //畫面一進來時候获取早盤玩法\r\n    async initGetMatchPlay() {\r\n      this.tabshow(0).then(() => {\r\n        this.default()\r\n      });\r\n    },\r\n    //获取赛事玩法\r\n    getMatchPlay() {\r\n      this.$store.dispatch(\"asyncGetMatchplay\", {\r\n        id: this.playtype\r\n      });\r\n    },\r\n    async tabshow(id) {\r\n      this.$store.commit(\"uploading\", true);\r\n      this.loading = true;\r\n      this.playtype = id;\r\n      if (id == 0) {\r\n        this.tab1 = true;\r\n        this.tab2 = false;\r\n        this.tab3 = false;\r\n      }\r\n      if (id == 1) {\r\n        this.tab1 = false;\r\n        this.tab2 = true;\r\n        this.tab3 = false;\r\n      }\r\n      if (id == 2) {\r\n        this.tab1 = false;\r\n        this.tab2 = false;\r\n        this.tab3 = true;\r\n      }\r\n       await this.$store.dispatch(\"asyncGetMatchplay\", {\r\n        id: id\r\n      });\r\n      this.cycling();\r\n    },\r\n\r\n    cycling() {\r\n      // 早盤\r\n      if (this.tab1) {\r\n        // 停止全部計時器\r\n        this.destroyed();\r\n        // 再開啟計時器\r\n        this.timer.timer1 = setInterval(() => {\r\n          this.getMatchPlay();\r\n        }, 30000);\r\n        this.countDownTime = 30;\r\n        this.countDown();\r\n      }\r\n\r\n      // 今日\r\n      if (this.tab2) {\r\n        // 停止全部計時器\r\n        this.destroyed();\r\n        // 再開啟計時器\r\n        this.timer.timer2 = setInterval(() => {\r\n          this.getMatchPlay();\r\n        }, 30000);\r\n        this.countDownTime = 30;\r\n        this.countDown();\r\n      }\r\n\r\n      // 滾球\r\n      if (this.tab3) {\r\n        // 停止全部計時器\r\n        this.destroyed();\r\n        // 再開啟計時器\r\n        this.timer.timer3 = setInterval(() => {\r\n          this.getMatchPlay();\r\n        }, 2000);\r\n      }\r\n    },\r\n    // 倒數計時\r\n    countDown() {\r\n      this.countDownTimer = setInterval(() => {\r\n        if (this.countDownTime <= 0) {\r\n          this.countDownTime = 30;\r\n        }\r\n        this.countDownTime = this.countDownTime - 1;\r\n      }, 1000);\r\n    },\r\n    // 手動刷新\r\n    refresh() {\r\n      this.getMatchPlay();\r\n      this.cycling();\r\n\r\n      let vm = this;\r\n        const m = vm.$message({\r\n          message: this.$t(\"RefreshedSuccessfully\"),\r\n          duration: 3000,\r\n          type: \"success\",\r\n          center: true\r\n        });\r\n        setTimeout(() => {m.close()}, 2000);\r\n    },\r\n    // 停止全部計時器\r\n    destroyed() {\r\n      clearInterval(this.timer.timer1);\r\n      clearInterval(this.timer.timer2);\r\n      clearInterval(this.timer.timer3);\r\n      clearInterval(this.countDownTimer);\r\n    },\r\n\r\n    // 新賠率\r\n    async newChangeOdds() {\r\n      if (this.playId == -1) {\r\n        return;\r\n      }\r\n      let data = {\r\n        playId: this.playId,\r\n        betType: 2\r\n      };\r\n      await apiGetBetResponse(data, true).then(res => {\r\n        if(Math.abs(res.Code) >= 600) {\r\n          this.$message({\r\n            message: res.Message,\r\n            duration: 3000,\r\n            type: \"error\",\r\n            center: true\r\n          });\r\n        } else {\r\n          this.betinfo = res;\r\n          this.newOdds = this.betinfo.OddsValue;\r\n        }\r\n      });\r\n    },\r\n\r\n    closeOddsChange() {\r\n      this.getMatchPlay();\r\n      this.showbet = false;\r\n      this.IsOddsChange = false;\r\n    },\r\n\r\n    // 廣告結束時傳回的值\r\n    finishedAd(bool) {\r\n      this.isFinished = bool;\r\n    }\r\n  },\r\n\r\n  // 跳出本頁時 vue hook(生命週期)\r\n  destroyed() {\r\n    clearInterval(this.timer.timer1);\r\n    clearInterval(this.timer.timer2);\r\n    clearInterval(this.timer.timer3);\r\n    clearInterval(this.countDownTimer);\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\n.el-icon-loading {\r\n  position: absolute;\r\n  left: 44%;\r\n  top: 34%;\r\n  transform: translateX(-50%);\r\n  z-index: 1111;\r\n  font-size: 1rem;\r\n  color: #fff;\r\n}\r\n#banner4 {\r\n  margin-top: 2.13rem !important;\r\n  position: relative;\r\n  .myrank {\r\n    text-align: center;\r\n    position: absolute;\r\n    left: 1.18rem;\r\n    bottom: 0.7rem;\r\n  }\r\n  .gold {\r\n    text-align: center;\r\n    position: absolute;\r\n    right: 1.35rem;\r\n    bottom: 0.7rem;\r\n  }\r\n  .ptop {\r\n    font-size: 0.3rem /* 30/100 */;\r\n    color: white;\r\n    line-height: 0.33rem /* 0.33/100 */;\r\n    margin-bottom: 0.05rem /* 5/100 */;\r\n  }\r\n  .pcontent {\r\n    font-size: 0.22rem /* 22/100 */;\r\n    color: #ffc700;\r\n    font-weight: 700;\r\n  }\r\n}\r\n/* .fade-enter,\r\n.fade-leave-to {\r\n  opacity: 0;\r\n}\r\n.fade-enter-active,\r\n.fade-leave-active {\r\n  transition:  0.5s;\r\n} */\r\n.fade-enter,\r\n.fade-leave-to {\r\n  opacity: 0;\r\n}\r\n.fade-leave,\r\n.fade-enter-to {\r\n  opacity: 1;\r\n}\r\n.fade-enter-active,\r\n.fade-leave-active {\r\n  transition: all 0.5s;\r\n}\r\n\r\n// element UI 的 slide拉桿樣式\r\n::v-deep .el-slider__button {\r\n  width: 0.32rem !important;\r\n  height: 0.32rem !important;\r\n  border: none !important;\r\n  box-shadow: 0rem 0rem 0.05rem 0.02rem rgba(51, 51, 102, 0.5);\r\n}\r\n::v-deep .el-slider__runway {\r\n  background-color: #949494;\r\n}\r\n::v-deep .el-tooltip__popper {\r\n  padding: 0.05rem 0.02rem !important;\r\n}\r\n</style>\r\n"]}]}