{"remainingRequest":"C:\\Users\\Yang\\Desktop\\新增資料夾\\竞猜可换色板\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Yang\\Desktop\\新增資料夾\\竞猜可换色板\\src\\views\\Matchmore.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Yang\\Desktop\\新增資料夾\\竞猜可换色板\\src\\views\\Matchmore.vue","mtime":1607510865510},{"path":"C:\\Users\\Yang\\Desktop\\新增資料夾\\竞猜可换色板\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Yang\\Desktop\\新增資料夾\\竞猜可换色板\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Yang\\Desktop\\新增資料夾\\竞猜可换色板\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport NavBottom from \"@/components/Main/NavBottom.vue\";\r\nimport back from \"../components/Botton/back.vue\";\r\nimport model from \"../components/model\";\r\nimport { apiGetBetResponse, apiBet } from \"../api/match.js\";\r\nimport { betSuccess } from \"@/utils/medias\";\r\nexport default {\r\n  watch: {\r\n    betnum: function() {\r\n      if (\r\n        this.betinfo.PlayType == 3 ||\r\n        this.betinfo.PlayType == 4 ||\r\n        this.betinfo.PlayType == 5 ||\r\n        this.betinfo.PlayType == 6\r\n      ) {\r\n        this.money = (this.betnum * this.betinfo.OddsValue).toFixed(2);\r\n      } else {\r\n        this.money = (\r\n          this.betnum * this.betinfo.OddsValue -\r\n          this.betnum\r\n        ).toFixed(2);\r\n      }\r\n      this.rangeValue = parseInt(this.betnum);\r\n    }\r\n  },\r\n  components: {\r\n    NavBottom,\r\n    back,\r\n    model\r\n  },\r\n  created() {\r\n    // this.getMatchPlay();\r\n    this.getMatchMorePlay();\r\n  },\r\n  data() {\r\n    return {\r\n      tab1: true,\r\n      tab2: false,\r\n      tab3: false,\r\n\r\n      show: false,\r\n      showbet: false,\r\n      betnum: 0,\r\n      rangeValue: 0,\r\n      rangeMaxVal: 0,\r\n      money: \"\",\r\n      playtype: 11,\r\n      playId: \"\",\r\n      betinfo: \"\",\r\n      fastnum: \"\"\r\n    };\r\n  },\r\n  methods: {\r\n    fastbet(id) {\r\n      this.fastnum = id;\r\n      this.betnum = id;\r\n    },\r\n    gojump() {\r\n      this.$router.go(-1);\r\n    },\r\n    //关闭下注\r\n    closedialog() {\r\n      this.showbet = false;\r\n    },\r\n\r\n    showBetFn(id) {\r\n      // if (id > 0) {\r\n      //   this.showbet = true;\r\n      // }\r\n      this.playId = id;\r\n      if (this.playId == -1) {\r\n        return;\r\n      }\r\n      let data = {\r\n        playId: id,\r\n        betType: 1\r\n      };\r\n      apiGetBetResponse(data, true).then(res => {\r\n        if (Math.abs(res.Code) >= 600) {\r\n          this.$message({\r\n            message: res.Message,\r\n            duration: 3000,\r\n            type: \"error\",\r\n            center: true\r\n          });\r\n        } else {\r\n          this.showbet = true;\r\n\r\n          this.betinfo = res;\r\n\r\n          // 投注金額預設最低投注金額\r\n          this.betnum = res.MinBetIntegral;\r\n          this.rangeValue = this.betnum;\r\n\r\n          // 判斷最大單筆投注金額回傳是否為-1 如是拉桿的最大值為10000\r\n          if (res.MaxBetIntegral === -1) this.rangeMaxVal = 10000;\r\n          else this.rangeMaxVal = res.MaxBetIntegral;\r\n\r\n          // 判斷玩家餘額小於最小可投注額時，指针放置在开始位置显示最小可投注额 且不可拖动\r\n          if (this.betinfo.AvailableIntegral < this.betinfo.MinBetIntegral) {\r\n            this.isDisable = true;\r\n            return;\r\n          }\r\n          // 判斷玩家餘額跟回傳的MaxBetIntegral 哪個小就取哪個\r\n          if (this.betinfo.AvailableIntegral > res.MaxBetIntegral) {\r\n            this.rangeMaxVal = res.MaxBetIntegral;\r\n            this.isDisable = false;\r\n          }\r\n          else if (this.betinfo.AvailableIntegral < res.MaxBetIntegral) {\r\n            this.rangeMaxVal = this.betinfo.AvailableIntegral;\r\n            this.isDisable = false;\r\n          }\r\n          else if (this.betinfo.AvailableIntegral = res.MaxBetIntegral) {\r\n            this.rangeMaxVal = this.betinfo.AvailableIntegral;\r\n            this.isDisable = false;\r\n          }\r\n        }\r\n      });\r\n    },\r\n    changeRangeVal() {\r\n      this.betnum = this.rangeValue;\r\n\r\n      let tooltip = document.querySelector(\".slide-tooltip\");\r\n      let rangeBtn = document.querySelector(\".el-slider__bar\");\r\n\r\n      let tooltipWidth = tooltip.getBoundingClientRect().width; // 提示框最正確的寬度\r\n      let rangeBtnOffset = rangeBtn.offsetWidth; // 拖動拉桿時拉桿條的偏移量\r\n      let rangeBtnOffsetParent = rangeBtn.offsetParent.offsetLeft; // 拉桿條離父層左邊(父層padding-left)的偏移量\r\n\r\n      let tolerance = tooltipWidth / 2 + (rangeBtnOffsetParent - tooltipWidth); // 公差\r\n      if (!this.isrunTwice) {\r\n        tooltip.style.left = tolerance + \"px\";\r\n        this.isrunTwice = true;\r\n      } else {\r\n        tooltip.style.left = rangeBtnOffset + tolerance + \"px\";\r\n      }\r\n    },\r\n    //投注金额\r\n    addbet() {\r\n      this.betnum = this.betnum + 10;\r\n    },\r\n    losebet() {\r\n      this.betnum = this.betnum - 10;\r\n    },\r\n    //可赢金额\r\n    getmoney() {\r\n      this.money = this.betnum * this.betinfo.OddsValue;\r\n    },\r\n    //下注\r\n    bet() {\r\n      let data = {\r\n        playId: this.playId,\r\n        betIntegral: this.betnum,\r\n        betType: 1\r\n      };\r\n      if (this.betnum >= 10) {\r\n        apiBet(data, true).then(res => {\r\n          if (res.IsBetSucceed) {\r\n            this.$message({\r\n              message: this.$t(\"BettingSuccess\"),\r\n              duration: 2500,\r\n              type: \"success\",\r\n              center: true\r\n            });\r\n            this.showbet = false;\r\n            this.fastnum = \"\";\r\n            // 下注成功音效\r\n            betSuccess.play();\r\n          } else if (Math.abs(res.Code) >= 600) {\r\n            this.$message({\r\n              message: res.Message,\r\n              duration: 1000,\r\n              type: \"error\",\r\n              center: true\r\n            });\r\n          }\r\n        });\r\n      } else {\r\n        this.$message.error(this.$t(\"BetErrorMessage\"));\r\n      }\r\n    },\r\n    //获取赛事玩法\r\n    getMatchPlay() {\r\n      this.$store.dispatch(\"asyncGetMatchplay\", {\r\n        id: this.playtype\r\n      });\r\n    },\r\n    //更多玩法\r\n    getMatchMorePlay(id) {\r\n      let data = {\r\n        playTypeList: id || this.playtype\r\n      };\r\n      this.$store.dispatch(\"asyncGetMatchMorePlay\", {\r\n        data\r\n      });\r\n    },\r\n    tabshow1(id) {\r\n      this.$store.commit(\"uploading\", true);\r\n      this.playtype = id;\r\n      this.tab1 = true;\r\n      this.tab2 = false;\r\n      this.tab3 = false;\r\n      this.getMatchMorePlay(id);\r\n    },\r\n    tabshow2(id) {\r\n      this.$store.commit(\"uploading\", true);\r\n      this.playtype = id;\r\n      this.tab1 = false;\r\n      this.tab2 = true;\r\n      this.tab3 = false;\r\n      this.getMatchMorePlay(id);\r\n    },\r\n    tabshow3(id) {\r\n      this.$store.commit(\"uploading\", true);\r\n      this.playtype = id;\r\n      this.tab1 = false;\r\n      this.tab2 = false;\r\n      this.tab3 = true;\r\n      this.getMatchMorePlay(id);\r\n    }\r\n  }\r\n};\r\n",null]}