{"remainingRequest":"C:\\work\\竞猜可换色板\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\work\\竞猜可换色板\\src\\components\\MainGame.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\work\\竞猜可换色板\\src\\components\\MainGame.vue","mtime":1604561958842},{"path":"C:\\work\\竞猜可换色板\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\work\\竞猜可换色板\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\work\\竞猜可换色板\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\work\\竞猜可换色板\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\work\\竞猜可换色板\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport {\r\n  apiGetRecommendMatchItem,\r\n  apiGetBetResponse,\r\n  apiBetRecommend,\r\n  apiIsMaintenance\r\n} from \"@/api/match.js\";\r\nimport Tinder from \"vue-tinder\";\r\nimport Vue from \"vue\";\r\nimport { Dialog } from \"vant\";\r\nimport { Image } from \"vant\";\r\nimport { randomBytes } from \"crypto\";\r\nimport { betSuccess, betPass } from \"@/utils/medias\";\r\nimport { apiGetUserInfo } from \"@/api/User.js\";\r\nVue.use(Dialog).use(Image);\r\nexport default {\r\n  name: \"homeCard\",\r\n  components: {\r\n    Tinder\r\n  },\r\n  data() {\r\n    return {\r\n      isMaintenance: false,\r\n      noData: true,\r\n      isSwipe: true,\r\n      isLoading: false,\r\n      tan: false,\r\n      games: [], //比赛集\r\n      matchList: [],\r\n      previousGame: null,\r\n      playIdIndex: 0, //当前盘口位置\r\n      pageIndex: 1,\r\n      pageSize: 15,\r\n      blank: false\r\n    };\r\n  },\r\n  filters: {\r\n    host(val) {\r\n      if (val) {\r\n        return \"主\";\r\n      } else if (!val) {\r\n        return \"客\";\r\n      }\r\n    }\r\n  },\r\n  computed: {},\r\n  created() {\r\n    this.getMatchList();\r\n    this.getMsg();\r\n  },\r\n  methods: {\r\n    getMsg() {\r\n      let data = {};\r\n      apiGetUserInfo(data, true).then(res => {\r\n        localStorage.setItem(\"RankId\", res.RankId);\r\n        localStorage.setItem(\"nickName\", res.NickName);\r\n        localStorage.setItem(\"UImg\", res.UImg);\r\n      });\r\n    },\r\n    // gomatch() {\r\n    //   this.$router.push(\"/gameSport\");\r\n    // },\r\n    onSubmit(choice) {\r\n      // choice.type： 结果，'like'：右滑, 'nope'：左滑, 'super'：上滑\r\n      // choice.key：  被移除卡片的 keyName\r\n      // choice.item： queue 中的子对象\r\n      this.previousGame = choice.item;\r\n      if (choice.type == \"nope\") {\r\n        // 左滑音效\r\n        betPass.play();\r\n      } else if (choice.type == \"like\") {\r\n        this.que();\r\n        // 右滑音效\r\n        betSuccess.play();\r\n      }\r\n      if (this.$refs.tinder.queue.length == 0) {\r\n        this.getMatchList();\r\n      }\r\n    },\r\n    goGames() {\r\n      this.$router.push(\"/gamesport\");\r\n    },\r\n    getMatchList() {\r\n      let data = {\r\n        index: this.pageIndex,\r\n        count: this.pageSize\r\n      };\r\n      this.isLoading = !this.isLoading;\r\n      apiGetRecommendMatchItem(data).then(res => {\r\n        this.pageIndex++;\r\n        this.isLoading = !this.isLoading;\r\n        if (res.Data.length == 0) {\r\n          this.noData = true;\r\n          //维护检查\r\n          apiIsMaintenance().then(res => {\r\n            this.isMaintenance = res.IsMaintenance;\r\n          });\r\n        } else {\r\n          this.games = res.Data;\r\n          this.randomGames();\r\n          this.noData = false;\r\n        }\r\n        if (this.pageIndex > res.TotalPages) {\r\n          this.pageIndex = 1;\r\n        }\r\n        this.matchList = res.Data;\r\n        if (this.matchList.length == 0) {\r\n          setTimeout(() => {\r\n            this.blank = true;\r\n          }, 500);\r\n        } else {\r\n          this.blank = false;\r\n        }\r\n      });\r\n    },\r\n    quxiao() {\r\n      this.tan = false;\r\n      this.$refs[\"tinder\"].decide([this.previousGame]);\r\n    },\r\n    que() {\r\n      let data = {\r\n        playId: this.previousGame.PlayId,\r\n        betIntegral: this.previousGame.MinBetAmount\r\n      };\r\n      apiBetRecommend(data, true).then(res => {\r\n        if (res.IsBetSucceed) {\r\n          const m = this.$message({\r\n            message:\r\n              this.$t(\"BettingSuccessfulPrompt\") + \" \" + res.AvailableIntegral,\r\n            type: \"success\",\r\n            duration: 1500\r\n          });\r\n          setTimeout(() => m.close(), 1200);\r\n        } else if (res.Code == 600) {\r\n          const m = this.$message({\r\n            message: res.Message,\r\n            type: \"error\",\r\n            duration: 1000\r\n          });\r\n          setTimeout(() => m.close(), 1200);\r\n          this.$refs[\"tinder\"].decide([this.previousGame]);\r\n        }\r\n      });\r\n      this.tan = false;\r\n    },\r\n    // 隨機組合\r\n    randomGames() {\r\n      if (this.games) {\r\n        this.games.sort(function() {\r\n          return 0.5 - Math.random();\r\n        });\r\n      }\r\n    }\r\n\r\n  }\r\n};\r\n",null]}